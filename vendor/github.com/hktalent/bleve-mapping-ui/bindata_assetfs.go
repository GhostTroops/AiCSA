// Code generated by go-bindata.
// sources:
// static-bleve-mapping/js/mapping/analysis-analyzer.js
// static-bleve-mapping/js/mapping/analysis-charfilter.js
// static-bleve-mapping/js/mapping/analysis-tokenfilter.js
// static-bleve-mapping/js/mapping/analysis-tokenizer.js
// static-bleve-mapping/js/mapping/analysis-wordlist.js
// static-bleve-mapping/js/mapping/analysis.js
// static-bleve-mapping/js/mapping/index-mapping.js
// static-bleve-mapping/js/mapping/type-mapping.js
// static-bleve-mapping/partials/analysis/analyzer.html
// static-bleve-mapping/partials/analysis/analyzers.html
// static-bleve-mapping/partials/analysis/charfilter.html
// static-bleve-mapping/partials/analysis/charfilters/generic.html
// static-bleve-mapping/partials/analysis/charfilters/regexp.html
// static-bleve-mapping/partials/analysis/charfilters.html
// static-bleve-mapping/partials/analysis/tokenfilter.html
// static-bleve-mapping/partials/analysis/tokenfilters/dict_compound.html
// static-bleve-mapping/partials/analysis/tokenfilters/edge_ngram.html
// static-bleve-mapping/partials/analysis/tokenfilters/elision.html
// static-bleve-mapping/partials/analysis/tokenfilters/generic.html
// static-bleve-mapping/partials/analysis/tokenfilters/keyword_marker.html
// static-bleve-mapping/partials/analysis/tokenfilters/length.html
// static-bleve-mapping/partials/analysis/tokenfilters/ngram.html
// static-bleve-mapping/partials/analysis/tokenfilters/normalize_unicode.html
// static-bleve-mapping/partials/analysis/tokenfilters/shingle.html
// static-bleve-mapping/partials/analysis/tokenfilters/stop_tokens.html
// static-bleve-mapping/partials/analysis/tokenfilters/truncate_token.html
// static-bleve-mapping/partials/analysis/tokenfilters/wordmap.html
// static-bleve-mapping/partials/analysis/tokenfilters.html
// static-bleve-mapping/partials/analysis/tokenizer.html
// static-bleve-mapping/partials/analysis/tokenizers/exception.html
// static-bleve-mapping/partials/analysis/tokenizers/generic.html
// static-bleve-mapping/partials/analysis/tokenizers/regexp.html
// static-bleve-mapping/partials/analysis/tokenizers.html
// static-bleve-mapping/partials/analysis/wordlist.html
// static-bleve-mapping/partials/analysis/wordlists.html
// static-bleve-mapping/partials/mapping/index-mapping.html
// static-bleve-mapping/partials/mapping/type-mapping-tree.html
// static-bleve-mapping/partials/mapping/type-mapping.html
// DO NOT EDIT!

package mapping

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"github.com/elazarl/go-bindata-assetfs"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _staticBleveMappingJsMappingAnalysisAnalyzerJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x57\xcd\x6e\xe3\x36\x10\xbe\xe7\x29\x18\x61\x11\xcb\x58\xc3\x41\xaf\x35\x72\xd8\x2e\x50\xa0\x87\xf4\xb4\x37\x23\x08\xb8\xe2\x28\x26\x42\x51\x2a\x49\x79\xe3\x0d\xfc\xee\x1d\x52\x7f\x24\x25\xc5\x76\x83\xa0\x6d\xb0\xf0\x8a\x9c\x99\x8f\x33\x1f\x67\x86\x64\x5e\xcb\xcc\xf0\x52\x92\xdf\x04\xec\xe1\x8b\xa4\xe2\xf0\x13\xd4\x7d\xc9\xa8\xf8\x6a\x94\x48\x3f\xe9\xac\xac\x60\x45\x3e\x15\x76\xea\x0f\xa9\x0d\x95\x99\x1d\xef\x8c\xa9\x56\x57\xe4\xc4\x9f\xa4\x05\x2a\xef\xa9\xa8\xf1\xbf\x82\x56\x15\x97\x4f\x2b\x82\x20\x86\x67\x8f\x95\x82\x9c\xbf\x2c\xc9\xab\x83\x69\x56\x5a\x97\x8a\x3f\xfd\x89\x56\xe4\xce\x19\x6f\x7c\x99\x9c\x99\x07\xa5\x4a\x75\x0f\x5a\xd3\x27\x2b\x4f\x92\x40\x9a\x97\xaa\xa8\xa8\xd9\x8d\x25\xad\x43\x28\x68\xbf\x02\x69\xe0\x25\xea\x04\xe3\xcd\x95\xaf\x4a\x5b\xde\x50\xeb\xf5\xd8\x80\xdc\xde\x12\x14\x1d\x08\x97\x4d\xf8\x04\xdd\x20\xc0\xb8\xc1\x65\x9c\x82\x1d\xa7\x7b\xaa\xc8\x73\xaf\xd3\x51\xd1\xda\x4b\x00\x46\x18\x40\x85\xc0\x0e\xab\xcc\x71\x4e\x1b\x9c\xa5\x4a\xd1\x83\xee\x95\x79\x4e\xd2\x67\x72\x87\x01\x66\x3b\xaa\x1e\x73\x2e\x0c\x28\x9d\xf8\x78\x6e\x37\xe0\x87\x95\xb7\x62\x74\x76\xfb\xb0\x09\x14\x7a\x9f\xb2\x9c\xf7\x5e\xad\x7d\xcc\x18\x72\x0c\xbb\xae\x6a\xbd\x4b\xc7\x96\x5b\xc4\x7c\x58\x86\xeb\x1d\x83\x51\x44\x66\x60\x6d\xb7\x3d\x58\x66\x00\x3a\x12\x10\x1a\x3c\x0e\x4c\xf9\x0c\xf2\x2d\x12\x9c\xc2\x19\x2c\x18\x9f\x85\x00\x75\x86\x06\x1f\xd8\xe7\x21\xb0\xdd\x9a\x4b\x89\x08\xcc\x1b\x26\xfc\x95\x46\x54\xbc\xbe\x85\xb6\x7d\x7e\x40\x08\xe7\x17\x7e\x7a\xb6\x57\xcd\xaf\x9f\xd7\x6e\x15\x8e\x46\xb6\x22\x3b\xaa\x7c\x05\x51\x52\xf6\x2d\x56\xea\x7a\x4a\xea\xb3\xe4\x1a\xc6\xba\x2a\xb5\x49\x17\xb7\xb4\xe2\xb7\x8f\x21\xf8\x62\xd5\xd6\xe0\x72\xad\xeb\x2c\xc3\x62\x4e\x7b\x1c\x46\x0d\x8d\x19\x9f\xf3\xd0\xea\x0e\xb3\x3e\x37\xcb\x75\xff\xed\x1a\x46\x88\xbf\xc2\x12\x63\x30\xb3\x4a\xd4\x60\xac\xbe\x0f\xdc\x7c\x1f\x4f\x51\x93\x2e\x43\x0d\x9b\xcd\xbf\xbb\x2d\x7c\x8b\xde\xaf\x23\xad\x33\xf9\x8d\xe0\xff\x21\xc1\x63\x27\x1d\xc3\x7e\x6d\xfe\xbb\x1c\x47\xfc\xc4\x24\x53\xe6\x69\xf8\xe4\x39\xb1\xef\x4b\xde\xa9\x04\x86\x34\xc3\xc9\x01\x7f\x13\xf4\xdc\xd6\xe4\x1a\xbb\x4e\x2d\x19\x9e\x0b\x12\x7b\xf3\xcd\x0d\xf1\xe6\x93\x51\x03\xea\x8e\x17\x10\x80\xd8\xec\xcb\x54\xbb\x6b\x9a\x47\x33\x58\x8e\x6a\x34\x8c\x50\x41\x51\xee\x61\x3a\x48\x8e\x5e\xbd\x04\x69\x72\xce\xe2\xba\x12\x3c\x83\xc6\x78\x45\x7e\x99\xe6\xde\xd5\xd8\xe9\xf4\xfd\x36\x56\xbb\xa4\x3f\xbc\x3f\x81\x27\xfc\x1c\x7a\xc4\x7f\x23\x85\x63\x8e\xfe\x37\x39\x3c\x79\x54\x7f\x74\xee\x4e\x2f\x7a\x56\xce\x22\x1f\x1e\xd7\x17\x32\x19\xed\xd2\x07\xb0\x18\xa4\xe4\xe5\x34\xce\x84\x76\x92\xc7\x70\xd9\xb3\x88\xcc\xec\x2b\x40\x78\xab\x90\xb0\x98\x83\xd7\xc2\x9a\x71\x5d\x70\x2c\xd7\x45\x63\xb6\x98\xc6\xfc\x5e\x73\xc1\x7c\xc7\xed\x3d\xdf\x47\xb5\x3c\x5f\xc7\x93\xf3\xe5\x97\xb8\x67\x04\xd7\x44\xc1\x5f\x35\x57\xc0\x92\xf0\xce\xa5\xc0\xd4\x4a\xfa\xcc\x06\x97\x6f\x6b\x5c\xd4\xda\x10\x59\x1a\x42\x85\x02\xca\x0e\xe4\x3b\x90\x5a\x03\x0b\x5c\x72\x9a\xd7\x77\xa3\x07\xcc\xcd\xcd\x94\x93\x6d\x0f\x6b\xd8\xd7\x5c\xf7\xdb\xa0\xb7\x16\xe8\xe1\xcc\xd8\xba\xc6\xed\xfc\x64\x64\x91\x90\xcf\x8d\xcb\x9f\x49\xb2\xe8\xdd\x85\x17\xae\x8d\xbe\x28\x6e\x90\xba\x56\x40\xcc\x8e\x1a\xfc\x41\xf6\xf0\xb2\xd9\x3d\x8f\xb0\xf7\x15\x55\x29\x41\x1a\x4b\x2b\x5e\x21\xf9\xc0\x44\x17\x8f\xf7\x04\xb2\x7f\xfd\x5d\x9a\xba\x67\xce\x0c\x09\x71\xd0\xdd\xfc\x96\xba\xcb\xea\x8c\x95\x95\xc6\x85\xd1\x5b\xff\x6c\xae\xca\xbe\x2f\x11\xd3\x03\x70\x27\xd8\x8c\xa2\xd9\x26\xbd\x51\x62\x0d\xfa\xd1\x66\x20\xcd\xe0\x93\xec\xbe\x7f\x49\x86\x81\x24\x1d\x50\xf2\x6b\x8f\x39\x78\xec\x81\x8c\x8f\x3f\x47\x2f\x35\xd0\x42\x2f\x56\xde\x3a\x67\x9e\x80\xb8\x9d\x98\xa0\xdc\xb4\x7b\xd5\xee\x3c\x4e\x44\xf9\xa0\x6b\x61\x22\xae\x06\xc1\x69\xb2\x9c\xff\x61\xc5\x67\xa2\xd4\x90\x36\x00\xcb\x77\x1e\xae\x18\x45\x69\x76\xa0\x7e\x70\x7c\xda\x60\x2b\xa9\x04\x3d\x34\xd6\xef\x39\x83\xf1\xdf\xdf\x01\x00\x00\xff\xff\x3e\x97\xcf\x5c\xfc\x10\x00\x00")

func staticBleveMappingJsMappingAnalysisAnalyzerJsBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingJsMappingAnalysisAnalyzerJs,
		"static-bleve-mapping/js/mapping/analysis-analyzer.js",
	)
}

func staticBleveMappingJsMappingAnalysisAnalyzerJs() (*asset, error) {
	bytes, err := staticBleveMappingJsMappingAnalysisAnalyzerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/js/mapping/analysis-analyzer.js", size: 4348, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingJsMappingAnalysisCharfilterJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\x4d\x4f\xe3\x3c\x10\xbe\xf3\x2b\x4c\x84\x48\xaa\xb7\x24\xf7\xb7\xe2\xb2\xac\x56\xda\x03\x7b\xe2\x56\x55\x95\x49\xa6\xad\x45\xe2\x64\x6d\x07\xa8\x80\xff\xbe\x63\x3b\x4d\xec\x7c\xb4\x45\xec\x46\x88\x26\x9e\xf1\xcc\xe3\x67\x3e\x3c\x9b\x9a\xa7\x8a\x95\x9c\x7c\xcb\xe1\x19\xee\x76\x54\xfc\x60\xb9\x02\x71\x5f\x66\x34\xbf\x53\x22\x8f\xae\x64\x5a\x56\x30\x27\x57\x85\x5e\xfa\xc9\xa5\xa2\x3c\xd5\xdf\x3b\xa5\xaa\xf9\x05\x39\xf9\x70\x5a\xa0\xfa\x33\xcd\x6b\xfc\x29\x68\x55\x31\xbe\x9d\x13\x34\xa3\x58\xba\xae\x04\x6c\xd8\xeb\x8c\xbc\x19\x43\xd6\x57\x5c\x0a\xb6\xfd\x85\xbb\xc8\xad\xd9\xbc\x70\x65\x7c\x62\x1d\x84\x28\xc5\x3d\x48\x49\xb7\x5a\x1e\x04\x9e\x74\x53\x8a\xa2\xa2\x6a\x37\x94\x34\x80\x50\xd0\xbc\x79\x52\x0f\x25\xea\x78\xdf\x8b\x0b\x57\x35\x45\xee\x36\x86\x3b\xd4\x7b\xfb\xb0\x66\x92\x84\xa0\x70\x4f\x18\xb7\x04\x10\x04\x42\x20\x63\x0a\x1d\x19\x05\xfd\x1d\x3d\x53\x41\x9e\x5a\x9d\x03\x19\xa3\xb6\x97\x4f\x2b\x34\x6f\xf4\xf0\xd5\x3a\xf9\xb0\x38\xb4\x15\x59\xa1\x34\x1a\x05\xff\xfe\x4e\xc2\xc4\x2e\xdd\x3c\xea\x60\xdf\x34\x07\x0e\x67\xfe\x41\x6a\xfe\xc4\xcb\x17\xde\xe5\xc2\xc3\xbe\x82\x07\x28\xaa\x9c\x2a\xa4\xb6\xc5\x86\xbe\xfe\x23\x41\x52\x51\xa1\x18\xcd\x65\x42\x39\xcd\xf7\x92\xc9\xa4\x43\x2b\x93\x2d\x70\x10\x2c\x8d\x77\xaa\xc8\x83\x21\x61\x43\x07\x52\xb3\xd7\xfa\x08\x04\x6c\xe1\xb5\x0a\xfe\x3f\xcf\x9b\xd5\xb6\xce\x6c\x6a\x7e\x1c\xf3\xf9\x1d\x36\xb4\xce\xd5\x94\xcb\x43\x6d\x44\x6e\x44\xf4\x23\x40\xd5\x82\xf7\x16\xfd\xbd\x41\x30\x2c\x0d\x94\xe2\x11\x53\x30\x62\x4f\xda\x64\x8b\x0d\xe6\x49\xd8\x1a\xef\x72\xd5\x68\xd4\x55\x86\xac\xdd\x0d\x14\x46\xc1\x9b\x9a\x8d\xb7\xa0\xa2\x30\xa1\x15\x4b\xd6\x3d\xc3\xe1\x2c\x96\x75\x9a\x62\x15\x45\xed\x7e\x34\x4f\xfb\x04\x4c\xc2\xd2\xca\x66\x79\x6d\x43\xb2\x56\x5a\xe0\x9c\x6e\x16\xb7\xef\xa6\x62\x7d\x3f\x73\xac\x96\x0c\x26\xbc\xf5\x2a\x5c\xeb\xbb\x86\x17\x1e\x71\xa3\xb4\x44\x87\x4c\x67\x1b\x12\x5d\x0e\x6a\x2b\xd6\x60\x5d\xe7\x99\xcd\x0f\xbd\x57\x37\x8e\x26\xb8\x9d\x53\x6d\xe6\x68\x62\x2d\x1d\x0b\xab\x23\x24\xb6\x7d\xe3\x7c\x6b\xd1\xac\x9f\x33\x86\xd3\x5c\xc2\x19\x6e\xde\x06\x09\x37\xaa\x69\x08\xd1\x54\x77\x7e\xbd\x8e\x33\x6c\xae\xc7\x4b\x7b\x39\xee\x61\x75\x2c\xd9\x31\x84\xdc\xc4\x7b\x34\xa1\x39\xbc\x34\xd1\x19\x37\xfd\x99\x58\x4d\x80\xfb\x7a\xd8\x26\x0c\x7b\x11\xfc\x47\x91\x6b\xf8\x39\x83\x86\x93\x41\x9a\xe0\xe1\x2f\x04\xff\x1c\x12\x1c\x37\x47\xef\xa7\x53\x8d\x54\xcf\x2e\xb9\x93\x4d\xc4\xef\x8f\xde\x8c\x13\x67\x4c\x16\x0c\x7b\x61\x68\xb7\x85\xbd\x1e\xd3\xd8\x7c\xac\x59\x9e\xb9\x09\xaa\x67\x13\xd7\xaa\xe9\x36\xfd\x45\xc7\x40\x7f\x74\x31\xa3\x0f\x93\x78\xcd\xfc\xae\x99\x80\xcc\xe9\x38\xfa\xb1\xb7\x8f\x7b\xd0\xf6\x15\xc7\x0d\x33\x1f\x15\xb5\x54\x84\x97\x8a\xd0\x5c\x00\xcd\xf6\xe4\x11\x48\x2d\x21\xf3\x20\x19\xcd\xcb\xdb\xc1\xd0\x75\x7d\x3d\x06\xb2\x19\x16\xe2\xc3\xbd\xeb\x76\x79\xb9\xd4\xb6\xa6\x32\xa4\x7f\x3c\x1d\x38\x9a\xea\x74\x6e\xb2\x5a\x6f\xce\x48\x18\xe0\x05\x6f\x30\xe1\x3d\x1f\xb6\xc8\xe1\x95\x49\x25\x3f\x45\x01\x70\x59\x0b\x20\x6a\x47\x15\xfe\x43\x22\xb1\x0a\x0e\xd3\x1d\x5e\x30\x45\x55\x72\xe0\x4a\x33\x8c\x73\x14\xeb\x48\xe9\x12\x57\xf6\x2a\xcd\x91\xd8\xa3\x8e\x35\x9c\x45\x07\x02\xd3\x5d\xdd\xb7\x83\xa5\xcf\x4a\x70\x60\x10\xc7\x80\x91\x09\xc2\xa5\x15\x35\x1c\xcf\xfe\xc4\xd0\x9d\xdd\xf1\x6b\xef\xf7\xaa\x94\xed\x05\x6f\x4e\x88\x75\xd1\xa0\x09\xe7\x0e\xb4\x33\x2f\x7b\x64\x14\xd3\x85\xa9\x86\xae\xc3\xf4\xc3\x54\x2f\x24\x12\x9b\x5d\x8f\xb7\x4e\x70\x8c\x36\x2f\x67\xfc\x0a\x4c\xf3\x52\x42\x64\x4d\xcc\xbe\x38\x46\xe0\x39\x4a\xb5\x03\xf1\xc2\xb0\xc9\x60\x69\x63\xbf\xd8\xdb\xdd\x5f\x99\x36\xf0\xef\x4f\x00\x00\x00\xff\xff\xcc\xbe\x74\x51\x44\x0d\x00\x00")

func staticBleveMappingJsMappingAnalysisCharfilterJsBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingJsMappingAnalysisCharfilterJs,
		"static-bleve-mapping/js/mapping/analysis-charfilter.js",
	)
}

func staticBleveMappingJsMappingAnalysisCharfilterJs() (*asset, error) {
	bytes, err := staticBleveMappingJsMappingAnalysisCharfilterJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/js/mapping/analysis-charfilter.js", size: 3396, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingJsMappingAnalysisTokenfilterJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\x5f\x6f\xdb\x36\x10\x7f\xef\xa7\x60\x85\xa2\x92\x31\xd7\x1a\x32\xf4\x65\x41\x5f\xd6\x61\xc0\x1e\xb2\xa7\xbc\x19\x86\xc1\x48\x67\x9b\x30\x45\x69\x24\x95\xc4\x4b\xfd\xdd\x77\x94\x64\x89\x94\x28\x5b\x71\x32\xcc\x28\x1a\x5b\xbc\xfb\xdd\xf1\x77\x7f\x74\xe4\xa6\x14\x89\x66\xb9\x20\xbf\x71\x78\x84\xfb\x7c\x0f\xe2\x0f\xc6\x35\xc8\xbb\x3c\xa5\xfc\xbb\x96\x3c\xfa\xa4\x92\xbc\x80\x39\xf9\x94\x99\x47\x7f\x0a\xa5\xa9\x48\xcc\xef\x9d\xd6\xc5\xfc\x03\xb9\xfc\x11\x34\x43\xf9\x47\xca\x4b\xfc\x93\xd1\xa2\x60\x62\x3b\x27\x88\xa3\x59\xb2\x2e\x24\x6c\xd8\xf3\x8c\xbc\x54\x48\xb5\xb1\x45\x2e\xd9\xf6\x2f\xd4\x22\xdf\x2a\xe5\x5b\x7b\x4d\x8c\x3c\x07\x29\x73\x79\x07\x4a\xd1\xad\x59\x0f\x02\x67\x75\x93\xcb\xac\xa0\x7a\x37\x5c\x69\x1c\xc2\x85\xe6\x9b\xb3\xea\x78\x89\x32\xce\xef\xdb\x0f\xb6\xa8\x36\xec\x6d\x2a\xf6\x50\xf0\xe5\x58\xe3\xc4\x31\xc1\xd5\x03\x61\xa2\x66\x80\xa0\x27\x04\x52\xa6\xd1\x52\x25\x60\x7e\x47\x8f\x54\x92\x7d\x2b\x73\x62\xc3\x0f\xbe\xdc\xaf\x10\xbf\x12\xc4\xaf\xb5\x95\xe3\xd0\x93\x3b\x5a\x18\x0a\x15\xca\x2e\x57\xae\xa7\x3c\xa7\xe9\x7d\x4f\xe6\x94\x09\x91\x63\xdc\xc4\x78\x51\xe4\x4a\x47\x61\x4c\x0b\x16\xaf\x1d\xe8\x70\xde\x50\x36\x5b\xa8\x32\x49\x90\xfb\xa8\x85\x49\xa9\xa6\x36\xd4\x19\xf7\x8c\x68\xfd\x70\x8d\x78\xea\xb6\xd5\x39\xce\x16\xed\xf7\x2a\xbc\x2e\xfc\x1c\x99\x4d\x61\xc4\x48\x2f\x1d\x8c\xbc\x0d\xdc\xd0\x76\x81\x97\x68\xd6\x08\x98\xf8\xa8\x02\x71\x22\x6f\x5e\xfc\xf8\x41\xc2\xb8\x7e\xf4\xe5\xc1\x54\xd2\x97\x86\x98\x70\xe6\x5a\x28\xc5\x5e\xe4\x4f\xc2\x2a\xb4\xfb\x43\x01\xf7\x90\x15\x9c\x6a\xf4\xb3\xf5\x10\x8d\xfd\x44\x82\xb8\xa0\x52\x33\xca\x55\x4c\x05\xe5\x07\xc5\x54\x6c\x25\x82\x8a\xb7\x20\x40\xb2\x64\xb1\xd3\x19\x0f\x3c\xd9\x38\x34\x61\xf8\xee\xf8\x0a\x52\x96\xe8\x75\x92\x67\x45\x5e\x8a\x34\xf8\x75\xa2\x59\x47\xab\x36\xde\x35\x82\x00\xd2\x2d\xac\xc5\x56\xd2\x6c\x32\x60\xa7\x32\x44\xe3\x4c\x61\xc0\xa7\x43\xd5\xf2\x03\x9c\x3d\x1c\x9e\x72\x99\x62\x86\xc9\x3d\xc8\xc9\x70\xae\xda\x00\x95\x83\xd8\xea\xdd\x64\xb4\x5a\x7c\x80\xf2\x3a\xb2\xfc\x3c\x09\x6c\x70\x94\xb3\x7f\x60\x5d\x0a\x66\xea\x62\x3a\x5e\x5f\x73\x80\xad\x76\x98\xca\x7c\x3a\x62\x23\x3f\xc4\xd1\x79\x51\x77\x10\x35\x1d\xab\xd3\x19\xe0\x69\x89\xed\x00\x93\xba\x5e\x9f\x0c\xe9\xaa\xd9\xa8\xc7\xb3\x35\xf4\x3b\x6c\x68\xc9\xf5\x85\x12\xf2\x36\x52\xf3\x91\xa0\x4b\x29\x7a\x0f\x3b\x88\xb6\x01\x22\x86\xaf\x51\x2e\x7f\x5e\x39\x9a\x47\xab\x9d\x8d\x55\xdf\x15\xbe\x3c\xd0\x64\x8f\x9a\xc1\x06\xf9\x83\x60\xf8\x7e\x0f\x32\x66\x98\xfe\xc5\xb7\x42\x9f\x87\x2b\x63\x6e\xb6\x65\x7d\x85\x8f\x26\xbc\x09\x07\xf5\x5e\x9c\x0d\x7a\xc3\x15\x3e\x35\x18\xef\xe6\x53\xdb\x59\xae\xf0\xe5\x52\x88\x6e\xbe\x7e\x9d\xe2\xc2\x1b\xb2\xe8\x62\x92\x4c\xb2\xef\x69\x69\x57\xf8\x62\x46\x3f\x93\xd1\x62\x93\x04\x53\xcc\x76\xdd\xee\xea\x8d\xdf\x8c\x53\xef\x59\xc9\x4b\x5d\x94\x7a\x6d\x86\x5e\x86\x0d\xcb\x18\x36\xc5\xe7\x91\x54\x80\xad\x8d\xea\xdc\xe4\x68\xe0\x2b\x4e\x6c\x71\x1c\xea\xd5\x49\x5b\x75\x1a\xf2\x15\xdb\xed\x00\xde\x9e\xf1\x83\x6e\x7e\x85\x3f\x6d\xd5\xdc\x5c\xca\xf0\xf3\xad\xde\x99\x9a\xcb\x02\xa7\x47\xb8\x1f\x4a\x9c\x99\x99\xb7\xe0\x8e\xcc\x96\x62\x78\xc5\xb4\xec\xda\xb5\x06\xe6\xfa\x9d\xb6\xd6\x66\xe5\x7f\x18\x9c\xfd\xd4\xb4\x63\x33\xdb\x90\xe8\xe3\xf0\x04\xb3\x30\xee\xda\xe6\xd3\xfa\xcd\x6a\x94\xcd\x01\xad\x89\x62\x67\xd6\xe0\x9c\x7f\x27\x2f\x2d\x88\xd5\x39\x26\xdb\x03\xda\x2b\xf0\xa2\x99\xc5\x40\x47\x2c\xd6\xe8\x14\x43\x2f\x47\x9f\xf6\x08\x2b\x86\xf1\xce\xf2\xe9\x70\x67\x29\x58\x07\xd9\x0b\x93\xfe\x72\xc4\xc4\xea\x6c\xe6\x7f\xdf\x51\x51\x05\xde\x9b\xdc\x02\x9e\x9a\x20\x8d\x80\xbf\x2a\x66\x63\x0e\xbe\x47\xfc\xc6\xb0\x9d\x58\xfe\x67\x31\x6c\x78\x9a\xc2\xc6\xe5\x78\x8d\xd0\xf1\x2e\x99\x30\x85\x8a\xa1\xa1\xf3\xc7\xd8\x3e\x55\xbd\x56\x9b\x98\xfb\x23\x6e\x65\x18\x71\xfb\xa7\x73\xcf\xb4\x48\x99\xca\x18\xb6\xca\xb0\x56\x0b\xfd\x27\xf7\x87\x92\xf1\xd4\x4e\x5a\x73\x3d\x64\xa3\x56\x9d\xa8\xff\xd0\x02\xe8\xdf\x1e\x55\xb7\x4f\x4c\xe1\xab\xe6\xef\x92\x49\x48\xad\x66\x64\x3e\xf5\x1b\xc8\xde\x68\xfb\x35\x8e\xab\xbb\x29\x92\x95\x4a\x13\x91\x6b\x42\xb9\x04\x9a\x1e\xc8\x03\x90\x52\x41\xea\xb8\x54\x49\x7e\xfc\x36\xb8\xf7\xfa\xfc\xd9\xe7\x64\x73\xa9\xb0\x38\x1d\x6b\x9c\x77\x80\x5a\x1a\xb0\xb1\x64\xe9\xef\xaf\x0a\x1d\x69\xf2\xdb\x28\xa6\x24\x0c\xf0\xf0\x54\x39\x84\x67\xa8\xb0\x75\x1b\x9e\x99\xd2\xea\x55\xfb\xc7\x71\xa2\x94\x40\xf4\x8e\x6a\xfc\x0f\x59\xc4\x72\x38\xdd\xae\x91\xea\xa8\x24\x40\x68\x43\xef\x23\xce\x77\x1d\x23\xf6\x29\xad\x57\x74\xf6\x52\xbd\x51\x6f\x0f\xba\xed\xfc\xc0\xbc\xd7\x77\xed\xdd\x9e\x4b\x4a\x70\x62\x10\x27\x05\xcf\x14\xe1\xd0\x8a\x22\xb6\x71\xcf\xd0\xd5\x5d\x5d\x75\x03\xd0\x48\xa8\x8c\x90\x3b\x98\x74\x14\x5a\xbe\x0f\xef\xdd\x2a\xa2\xb0\xb6\x9a\x1d\x85\x73\x6b\x7b\x13\xe7\x09\x0c\x0c\xa6\x1c\xd3\x0d\xeb\xa7\x29\x8a\xe9\x5e\x64\x15\xf6\xcf\x1e\xfb\xdd\xc2\x59\xee\x6d\xf1\x5e\x19\x27\x3c\x57\x10\xd5\x18\xb3\x37\x0e\x2a\xb8\x91\x5c\xef\x40\x3e\x31\xec\x58\xd8\x1f\xb0\xe9\x1c\x6a\xed\xb7\xcc\x33\xf8\xef\xdf\x00\x00\x00\xff\xff\x1a\xbd\x50\x93\x0e\x17\x00\x00")

func staticBleveMappingJsMappingAnalysisTokenfilterJsBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingJsMappingAnalysisTokenfilterJs,
		"static-bleve-mapping/js/mapping/analysis-tokenfilter.js",
	)
}

func staticBleveMappingJsMappingAnalysisTokenfilterJs() (*asset, error) {
	bytes, err := staticBleveMappingJsMappingAnalysisTokenfilterJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/js/mapping/analysis-tokenfilter.js", size: 5902, mode: os.FileMode(420), modTime: time.Unix(1469218254, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingJsMappingAnalysisTokenizerJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x57\x4d\x6f\xe3\x36\x10\xbd\xe7\x57\x30\xc2\x62\x25\xa3\x5e\x19\xbd\xd6\xd8\x4b\xb7\x3d\xf4\x90\x9e\x7c\x33\x8c\x80\x91\xc6\x36\x11\x89\x62\x49\x2a\xb6\x9b\xcd\x7f\xef\x90\xfa\x22\x65\xda\xf2\x26\x28\xd6\x58\x6c\x24\x71\xf8\xe6\xcd\x9b\x21\x39\xdc\xd6\x3c\xd3\xac\xe2\xe4\xf7\x02\x5e\x60\x55\x3d\x03\x67\xff\x82\x7c\xa8\x72\x5a\x7c\xd3\xb2\x48\x3e\xa9\xac\x12\x30\x27\x9f\x4a\xf3\xe9\x2f\xae\x34\xe5\x99\x79\xdf\x6b\x2d\xe6\x77\x64\xea\xc7\x69\x89\xd6\x2f\xb4\xa8\xf1\x4f\x49\x85\x60\x7c\x37\x27\x88\xa2\x59\xf6\x28\x24\x6c\xd9\x71\x46\x5e\x2d\x4e\xe3\x2a\xad\x24\xdb\xfd\x8d\xb3\xc8\x57\x3b\x79\xe9\x8e\xf1\x0b\xdf\x41\xca\x4a\x3e\x80\x52\x74\x67\xc6\xa3\xc8\x1b\xdd\x56\xb2\x14\x54\xef\xcf\x47\x5a\x42\x38\xd0\x3e\x79\xa3\x1e\x4b\xb4\xf1\xde\x97\x77\xae\xa9\xee\x94\x43\xb3\xd7\xb7\x06\x65\xb1\x20\x38\x76\x22\x8c\x37\xf1\x13\xe4\x41\x20\x67\x1a\xfd\x58\x03\xf3\x9e\xbc\x50\x49\x9e\x7b\x9b\x4e\x8b\x10\xf4\xfa\x79\x83\xe8\xd6\x0c\x1f\x1b\x1f\x6f\x61\x16\x46\x3f\x85\xc6\xeb\x8d\x4f\xb3\xa8\x68\xbe\x1a\x1b\x75\x35\x90\x78\xce\x4d\x7e\x53\x51\x29\x9d\xc4\x0b\x2a\xd8\xe2\xd1\x07\x8f\xe7\xad\x62\xb3\x54\xd5\x59\x86\xd2\x27\x3d\x4e\x4e\x35\x75\xb1\xae\x31\x34\xb6\xc3\x57\xb5\xec\x27\xbd\xcd\xd2\xfe\xd9\xa6\xd7\xc7\x9f\xa3\xb6\x39\x5c\xf0\x32\x2a\x07\x63\xef\x02\xb7\xd2\x4d\x49\x93\xcc\x5a\x0b\x93\x22\x25\x10\x28\x09\x16\xc6\xf7\xef\x24\x5e\x34\x9f\xbe\x3c\x99\x65\xf4\xa5\x95\x26\x9e\xf9\x2e\x6a\xfe\xcc\xab\x03\xef\xbd\xac\x4e\x02\x56\x50\x8a\x82\x6a\xa4\xd9\x13\x44\x57\xbf\x90\x68\x21\xa8\xd4\x8c\x16\x6a\x41\x39\x2d\x4e\x8a\xa9\xc5\x20\xd3\x62\x07\x1c\x24\xcb\xd2\xbd\x2e\x8b\xe8\x42\x29\xba\xf0\x46\xea\x41\xaa\x48\xc2\x0e\x8e\x22\xfa\xed\x26\x5f\x8d\x71\xe3\x6a\x58\xf1\x11\x1c\x33\x10\x26\x1f\x37\xc2\xf4\xf6\x0d\x52\x28\x07\x1e\xf5\x3f\x60\x4b\xeb\x42\x5f\x62\x1e\xac\x5a\xf3\x93\xa0\x6b\xc9\x47\x1f\xfd\xb9\x51\xe4\x0d\xbe\x39\xc5\x71\x21\xc0\x77\x78\xeb\xa7\x2b\x9c\xbf\xde\x9c\xef\x95\x51\x1f\xae\xa1\x54\x73\x66\x2a\xfa\x32\xb3\x49\xc1\xbc\x05\x5f\x0b\xac\x7a\x58\x8d\xc7\xaf\xac\xf5\x1d\x9c\x2f\x75\x3b\x2d\x7e\xe7\x12\xef\x7c\xfa\x4b\xfc\x51\x9b\xcf\x3f\x61\x9d\x87\x14\xe9\x97\x38\xdb\x92\xe4\x7e\x1c\x40\x6a\xa8\xba\xae\xf3\xa6\x24\xcd\x54\x73\x96\xb4\xf5\x34\xb8\x34\x28\xd7\x4a\x79\xed\x00\x6c\xa6\xe4\x43\x0f\x37\x63\x25\xb3\x71\xa1\x58\x39\x0b\x05\xd3\x4e\x5e\xcf\x8a\x2c\x64\x68\xb5\x30\x1a\x0f\x5e\xbb\x13\xc8\x31\x77\x4e\xda\xab\xbb\xd1\x3a\x08\xbf\xb9\x52\xdc\xdf\xf6\x94\xdb\x24\x07\x2b\x98\xc3\xa1\x4d\x4a\x10\xf8\x07\x32\x14\x26\xf6\xd1\x5c\x85\x51\xbd\xac\xfd\x2f\xd9\x6a\x75\x99\x8e\x7f\x2a\x33\x17\x04\xf8\x70\xbe\x6f\x09\xff\xdc\xc9\xb5\x83\x74\x62\xc7\xa4\x79\xfe\x67\xb7\x31\xbb\xd5\x64\x47\xdd\x28\x8d\x52\x6d\xd3\x09\x87\x66\xa5\x4f\x55\x41\x3a\x6c\xf9\xa9\xa8\xd5\xfe\x6c\xfe\xd2\x9b\x3e\x1a\x75\xba\xd3\x8b\xec\x25\x94\xd5\x0b\x04\x03\x60\x3c\x87\xe3\xb5\xf6\xd1\x65\xa7\x44\xc1\x32\x68\xe6\xcc\xc9\xaf\xe1\x8e\x28\x33\x9d\x7e\xe1\xf8\x20\xfe\xa9\xe1\xdd\x08\xd2\x9c\xa9\x92\xe1\x11\x11\x37\xd3\xe2\x30\xe6\x53\xcd\x8a\xdc\xa5\x6d\x5a\xf9\xb1\xec\xf7\xe3\x8f\x0e\xc0\xb8\xd3\xb7\x37\x05\xa6\xf0\x1c\xfe\xa7\x66\x12\xf2\x68\x19\x38\x9e\x5d\x55\xfb\x47\x6c\xcf\xed\x75\xa2\xac\x95\x26\xbc\xd2\x84\x16\x12\x68\x7e\x22\x4f\x40\x6a\x05\xb9\x47\xc9\x5a\xde\x7f\x3d\xbb\xa3\x7c\xfe\x1c\x22\xd9\xf6\x7f\x69\xd7\x06\x39\x0d\xee\xda\x20\x5d\x5a\x4e\xe3\xe0\xfa\x02\xb7\x4c\x73\x12\x47\xd8\x66\x59\x2a\xd8\x6d\xc5\x3d\x61\x38\x32\xa5\xd5\x0f\x45\x0e\x5c\xd5\x12\x88\xde\x53\x8d\xff\xa1\x7e\x58\x86\xdd\x1d\x08\x4f\xdc\x52\x54\x1c\xb8\x36\xc2\xe2\x7d\x83\x0d\x5a\x0c\x81\x8c\xf6\xa2\x71\x84\x81\x1d\x61\xe9\x12\xc0\x75\x68\x2e\x3d\xb4\x28\xd0\x3f\x34\x21\x18\xdf\x03\x0e\xde\x12\x19\x56\x12\x39\x60\x8a\xd8\x6e\xaf\x4d\x5e\xb0\xe1\x06\x09\x3c\xb3\x96\x7b\x28\x7b\xc4\xfe\x2a\xa5\x0d\xea\x74\x1a\xc6\x09\x70\xe8\x6b\x87\xfb\xb5\x44\xea\x4d\x50\x5c\xdc\xed\xf4\x43\x7f\xad\xf4\xbd\x44\x1d\x0e\x36\x7c\x81\x8e\x71\x00\xc7\xf1\xe1\xc5\xef\x08\x07\x9f\xcb\xbb\x2b\xb7\x35\x9b\x36\xdc\x0e\x5b\x2a\xf1\xdc\xe1\x75\x63\x3f\x87\x59\xc2\xd2\x67\xba\xad\x81\xae\xd5\x65\x7a\x54\x67\x0a\x8f\xb8\x51\x35\x0c\x03\x37\x54\x83\x0d\xc0\xdf\x4c\xb2\xa2\x52\x90\x34\x08\xb3\x0f\xf6\x8a\x18\x46\x85\xb5\x22\x0f\x0c\x0f\x18\xdc\xa5\xf0\x94\x38\x35\xb3\x3f\xd2\x52\xe2\xbf\xff\x02\x00\x00\xff\xff\x41\x02\xef\x6d\x3c\x11\x00\x00")

func staticBleveMappingJsMappingAnalysisTokenizerJsBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingJsMappingAnalysisTokenizerJs,
		"static-bleve-mapping/js/mapping/analysis-tokenizer.js",
	)
}

func staticBleveMappingJsMappingAnalysisTokenizerJs() (*asset, error) {
	bytes, err := staticBleveMappingJsMappingAnalysisTokenizerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/js/mapping/analysis-tokenizer.js", size: 4412, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingJsMappingAnalysisWordlistJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\x4d\x6f\xdb\x38\x10\xbd\xfb\x57\x4c\x84\x20\x96\x61\xaf\x92\xbd\xae\xd6\x97\xf6\x54\xa0\xe9\x35\x07\xc3\x08\x68\x71\x6c\xb3\xa5\x48\x97\x43\xc5\x31\x02\xff\xf7\x0e\xe9\x2f\x52\x89\xd1\x08\x41\x64\xf1\xcd\x7b\xf3\xc9\x59\x76\xa6\xf1\xca\x1a\xf8\xa2\xf1\x05\x9f\xac\x93\xdf\x15\xf9\x47\x2b\x85\xfe\xea\x9d\x2e\x6f\xa9\xb1\x1b\x9c\xc0\x6d\x1b\x8e\xbe\x19\xf2\xc2\x34\x38\x19\xc0\x5f\x1e\x23\x5a\x66\x6d\x59\x8f\x26\xd0\x8a\xcd\x46\x99\xd5\x04\x98\xed\x55\xf3\xbc\x71\xb8\x54\xaf\x23\x78\x8b\x32\x07\x17\x55\x60\xc0\x34\x12\xeb\xf4\xdc\x3a\xb5\xfa\x71\x05\x43\xe7\xac\x7b\x44\x22\xb1\x0a\x78\x51\x64\xe8\xd2\xba\x56\x0a\x2f\x18\x79\xdb\x67\x48\x8c\x8b\x8f\xe3\xbb\x22\xad\x1a\x2c\x1f\x46\x35\xdc\xdf\x43\xe3\x50\x78\x04\x36\xdb\xa5\x0c\x42\x8d\x8d\x47\xf9\x74\x64\xce\xe6\x99\xe0\x31\x43\x06\x8e\xbf\x32\x34\x4b\x9b\x6d\xb2\xef\x7a\x90\x9a\x36\xa1\xbc\x9a\x6d\xce\x8d\x29\x4f\x75\x8a\x56\x59\x1b\x2a\xa9\xa8\x55\x44\xe5\xf0\x40\x1b\x8e\x0e\x6e\xf7\xb9\xa6\x90\x31\xec\x44\x34\xd3\x54\x4b\x28\x7b\x15\xab\x0c\x6e\x03\x25\x35\x0b\x0f\xe3\x50\xbe\x08\x07\x8a\xc5\x1e\x6a\x7e\xfd\x9f\x95\xb4\xd2\x68\x56\x7e\xcd\xc0\x78\xdc\xe7\xf6\x5c\x45\xfb\x99\x9a\xc3\x74\xda\xef\xd7\x35\xef\xa7\xc7\xa1\xef\x9c\xa9\xdf\x61\xfb\x41\xfe\x95\x7d\x66\x61\x6e\x3a\x5a\x5f\xcd\xb9\xfe\x88\xd7\xb7\x4a\xa6\xed\xe2\xba\x57\x77\x87\xad\x3d\xdc\x29\x4a\x6b\x9f\x8d\x52\x9a\x23\x4f\x1f\x59\xe7\xc1\xaf\x11\x4e\x46\x71\x44\x41\x19\x89\xaf\x48\xfc\xf6\x16\x24\x52\x83\x46\x86\x71\x63\x0c\x5d\xce\x87\x2d\x0f\xaf\x30\x6c\xa5\x91\xe7\x58\x79\x6c\x09\xb6\xca\xaf\x6d\xe7\x61\x2d\x5e\x02\x8d\x45\x84\xfc\xd9\x91\x3f\x09\x9f\x25\xb2\xd8\xaa\x10\x4d\x79\x8e\x5b\x4c\x60\xc1\xe1\x1e\xcb\x0f\x0b\xf8\x07\x44\x0d\xfb\xa4\x5e\x97\xf1\x08\xb2\xfc\x1f\xae\xe6\xfa\xae\x25\xb4\x89\xb7\x30\x23\xcc\xa2\xce\x7c\x02\xff\x8e\xfa\xa5\x4e\xf8\xd7\xae\x66\xaf\x1b\x8b\x4e\xe9\xec\x0e\x84\x6d\xd2\xbf\x07\x37\xfd\xc3\x44\xa0\xbf\x6c\xe2\x52\x52\xc4\xf5\xf8\xdd\x29\x87\xb2\xc8\x07\xa7\x3f\xa5\xc9\x3c\x72\xa3\xe2\xb6\x6b\x43\x0b\x8c\xf5\x20\x34\x6f\x1d\xb9\x83\x05\x42\x47\x28\xb3\x90\xa2\xe5\xcd\xf4\xdd\x3a\xbc\xbb\xfb\x28\xc8\xe3\xfa\xa9\x84\x11\x7a\x47\x8a\x2a\x6f\x7f\xa1\x79\xe6\x63\x9a\x05\xa5\xf9\x27\x93\x8b\x33\xae\x55\x88\x8f\x59\x12\x86\x05\x8c\x0f\x41\x8f\xa1\x18\x9e\x03\xc6\x57\x36\xa1\xcf\x67\xee\x90\x3a\xed\x93\x85\x7c\x39\x3c\x84\x17\xa0\x4c\xac\xf0\xbb\x0d\x16\xff\x41\xd1\x70\xb1\x6c\x5b\x4c\x7a\x68\x48\x8f\x18\x4f\x87\xe9\xe2\xb9\x1e\x5c\x5b\x9d\x8d\xb6\x84\xe5\xc1\xf5\x65\x6d\xf2\xdf\x9f\x00\x00\x00\xff\xff\x4c\x7b\xef\x54\x12\x07\x00\x00")

func staticBleveMappingJsMappingAnalysisWordlistJsBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingJsMappingAnalysisWordlistJs,
		"static-bleve-mapping/js/mapping/analysis-wordlist.js",
	)
}

func staticBleveMappingJsMappingAnalysisWordlistJs() (*asset, error) {
	bytes, err := staticBleveMappingJsMappingAnalysisWordlistJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/js/mapping/analysis-wordlist.js", size: 1810, mode: os.FileMode(420), modTime: time.Unix(1457642305, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingJsMappingAnalysisJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5a\x51\x6f\xdb\xb6\x13\x7f\xcf\xa7\x60\x85\xa2\xb6\x9b\xd4\x79\x4f\x10\xfc\xd1\x7f\xbb\x01\xc1\xd6\xed\x25\xc5\x1e\x8c\x20\xa0\x25\xba\x26\x2a\x53\x86\x48\x27\x75\xd7\x7c\xf7\xdd\x51\x12\x45\x52\x94\x4c\x27\xc5\xd6\x26\xf6\x43\x1b\x8b\x77\xc7\xe3\xef\x8e\xc7\x1f\x4f\x3e\x3d\x25\x69\x21\x54\x59\xe4\x39\x2b\x49\xc9\xe4\xba\x10\x92\xcf\x73\x46\x16\x45\x49\xe6\x1b\x9e\x67\x5c\x7c\x22\x94\xa4\x1b\xa9\x8a\x15\xa1\x82\xe6\x5b\xc9\x25\x68\xad\x40\x94\x09\x25\x8f\x8e\x16\x1b\x91\x2a\x5e\x08\xf2\xff\x9c\xdd\xb2\xb7\xb5\xc8\x3b\x55\xe6\xe3\x97\x32\x2d\xd6\xec\x84\xbc\x5c\x2a\xb5\x86\xff\xf2\xe2\x13\xfc\xbb\x2a\x32\x9a\x4f\xc8\xdf\x47\x04\x3e\xb7\xb4\x24\xb7\x9c\xdd\xfd\x29\xf2\x2d\xb9\x20\x95\xc6\xb4\x79\x72\x7e\xa4\x85\xea\xa7\x82\xdd\x69\xf3\x5f\xc1\xd9\x0b\xd2\xcc\x3b\x6e\x4c\xe1\xa7\x64\x6a\x53\x8a\x46\x81\x65\x5c\x35\x1a\xe3\x24\x39\xb1\x04\xf1\x93\xa8\xed\x9a\x25\x67\x24\xa9\x96\x97\x9c\xb8\xa3\xe9\x92\x96\x37\x0b\x9e\x2b\x56\x4a\x90\x9a\x5d\x7b\xe3\xaa\xf8\xcc\x04\x07\xd3\x68\x62\x23\x78\x5a\x64\xcc\xb7\xa1\x65\x1c\x23\x66\xfc\x7e\x72\xae\xff\xbe\x77\x17\x99\xb1\x9c\x29\x16\x5a\xa7\xa0\x2b\x66\xaf\x75\x23\x59\xd6\x42\xc6\x65\xa3\xf3\x11\x9e\x57\xc2\xe7\x46\x96\x2f\xc8\x18\xe5\x27\x1e\x04\x14\x02\xaf\xc6\xc9\xd5\x12\x82\x4a\x9b\x39\x53\x2a\x44\xa1\xc8\x9c\x91\xca\x99\x2c\x39\x76\x94\xea\xb5\x81\x40\x4a\xc1\x28\xe1\x8a\x80\xfa\x9c\x61\xae\x68\xa7\xe6\x5b\xa2\x96\x0c\x24\x8e\xab\xef\xc7\x24\x99\x26\x96\x37\x6d\xa4\xda\x67\xf7\x8e\xaf\x90\x96\x0b\x5e\xae\xc6\xc9\xdb\x92\x91\x6d\xb1\x21\x72\x53\xff\x71\x47\x85\x22\xaa\xa8\x5d\x23\x23\x9c\x04\x17\x8b\x93\x8c\xfe\x97\x4c\xfc\x15\xd6\x72\x0d\x4a\x22\x63\x5f\x3e\xd0\xf5\x1a\x7c\x9d\x36\xe9\x3c\x6d\x56\x2e\x67\x68\xe9\xda\x77\xca\x8b\x90\x8b\xf4\x50\x84\x60\x7f\x19\xd3\x84\xc2\x02\x34\x1a\x5c\x90\x55\xe5\x81\x24\x63\xf8\x02\x5b\x80\x17\x1b\x49\xd6\x39\x4d\x99\x9c\x1c\xd9\xea\x00\x82\x54\x24\x5d\xb2\xf4\x33\xd1\xbe\x13\xdc\x64\x39\xac\x6a\x41\x37\xb9\x32\xe6\x1d\xf0\x42\x6b\xad\x15\x6e\x4c\x90\x2f\x2e\x88\xef\x6e\x1b\x16\x92\x54\x93\xd5\x7e\x76\xa6\x4b\x6c\x88\x6c\x7f\x21\xec\xa2\x76\x17\x33\xa0\xd1\xcb\x8a\x74\xb3\x82\xb8\xd5\xf6\x8c\x06\xee\xfe\x6c\x65\x25\x71\xc8\xe5\x5a\xe9\x3c\x2a\xf1\x2f\xc5\xfb\x22\xad\x2d\xe8\x78\x9c\xc0\x04\x27\x24\x49\x22\x36\x43\xb3\x76\xc7\x6b\xd6\xba\x6d\x12\x3a\x76\xf5\xbe\x3e\x56\x55\x46\xd3\x25\xc1\xc2\x63\x14\xf1\xe9\x58\x23\x51\xa4\x57\x30\x80\x09\x12\xc2\x03\x95\x64\x27\xbd\xcd\x6a\x7b\x50\xd4\x5a\xb3\xda\xf4\xb5\xbb\x07\xf7\x05\xd2\x3c\xf0\x00\x1d\x02\xd5\x01\xd6\x07\x04\x9d\xab\xb6\x70\xb3\x76\xdc\xc5\x24\x71\x4d\xdf\x87\xe0\xae\x6d\x8a\x4d\x9e\xbb\x75\x14\x37\x1d\x8c\xa6\x9b\x52\xf2\x5b\x46\x96\x2c\x5f\xd7\xfb\x63\xe7\x3a\xfd\xbd\xec\x2e\x79\x4d\xd5\xd2\xdb\xdd\xf6\xf6\x74\x22\x1e\xb1\x4b\x5b\xd3\xd1\x9b\x13\xd5\x7c\x2f\xfa\x92\xd7\xd8\xa2\x4a\xe7\x2d\xea\x79\xb0\x12\x96\x43\xf5\x8e\x37\x15\x13\x16\x00\x45\x14\x77\x35\x24\x0b\xce\xf2\x4c\xa2\x07\x0a\x0f\x18\x0d\x4a\x37\xed\xb5\xd4\xa5\xae\x37\x90\xf9\x16\x2c\x95\xba\xbf\x58\xfd\x14\x22\xd5\x11\x9c\xb5\x86\xae\xbb\xb9\xa9\x07\xa7\xbb\x10\x76\xa5\xfb\x24\x6c\x90\xc0\x65\x8c\x7c\xe5\x15\x2a\x64\x1a\xee\xd6\xc0\x79\x47\xfd\xbe\x17\x71\xc7\x18\xc0\x86\x41\xeb\x8b\xde\x4e\xf4\x75\xa5\x11\x4c\xc2\x01\x4e\xd6\x25\x64\x7e\xa9\xb6\x5d\xf4\x9b\x91\x3f\xf0\x0c\x75\xf1\xaf\x87\x78\xb7\xea\xc8\xcd\x1c\x76\x8d\x1b\x84\x56\x7a\x66\xdb\x0c\x84\x62\x47\x0a\xc7\x96\xa3\xca\x89\x93\x60\x74\xa2\x3e\xe8\xc7\x31\x30\x93\x63\xdb\xdf\xc9\x7e\x9b\xe4\xdf\x73\x76\xc0\xc7\xbd\xea\x63\x80\x1b\x77\xeb\xde\x2d\xcd\x37\xf8\x5f\xcd\xc3\x2f\x85\x1d\x2f\x9b\xb3\x7f\x40\x32\xdf\x25\xee\xcd\xe3\xd6\x00\xf9\xf6\x8d\xb4\xb4\xde\x36\xa5\xef\x03\x97\x42\x2a\x2a\x52\x86\xa6\xf4\x83\x29\x98\x13\x63\x1b\x77\x3d\xc3\x59\x3d\x93\x8d\x24\x15\x7c\x45\xd1\xf9\x66\x70\x6a\x9e\xc8\x5f\x04\x85\xfb\x4c\x66\x8b\x2b\xb6\x02\xaa\xa5\xd8\xc7\x32\x3f\x33\x64\x09\x66\x57\x3c\xbd\x59\x97\x6c\xc1\xbf\xa0\xaf\xa3\xd3\xea\xd1\x9b\x39\x96\xad\x37\xf5\x89\x35\x9a\x90\x2e\x17\x1e\x9d\xae\x29\x24\x3e\xcd\xe5\x69\x43\x29\x4f\x9b\x42\x33\x5d\xaa\x55\x3e\xb2\xa7\x6f\x6f\x5c\x67\x64\xd4\xde\x99\x40\x56\x83\x86\x17\x27\x47\x1e\xae\x65\x45\x7e\x0b\x0b\x77\x73\x10\xe3\x74\x16\xbe\x04\xf9\x29\xd0\x29\x42\xf7\x6e\x1e\xea\x60\xc7\xd9\xd2\xa2\x83\xc6\x6a\xa0\xe2\xcc\x05\x08\xcb\xa0\x71\x27\x4a\x7b\x4d\xe1\x68\x0e\xa3\x61\xa7\x70\x24\x2a\xb6\x4a\xdf\xde\x74\xf6\xe9\xe4\xbc\xdd\xa9\x4e\xfe\x4f\x21\xdc\x70\xe6\x4e\x91\x4a\x8e\xcd\xdc\xd5\x43\xdf\x83\x9e\x3d\xb7\x80\x44\xf4\x62\x84\x9c\x28\xcb\xaa\x53\xb8\xb2\x85\x57\x28\x3c\x6a\x7c\x46\x8e\x1f\x73\x36\x54\xa2\xbf\xb1\x2d\x1e\x0c\x61\x1f\xf0\x83\x35\x5d\x5f\xc1\x5e\xc0\xa9\x9a\x24\xe4\xd5\x2b\x4b\xf3\x45\xff\x41\x5b\x7b\x56\xb2\x55\x01\x44\x0d\xbd\x29\xea\x33\x34\x28\xfa\xa8\x9b\x5c\x28\x1e\x0e\x8a\xbb\xec\x99\x15\x5d\x93\x8b\x1e\x42\x80\x02\x96\x9c\x15\x62\x67\xb5\x79\x41\xe1\x70\xbf\xa5\x3c\xc7\xd2\xd4\xde\x10\x3b\xd2\x18\x82\x9c\x8a\x9e\xf9\x6a\xbf\xd1\x5a\x53\x40\xf0\x6c\x90\x50\xbc\x86\xe4\x5f\x42\xad\x02\x86\xda\xd5\xeb\x62\x85\x71\x85\xf9\xfb\x42\x07\x43\xe3\xc9\x2e\x84\xad\x9c\x3f\xe9\xdb\x4b\xb1\x79\x8c\xfd\x23\x88\xd3\xa2\x18\x8f\x2a\x99\x8c\xcb\x15\x97\x78\x89\xa1\x0a\x8a\x29\x76\x02\xd8\x1d\x79\x0f\xb5\x7d\x3c\xb1\x3c\xf3\x3b\x2d\x10\x85\xbb\xa2\xcc\x48\xce\x25\x36\xb0\x2c\x17\x40\xfd\x2f\x18\xf9\x1d\x06\xe2\x3b\x4c\x8d\x46\xd5\x61\xd2\x1d\x1f\x79\x36\xbb\x1e\xec\xef\x84\x66\xd9\xd5\xdf\x69\x74\x1e\xda\xdf\x31\x6b\x7e\x7e\x0d\x9e\xaa\x0d\x07\xb5\x2e\xb6\xc3\x63\x63\xbd\xa3\xc3\xd3\xa6\x92\x6e\xf1\x14\xd8\xc8\x34\x20\xe1\xbc\xa4\x6e\xff\x75\xb9\xb7\x1e\xfe\x55\x8f\x36\xf4\x3b\x62\x19\xb5\x39\x1f\x07\xcb\x58\xa0\x62\xc4\xdb\x9d\x79\x5e\x5d\x77\x8e\x12\x6f\xc5\x6c\x35\x67\x59\xd5\xd7\xa2\xba\x99\xc5\xd4\x96\x14\x0b\xd8\x9d\x8b\x05\xc3\x5a\x63\x5d\x8e\x64\xe7\x32\x60\xcd\x36\xcd\x78\xaa\x6e\x4c\xac\x9a\x3b\x5a\xa8\xa0\xd9\x5a\xc8\xbd\xd2\x9c\xc9\xfd\x35\x3f\xb3\x2d\xae\xe5\x01\x9a\x52\x15\xeb\xae\xd6\xd0\xbd\xdc\x4e\x85\xfa\x9e\xa8\x53\xdb\xcf\x01\xcc\xf2\x81\x8b\xb6\x67\x76\x90\xde\xf7\x15\x99\x03\xbd\x7f\x34\xbd\xc7\xb4\xc1\x1d\x10\x43\xef\x9b\x30\xfc\x57\xf4\x5e\xa7\xf8\x1e\xf4\xbe\x2a\x07\xf2\xc0\xf2\x7d\x70\x0e\x2c\xff\x07\x61\xf9\xfd\xc7\x79\x28\x20\x0e\x8c\x3b\x0d\x3e\x84\xe7\x87\x67\xfe\xa1\x08\x2f\xbe\xcc\xa4\x29\x9e\x3d\x0d\x1b\xf1\x78\xef\x3b\x10\x68\xd8\x43\x2c\xf3\x6d\x75\x2a\xee\x3b\x48\x79\xc3\x13\xec\x22\xbd\xad\xd6\x43\x69\xaf\xbf\xf2\xe7\xc7\x7e\xed\x17\xd9\x91\xfc\xd7\x85\x7d\x07\x03\xee\xe4\x16\x42\x5c\x11\xe1\x39\x33\x90\x75\xef\xb9\xa6\x02\x51\xeb\x1e\xba\x93\x04\x1b\x3b\x9d\xa0\xb7\xdd\xcc\xc8\x3b\xbd\x3d\xaf\xb7\x8d\x8d\x6f\xa9\x41\xc2\xbc\xa2\x30\xbd\x3d\x1b\xd8\x50\xe9\x6b\x75\xf5\xca\x2e\xc2\x9a\x33\x6f\x8a\x40\x39\xd3\x39\xe3\x19\x1b\xae\xb8\x0d\xed\x34\xa0\x58\x94\xd3\x81\x3b\xc0\x37\xdd\x7c\x75\xbf\xed\xc7\x40\xfb\xf7\xfc\x81\x83\x3e\x9a\x83\x62\x42\x54\x29\x14\xc3\x42\xdb\x50\x1c\xda\xcc\x07\x02\x7a\x20\xa0\x8f\x22\xa0\x43\x27\x6a\x28\x24\x0e\x90\x11\x26\x9f\x28\x09\x35\xbf\x98\xeb\xb0\xcf\xab\x66\x24\x9e\x7c\x1a\x95\x08\xee\x19\x34\xbf\x8b\x7a\x1a\xa5\x87\x32\x4f\xb3\xdc\xe7\x47\x39\xdb\x48\x47\x12\x4e\x07\xec\x1d\x7c\xb3\x35\xae\x89\xa6\xc5\x31\x5f\x17\x80\x52\xf9\xda\x4e\xb4\x46\xcf\x6d\xba\xf2\x58\xb6\xd9\x5a\x0a\xf6\x5b\x79\x04\xdf\xb4\xb0\x70\xe6\x0e\xfc\x32\xc2\x8c\x4f\x2d\xeb\x91\xbd\x45\xfe\x35\xd0\x58\xe4\x03\x34\xaf\xef\x17\x24\xfd\xf0\xfe\x5c\x14\x1e\x01\x35\x84\x7b\x2f\x3c\x1f\x42\x9a\x1f\x4a\x91\x7b\x4b\xd3\x81\x21\x3f\x9a\x21\xb7\xdb\x29\x82\x20\x9b\x40\x1c\xf8\xf1\x81\x1f\x1f\xf8\xf1\xe3\x1b\xb4\xc1\xe3\x3f\x14\x10\x07\xc6\x9d\x06\x9f\x32\x37\xee\x6b\xce\x5e\xd9\xef\x76\xf7\x22\xc8\xd1\xed\xd9\x9e\x29\xa2\x48\xf2\xe3\x1a\xb4\xce\x9b\xd1\xe7\xc9\x94\xf7\xec\xce\x7a\xa0\xc7\xd0\xe5\xa7\xd8\x9a\xb5\x5e\x9d\x77\x7b\xb3\x83\xbf\x95\xc0\x8f\xff\xe2\xfd\xa2\x47\x77\xe6\x4f\xd3\xd3\x9f\xed\xd8\xfb\x19\x1a\xb4\x03\xbb\xfe\xc0\x3f\xbf\x0f\xff\x8c\x6f\xd1\x5a\xc1\x38\x70\xd0\x03\x07\x3d\x70\xd0\xef\xf0\x23\x81\xef\xdb\xa4\x75\x6d\x3e\x31\x26\x7a\x7f\xf4\x4f\x00\x00\x00\xff\xff\x0b\x26\x20\x9a\x10\x3e\x00\x00")

func staticBleveMappingJsMappingAnalysisJsBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingJsMappingAnalysisJs,
		"static-bleve-mapping/js/mapping/analysis.js",
	)
}

func staticBleveMappingJsMappingAnalysisJs() (*asset, error) {
	bytes, err := staticBleveMappingJsMappingAnalysisJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/js/mapping/analysis.js", size: 15888, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingJsMappingIndexMappingJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x56\xdf\x6f\xdb\x36\x10\x7e\xb6\xff\x8a\x9b\x11\xd4\x32\xa0\xd8\x7b\x6e\x90\x87\x2c\xdd\x43\x37\xa4\x1d\xba\x62\x2f\x41\x61\xd0\xd2\xc9\x66\x4d\x89\x02\x49\x25\xf5\x1a\xff\xef\x3b\xea\x87\x45\x4a\xf2\x8f\x05\x1b\xea\x87\xc4\xe6\x1d\xbf\xfb\x78\xf7\xdd\x91\x49\x91\x45\x86\xcb\x0c\x78\xc6\xcd\x2f\x02\x9f\xf0\x7d\x16\xe3\xb7\x07\x96\xe7\x3c\x5b\xdf\xcb\xcc\x28\x29\x04\xaa\x60\x0c\xf4\xb9\xd2\x91\xcc\x31\x84\xab\x8d\x31\x39\xfd\x13\x72\x4d\x7f\x0b\xbe\x7a\x90\x31\x13\x21\x81\xb4\x7b\xdf\x67\x21\xc8\xdc\x62\xeb\x19\x7c\x2f\xb7\xd7\x3f\xe1\xf6\xf0\xed\xe5\x05\xbe\xef\x6f\xc6\x0e\xf8\x5c\x1b\x66\x78\xb4\xcc\x15\x26\xfc\x1b\xb9\x0e\x2e\xd3\xbe\x69\xb5\x72\xbd\xb2\xa4\xaf\xd3\x2a\xe8\x94\xb0\x46\x4f\x4c\x79\x4c\xe0\xb6\xc4\x77\x62\xf8\x56\xf8\xed\xcf\x8f\x1f\xe6\x39\x53\x1a\x83\xf2\xab\x36\x8a\x0c\x3c\xd9\x05\xfe\x81\x66\xb3\x9a\xaa\xbb\x3c\x37\xbb\x1c\xb5\x13\x63\xc0\x58\x1f\xb3\x67\x65\x19\x13\x3b\xcd\x8f\xee\x3e\xd8\x6b\x80\xd1\xa0\xb5\xfa\xf2\x37\xaa\xb3\x38\x8e\xe7\x69\xc4\x68\xc3\xd4\x32\xe1\xc2\x5c\x02\xea\x39\x9f\xc6\x35\x72\x8b\x19\xbf\x88\xaa\xe3\xfa\xf2\x72\x0e\xf2\x62\xae\xbe\xf7\x05\x64\x97\xa4\xac\x4b\x61\x4b\x57\x57\xd2\x3c\x01\x4f\x42\x8f\x93\x18\x13\x56\x08\xb3\xac\xf5\x3a\xf9\xd2\xf4\xc6\xb0\x72\x1e\x27\x93\x2f\x24\xd0\x33\x18\x95\xb2\xf6\x55\x4c\xab\x7e\x93\x46\xe5\xae\xba\xa5\x3f\x13\x54\xbf\xa3\x9b\x66\xee\x47\x6d\x1b\xd7\x6f\x4d\xae\xff\x62\x82\xc7\x04\xdd\x8c\x8d\x80\xe8\x83\x42\x53\xa8\xcc\x06\x6d\x3c\x82\xd9\x0d\x74\xda\xda\x8d\xf2\x09\x35\xf1\xef\x9c\xab\x5a\xac\x37\x95\xb4\xef\xea\xec\xde\x1b\x25\x82\xd3\xa3\xa7\x21\xba\x58\xc0\xf5\xbf\xfc\x78\x2c\x9b\xfe\xf8\xc0\x52\x74\xe6\x54\x67\x9d\x4a\xfc\x48\x49\x1f\xd5\x9b\x84\x64\xf1\x5d\x67\xa3\x9b\xa0\x76\xfa\x58\xee\xf3\x5c\x6a\x13\x4c\x17\x2c\xe7\x8b\xa5\x87\x3b\x0d\x8f\x27\x2b\x98\xcd\xe6\x07\x1c\x5d\x44\x11\x6a\x1d\x1c\x82\xc4\xcc\x30\x37\xd0\x89\x13\x59\xd7\x76\x0c\xdc\x1c\xb6\xec\x1d\x7c\x54\x4a\x2a\x1f\x3d\x84\x48\xc6\x68\x63\x8c\x46\xcd\xb9\x4b\xb7\x07\x22\xc2\xd6\x58\x23\xbb\x78\x94\xa0\x66\xe6\x51\x1b\x0c\x67\xf2\xf6\x16\xb2\x42\x88\x12\xd7\x21\xdd\xcb\x28\x09\xca\xd5\x78\xed\x46\x11\xf1\x33\x4f\xf1\x0f\x3b\xba\x7b\x35\x1b\xb2\x0e\x54\xee\x1d\xb9\x99\x1e\xc8\x85\xf5\x8b\xfb\x9b\xff\x97\x2a\x0e\x9f\xb4\xac\x65\x43\x61\x59\x5e\x60\x3f\xa2\xa4\x83\xe4\x8e\x17\x76\x20\xe1\x9d\xf2\xbe\xba\x8b\xeb\x49\xd4\xa6\x90\x90\xee\x84\x90\xcf\x1a\xcc\x06\x21\x62\x76\xf0\x81\x91\x10\x23\xcd\xff\x94\x67\x68\x0f\x42\x26\x85\x53\x0d\x8c\x66\xa7\x1d\x6f\x65\xdd\xa0\x9e\xae\x6d\x0a\xeb\xd9\xf6\xb6\x33\x0d\xc3\xf1\xd9\x68\x44\x4b\x71\x1a\x68\xd5\x72\xa1\x14\x66\xc6\x8f\x12\xba\x18\x39\xaa\x8d\xbd\x49\x78\x46\x3b\x75\x4e\x29\x46\x8b\xc2\xa0\xa0\x7c\x11\xcf\x7b\x85\x94\xc2\xc5\x3b\x99\xe1\xe2\xe3\xef\xb0\x2a\x8c\xa1\x07\x5c\x24\x78\xb4\xbd\x71\x71\xa4\x0a\xcb\x88\x76\x1b\x3c\xb3\xcc\xd8\xd7\x0e\x01\x69\xac\x98\x78\x0c\xaa\x47\xd0\xe0\x55\xf4\xf6\xb8\xa0\xff\x93\xaa\x39\x6f\xd0\x7e\xc3\xb8\xd7\x23\x69\xee\x27\x3f\xf9\xd4\x50\x9d\x86\xa9\x25\x60\xc5\xe7\x28\xb7\xad\x91\xbd\x1e\xd5\xc9\x37\xdf\xc0\x61\x0f\x0f\xbf\x32\x42\xf3\xe2\x2b\x6f\x3c\xd3\xde\xad\x8d\x8a\x2b\xa7\xce\x2d\x4d\xee\xaa\xbd\xd3\x5b\xc7\x18\x05\x69\xd1\xb7\x8d\x3b\x87\x39\xce\x55\x47\xaa\x58\x05\x6a\x36\xeb\x35\xd0\x27\x24\xa1\x69\xfe\x84\x62\x47\x30\xa9\x24\xf5\x91\x02\xd5\x0e\x48\x7b\xf4\xf7\x99\x9b\x0d\x4c\xaf\xa6\x50\x3d\xa8\x43\x78\xde\xf0\x68\x03\x29\x5f\x6f\x0c\xac\xb0\x41\x89\x8b\x4a\x7a\xd9\xba\x10\x4c\x7d\xd5\x90\xa2\x61\xe5\xd8\xf1\x2b\x57\xf1\x48\xbb\xd5\xb2\x67\x92\x89\x5d\xa7\x79\x30\x91\xab\xaf\x18\x99\x49\xb7\x62\x89\x54\x10\xd8\xb2\x6c\xad\xe2\xd3\xae\xb9\x83\xb5\xad\xb0\xaa\x14\x4c\xe0\xcd\x1b\xd8\x96\x0f\xd0\x3b\x13\xfc\x5c\x99\xae\x7a\x11\x3a\xb9\x4e\x1f\xb7\x4e\x01\xdc\x4f\x24\x6d\x93\x14\xd8\xb7\x3a\x0a\x6a\x3e\x16\x86\xaa\x5a\x1f\x9d\x7e\xb8\x22\x19\xca\x82\x75\x71\x13\x61\xc9\x73\xfd\x6b\x9a\x9b\x5d\x65\x7c\x15\xef\xfd\x78\xf8\xd7\xbe\x27\xa3\xd4\xd3\x48\xdb\x75\x35\x05\x62\xe5\x12\xf0\xcb\xd2\x31\x3a\xa8\x09\x13\x1a\xdd\x56\xeb\xd8\x8d\x6a\xf2\xb9\x1f\xef\xc7\xff\x04\x00\x00\xff\xff\xd2\xaf\x0c\xf5\x70\x0e\x00\x00")

func staticBleveMappingJsMappingIndexMappingJsBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingJsMappingIndexMappingJs,
		"static-bleve-mapping/js/mapping/index-mapping.js",
	)
}

func staticBleveMappingJsMappingIndexMappingJs() (*asset, error) {
	bytes, err := staticBleveMappingJsMappingIndexMappingJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/js/mapping/index-mapping.js", size: 3696, mode: os.FileMode(420), modTime: time.Unix(1467383440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingJsMappingTypeMappingJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x59\x6d\x6f\xdb\x38\x12\xfe\x7c\xf9\x15\xac\x50\xac\x65\xc4\xd1\xf6\xbe\xda\x1b\x1c\xb2\x6d\x0a\xe4\x80\xbb\x2d\xba\xbd\x7e\x31\x02\x83\x96\xe8\x84\x67\xbd\x18\x7a\xc9\xd6\xb7\xf5\x7f\xbf\x19\xbe\x89\xa4\x28\x5b\x59\xa0\xc2\x62\xab\x68\x86\xc3\xe1\x70\xe6\x79\x86\xf4\xae\x2b\xd3\x96\x57\x25\xe1\x25\x6f\x7f\xcd\xd9\x0b\xfb\x72\x3c\xb0\x7f\xd1\xc3\x81\x97\x4f\xef\xab\xb2\xad\xab\x3c\x67\x75\xfc\xb6\x49\xab\x03\x5b\x90\xb6\x97\x3e\x94\x0b\x52\x1d\x70\x70\x33\x27\x7f\x5e\x11\x78\xd4\x9f\xe4\xd6\xbc\x7d\xff\x4e\xfe\x3c\xad\xae\x84\xf4\x85\xd6\x24\x63\x3b\xda\xe5\xed\x47\xce\xf2\x0c\x67\xea\x55\xd7\x91\x2f\x8b\x1e\x71\x78\xd4\xb2\x6f\x6d\xb4\x0a\x5a\xb8\x2b\x69\x7e\xfc\x1f\xab\xc7\xac\x68\xb9\xb2\x34\x62\xe5\xf7\xb6\xaa\xd1\x91\xb6\xee\x98\xd4\xe0\x3b\x12\x07\x0d\x0a\x55\xb0\xf6\xe6\x96\x74\x25\x08\x78\xc9\x32\xbd\x78\x7c\x42\x66\xcf\x19\x92\xd3\x9d\x82\x6e\x3d\xc0\x04\xdf\xa6\xb9\x25\x54\x27\xba\xa5\xcd\x9e\x33\x74\xde\xad\x34\xef\x32\xf6\x85\xd5\xc5\x57\x96\xc2\x32\x9a\xa9\x3e\xfa\xe3\x26\x3b\x1c\x98\x70\xf2\x14\x13\x96\xf2\x50\xde\xe5\xf9\xab\x16\x21\x46\xbc\xce\x7d\x3d\xc9\x04\xb3\xe7\x5c\xfe\x40\x5b\xf6\xb1\xaa\x0b\xda\x82\xad\xb2\xcb\xf3\x0b\x0e\xf7\xfa\x13\xdd\x75\x26\xb8\x68\x72\xc4\x55\x85\x10\xf7\x25\xdd\xe6\x2c\xbb\x18\x5a\x57\xfd\xb2\xa3\x03\xf3\x97\x0c\x9e\x77\xf3\xc3\xb1\xa4\x05\x4f\xa7\xba\xa9\xd4\x27\xbb\xd9\x9b\xbf\x64\x50\xbb\x29\xfe\x29\xa4\x10\x93\x7d\x8b\xb8\x0c\x60\xfc\xc2\xea\xf6\x63\x5d\x15\x16\x44\xc7\x0e\x20\xcf\xe5\x50\x09\xd6\xc9\x4e\x03\x29\xda\x58\xcf\x10\x47\x67\x0b\x32\x2b\xbb\x62\xcb\x6a\x7c\xcb\x60\x27\x5b\x5e\x30\x7c\xdf\x56\x55\xce\x68\x29\x3e\xf3\x46\xc4\x0d\xdf\x9f\x58\x75\xa8\x78\xd9\xce\x1e\x2d\x10\xdf\xf3\x32\xbb\x6b\x5b\x51\x88\xfd\xaa\x23\x31\x5f\xb4\xb4\x3e\xe1\x33\x3b\xd4\xe0\x4c\xdd\x1e\x67\x4b\x91\xb0\x0b\x57\x0a\x4b\x67\x61\x09\xae\x2c\x2c\xa1\x0a\xd6\xc3\xd2\x06\xa1\x35\x2c\xe2\x08\x6f\x63\x22\x51\x82\x9b\x16\xc0\x63\xf3\x22\xd1\xe3\xbc\x26\x2f\x37\x34\xcf\xc3\x3a\x18\xd9\xcd\x4e\x14\xc9\x40\xe1\xd4\xbf\x46\x6a\x93\x87\x41\x1b\x0f\x0b\x93\x49\x3d\x32\xaf\x4c\xa5\x11\xa1\xcc\xba\x8d\x17\xbe\xde\x31\x99\x7e\x6a\xa3\xcd\x26\xaf\x67\xca\x4b\x4c\xa5\xd9\x23\xec\xf9\x50\x64\xd2\xe3\xe7\x9f\xc9\xcd\x5f\x7b\x9c\xd4\xb5\x92\x5f\xbf\xae\x1c\x05\x96\xf1\x16\xbe\x1a\x10\xb4\x65\x87\xea\xd0\x1d\xc6\x25\x5f\xaa\xa7\xa7\x1c\x89\x59\xf7\x3e\x71\xb5\xfd\xaf\x5d\xbe\x9e\x99\xd8\xfd\x1b\xca\x18\xd5\xff\x21\xcc\x93\x25\xfe\xe5\xd4\xad\xd2\xae\x59\x51\xbd\x30\xac\xd6\x4f\xb4\x66\x65\xeb\xcd\xb7\x20\x42\x2d\x30\x2d\xae\x4c\x04\xf7\x43\x55\x32\xa9\xba\xa3\x79\xc3\xe6\x2b\x0c\xee\x7b\x5a\xa6\x2c\x27\xb4\x3c\x12\x54\x6c\x92\x2b\x33\xde\x9e\x37\x9e\x87\x7c\xa2\x59\xf6\xfe\x99\xe7\x99\x80\x71\xdb\x21\x15\x63\xdb\x1b\x04\x40\x37\xd6\x73\x2f\x47\x6b\xd6\x76\x75\xb9\xb2\xd2\xc7\xbc\x22\x48\xec\x1c\x70\xc0\x67\x83\x79\xb3\x24\x33\x81\x13\x33\x37\x39\x35\x48\x2c\xa1\x4b\x73\x25\x58\x09\xc3\xaf\x08\x0e\xcb\x41\x37\xe9\xea\xe8\x3c\x5f\x06\x7b\x46\x57\x57\x80\xc6\x72\xd8\xbf\xb9\x5a\x02\x3f\x96\xc3\x76\xca\xd7\x1a\x42\x89\x3f\xc8\x6f\x54\xc2\x16\x24\xc4\x04\xc7\x8a\x5e\xc1\x1d\x65\x81\xce\x72\x84\xd3\x2d\x14\xea\x37\x6e\x97\x6c\xfa\x72\x32\x39\x01\xdb\x4d\x64\x32\xdd\xc3\x29\xe0\xa8\x73\x44\xb2\x4a\x03\x49\x09\x09\x69\x19\x71\xc5\x49\x57\x36\xcf\x7c\xd7\xc6\xa0\x75\x15\xca\x70\x35\xd9\x6a\xac\xe8\xfa\xd6\x26\x9c\xc2\x8a\xf2\x7e\x64\x12\xe3\xe0\x42\x4f\x23\x3d\xf2\x47\x1b\xb1\x72\x6f\xb4\x18\x8a\xb1\x62\xb0\x26\x90\x26\x00\x58\x1c\xbc\x05\x84\x31\x20\x3b\xa5\x30\x14\x3d\x2c\xc3\xbd\x92\x97\x30\x92\x2d\x7c\x5d\xd5\x8f\xb8\xba\x72\x5f\x97\x64\xfd\xb8\x08\x85\x40\x48\x42\xc9\x55\xbc\x2a\xb9\xb4\xb5\x05\x29\xc2\xe9\xa5\x15\x4c\x82\x15\x67\x13\xac\x78\x75\x82\x19\xf8\x3d\x43\x10\xb8\xa3\x54\xe9\xf4\x5c\x08\x4a\x89\xd8\xd5\x47\xab\xb4\xaa\x9a\xc4\x5a\x1d\xca\x5a\x0e\xf3\xd3\x08\x46\xae\xa3\x4d\x44\xae\xa5\xda\x35\x89\x36\xf7\x9f\x3f\x47\x8f\x8e\x9b\x67\x94\x3f\x7d\xbe\xff\x2a\xb4\x51\x86\x5f\x1f\x83\x89\x28\x1c\xec\x63\xd3\x37\xbb\xc1\xd0\x8d\xf0\x9a\x43\x4f\x03\x52\xab\xf6\x7e\x9c\x5e\x68\xce\xfb\x13\xc0\x0f\x0b\xa1\x56\xf8\x8a\xd3\x51\x40\x54\xb0\x2b\x14\x75\x3c\x5c\x7c\xc5\xee\x7e\xef\xdb\xd0\x12\xc7\x4e\x48\x49\x4e\x28\xd7\xe5\x28\xcb\x20\xe0\xa7\x39\xf9\xe9\x27\xa9\xb3\x1a\x0c\x3f\x39\x5f\x4e\x84\x01\xbb\x43\x3d\x18\x76\x87\x3a\x4d\x06\x83\xcc\xd6\xaa\x6d\x0e\xa6\x80\x3b\xd7\x69\x0c\xd5\xde\x08\xc7\x5e\x01\x85\xd3\xf6\x20\x63\x39\x6b\xd9\x68\x36\xaf\x26\x2a\xfb\x4b\xf1\x9d\xaf\xf6\x18\x5b\x6c\x00\xaa\x5d\x6c\xe7\xf4\x1c\x51\x74\xa6\x13\x72\x16\xa8\x32\xa3\x1a\xcb\x6e\xea\xa1\x7c\xa9\xf6\x8c\xe8\xa4\x4f\x65\xf8\xa9\xb8\x10\x4b\x81\x79\xb7\x34\xdd\x27\x21\x47\x7a\xef\x8d\xc9\x33\xa5\x34\x86\x35\xe9\x33\x2d\x9f\x58\xf6\x49\xf5\x3e\x76\x35\x09\xb8\xf5\xa9\x4c\x7c\x4c\x36\x08\xfc\x22\x4a\xb8\x5e\xf5\x4d\xf7\x4f\xe2\xbb\xbf\x72\xa9\x83\xc3\x88\x1e\xa0\xf5\x57\x7e\xf7\xef\x38\xd8\xdf\xe7\xf5\x06\x69\x9a\xb2\x03\x34\x18\xc6\xd5\xa6\xea\xea\x94\xdd\x89\xcf\x0b\x88\x4c\xd3\xda\xef\xa2\x3f\xf2\x1d\xba\xcc\xcb\xf8\xc8\x84\x94\xdd\xaf\x9f\xd9\x83\xe2\x97\x5e\x40\xa7\x43\xc1\x5b\xdb\xa5\xe4\x6d\x51\xc1\x76\x41\x8d\x76\x9e\x15\x79\x13\xd0\xb4\xea\x1e\xb2\xf7\x3c\x79\x0b\xdb\x5b\x40\xd3\x9e\x60\x52\xc6\x78\x9a\xa3\x37\xe2\x38\x3a\xf7\x80\x44\xb9\x18\xf7\xb3\x4b\xfc\xba\x8e\xf0\xee\x94\xf2\x92\xd5\x91\x48\x4b\x3d\xcf\x48\xbc\xcd\x35\xac\x4d\x8a\xb4\xae\x17\xc0\xe7\xf0\x6a\x47\xc7\xd4\x22\x07\x9f\xdf\xad\xe0\x9f\x5f\x08\x68\x26\x39\x2b\x9f\xda\x67\xf8\xfb\xfa\x3a\x14\x6e\x50\x59\x73\x00\x0f\xf0\x65\x60\xd2\x6c\x2d\x98\x69\x0e\x39\x4f\x59\xcc\x17\xe4\xef\xf3\x71\x38\xb1\x5c\x57\x21\xb0\x32\xb5\x11\x78\xb8\x74\xd8\x3e\x14\x35\x97\x80\xac\x63\xb1\x75\xa7\x71\xd9\x8a\x7d\x39\xf2\xa5\xb2\xaf\x46\xbc\xb3\xe4\x7c\x18\x7b\x58\x02\xa2\xae\x1c\x4c\x76\x70\x58\x23\x94\x94\x8c\xd6\x37\xc2\xea\xcd\xae\xe6\xac\xcc\xf2\x23\xb1\xcc\x62\x9b\x4d\xe1\xbc\x50\x77\x29\xcc\xcf\x48\x5b\x11\x8a\x56\xfe\xf3\xd0\xab\xbb\x2a\x09\x21\xbf\x1e\x49\x84\x76\x23\x60\x87\x52\x6e\x00\xf9\x83\xb7\xcf\xd0\xbe\x91\x3d\x3b\xe2\xf8\x9a\x1d\x6a\xd6\x80\xa8\x21\xed\x33\xd3\x2d\x99\x88\x85\xe9\x7e\xae\x4c\x9e\x4c\xbc\x12\xd2\x31\x13\x3d\x68\x7f\xa6\x5e\x6b\x42\xb4\x54\xe1\xf3\x3f\x7f\xff\xed\xdf\xc9\x81\xd6\x0d\x8b\xc5\x2b\xac\x00\x04\x7c\x77\x74\x4c\xaa\x38\x9a\x3c\x14\x1e\x02\x27\x04\xa6\xf5\xa6\xc6\x36\xa0\x57\x5a\xe3\xbb\xcd\xcc\xa6\xb7\x3b\x74\xcd\xb3\x69\xe7\x87\x3d\xa0\xa8\x30\xb0\xe5\xf4\xc9\xab\x01\x38\x2b\xe9\x3a\x42\xe0\xb3\x09\x05\xcb\x01\xe7\x1e\xe9\xe6\x35\x50\xb6\xc7\x91\x86\x3e\x95\x61\xf7\x3c\xf4\xae\xed\x92\xa6\x02\x95\x8c\x43\x3d\xd1\xe3\x6f\x75\xc6\xea\xf7\x55\x01\xb1\x15\x3d\xc5\xca\x29\x1d\xef\x86\xc3\xec\x71\x78\x70\x4c\x17\x64\x6b\xbb\xae\x31\x88\x26\x6a\xc0\xa6\xc2\x11\xf8\x8b\xc7\xbb\x39\xb9\x21\xf1\x36\x24\x58\x05\xe1\x87\x37\xf7\xc5\xa1\x3d\xfa\x0d\xaf\xd9\xeb\x3d\x6e\xb4\x27\xb4\x7c\xf0\xa0\xfa\xe4\xfb\xd8\x57\xbc\x3f\xb1\x1f\xd3\x70\x02\xe9\xdc\xb5\x45\xf2\x60\xd2\x5f\x14\xa9\x13\x28\xae\x72\x6d\x67\x97\x59\x83\xa6\x3e\x5c\x8a\x1e\xa3\xbe\x71\x16\x6c\x2c\x0b\xcb\x7a\xaf\xb9\xd6\x86\xbc\xce\x06\xd3\x4b\xc7\xb1\xb0\x2d\x87\x20\x17\x0a\x1f\xe8\xbf\xa8\x30\x5f\x67\x8d\x5e\x0c\x2f\x01\x55\xe0\x3f\x33\x38\x53\x92\x61\x5f\x68\xd1\x01\xae\x47\xad\x7e\xbc\x6b\x55\x01\xc3\x15\x29\x5d\xa0\x85\x61\x8f\x2a\x4c\x3b\x9d\x02\x8c\x18\x36\x0d\x03\x75\x55\xbc\xb2\x7d\x99\xda\xfa\x0e\xd4\x8a\x41\x8d\xcf\x86\xb6\x0a\x5d\xa8\xe3\x6e\x79\x88\xe2\xb3\x37\x3e\x26\xf1\xce\xb0\x5d\x88\x7b\x21\xd8\xe1\x50\x9b\xa0\xf6\x6b\x90\x17\x5e\x41\x2c\xf1\xb1\xaa\x4f\x97\x28\x08\x8d\xe7\x51\xc5\xf5\x61\x0a\x04\x59\xc6\xc3\x97\xae\xbe\x92\x29\x37\xf9\xb2\x1a\x65\x52\x7a\x86\x11\x05\x69\x86\x88\x16\x8d\x8c\x73\xed\x8f\x26\x52\xb7\x7d\x30\x7d\x83\xc5\xa1\x2e\x5f\x9a\x5f\xb6\xad\xc8\x35\x69\xdd\x6d\xe3\x71\x26\x35\x56\x07\x3c\xca\x2d\x40\x6a\xc6\x19\x54\x6b\x88\xb2\x0d\xb5\x4c\x6b\x87\xc7\xc4\xef\xde\x8f\xfd\xb8\x09\x3c\xe9\x13\xdd\x27\x83\x42\xe2\x36\xb1\xb1\x88\x6f\x90\x1e\x2e\xd3\xdc\x12\xbe\x0a\xf4\x8a\x96\xb3\xfd\xcf\x06\x9f\x59\xda\xd5\x0d\x7f\x61\x90\x2d\xb2\x0b\x26\xb0\x33\xb0\xbd\xd6\x26\xcf\x36\x33\xa8\x76\xb6\xe3\xdf\x12\x97\x3e\x64\xd4\x0b\xff\xc0\xa4\x0e\x89\x85\x68\xc1\x23\xe0\x2d\x96\xb6\xd1\xa0\x60\x1d\x72\x2b\xc6\x6e\x05\x94\xad\xbd\xb4\x25\x37\x34\xc2\x93\xe8\x1e\xcf\x71\xf5\x5d\x1b\xbf\x93\xa2\xcd\x60\x06\x3f\xe0\xeb\xfd\x08\xe2\x42\xc0\xe1\x30\xe4\x9f\x53\xac\x00\xda\x0f\x9a\x31\x09\x87\x7f\x4c\x41\x30\xdd\x72\x38\xdb\xe2\x45\x3f\xd5\x55\x2c\x4b\x5d\x96\x97\x06\xd9\x48\x1c\xd4\xf9\xb6\x6b\x99\xa4\x29\xaa\x4d\x64\x55\xda\xe1\xa1\xc9\xe4\x2a\xf6\x84\x50\x80\x3d\xa4\xa1\x24\x09\xf2\xfe\x30\xc5\xfc\x02\xb0\xac\xc8\xc2\xb3\x85\x06\x94\xc2\x8c\x7f\x96\x1a\x47\x29\x71\x40\xea\x92\x0f\xad\x5b\x76\x7d\x2d\x0c\x45\x36\xe4\xe5\x90\x72\x14\x4c\x0d\x95\x16\x62\xc4\x3a\xb2\x86\x60\x31\xfe\x6d\x24\x03\x7a\x87\x0c\x41\xbf\x31\x97\xd4\xb8\x1d\x00\x88\xbc\x21\x34\xcf\xab\x3f\x42\xf7\x49\x4e\x27\x74\x6b\x85\x77\xed\x5a\x0d\x64\x2a\x4e\xdd\x0f\x0d\xdf\x8c\xeb\x67\xd2\x14\x83\xcb\x71\xfb\x31\x17\xda\xd8\x3c\x2e\x46\xd5\xcc\x5d\xb6\xe8\x41\xc7\xf5\x7a\x2f\x96\x90\x46\xe3\x7a\xfd\x7d\x77\x50\xe5\x34\xa9\x44\xf5\x0a\x93\x4b\xbd\xd1\x68\x27\x74\x71\xa0\x3b\xa9\x9b\x4a\xa6\x66\xbd\x4d\x54\xb9\x19\x86\x6a\xcf\xaa\x5f\x44\x21\x82\xc2\xc7\x23\xa9\x24\x4c\x53\x56\x50\x30\x0f\x6c\xa6\x0a\x73\x94\xb5\xa8\xd1\xf3\x1c\x3e\x67\xf8\xc7\xd1\xbb\x4c\x69\x81\x18\x18\xdc\xd6\xbf\xd7\x7b\xcd\x59\xe2\x80\x53\xff\x87\xa3\x13\x6c\x9c\xf0\x11\xbf\x33\x19\xb1\x41\x14\x33\x44\xdd\xec\x90\x5f\x6e\xf1\x3c\x17\xbc\x72\x05\xcf\xa4\xae\x7b\x6f\x2a\xff\x7f\xba\xfa\x7f\x00\x00\x00\xff\xff\xe4\x75\x86\x68\xe5\x27\x00\x00")

func staticBleveMappingJsMappingTypeMappingJsBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingJsMappingTypeMappingJs,
		"static-bleve-mapping/js/mapping/type-mapping.js",
	)
}

func staticBleveMappingJsMappingTypeMappingJs() (*asset, error) {
	bytes, err := staticBleveMappingJsMappingTypeMappingJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/js/mapping/type-mapping.js", size: 10213, mode: os.FileMode(420), modTime: time.Unix(1490901669, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisAnalyzerHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x57\x41\x6f\xc2\x36\x14\xbe\xf3\x2b\xdc\x68\x07\x7a\x48\x69\xd7\x6b\x88\x54\x21\xed\xd6\xee\xb0\xdd\x27\x93\x18\x62\xe1\xd8\x91\xe3\xd0\x52\xc4\x7f\xdf\xb3\x1d\x12\x3b\x71\x33\xda\x32\x75\x87\x21\x15\x4c\xfc\xfc\xf9\x7b\xef\xfb\xec\x57\x92\x9c\xee\x51\xc6\x70\x5d\x2f\xa3\x35\x23\x7b\xf2\x2c\x72\xcc\xa2\x74\x36\x73\x67\x4a\xfd\x30\x2e\x08\xce\x89\x84\x39\x04\xaf\xa4\x78\xf4\x67\x15\x55\x8c\x44\xe9\xaa\xa9\x95\x28\xd1\x13\xc7\xec\xf0\x4e\x64\xb2\x28\x1e\xd3\x59\xb2\x00\xb0\x20\xe6\x5a\xe4\x87\x33\xa2\x9e\xe4\xdb\xb8\x2e\xc4\xeb\x32\x22\x52\x0a\xf9\x4c\xea\x1a\x6f\x49\x64\xe6\xcd\xab\x5d\x8c\x19\x91\x0a\x99\xf7\x38\xc7\x7c\x4b\xa4\x5e\x99\x31\x81\x77\x4e\xb0\x14\x8c\xb4\xb1\x51\x8a\x8e\x47\x17\xf3\x74\xb2\x9b\xb6\xcc\xcc\x78\x23\x64\x79\xde\x41\x8f\xa3\x16\xc1\x8c\xd3\x0e\xd7\xcd\x42\x4f\xc5\x5b\x29\x9a\xca\x09\x30\x41\x0c\xaf\x09\x43\x30\x0f\x0c\x38\x2e\xa1\x34\x2f\xf0\x9e\x2c\xcc\xf3\x41\x2c\xe5\x55\xa3\x74\x06\x39\xad\x31\xc8\x90\x2f\xa3\x3d\x25\xaf\xbf\x73\x76\xb0\x7a\x78\xe1\xed\x0b\xc2\xa1\x86\x84\x2d\x23\x03\x8f\xd4\xa1\x02\xae\x8a\xbc\xa9\x60\xb8\x4b\x38\x13\x5c\x41\x6a\x11\xa2\xb0\x93\xb2\xcb\x2b\x86\x33\x52\x08\x06\x12\x2f\xa3\x17\x43\xb8\xcf\xd8\xa9\xd2\x85\x15\xb0\xf9\xa7\xab\x02\x4b\x9c\x29\xd0\xe7\x37\xca\xe0\xa3\x0e\x14\x20\x69\xd8\x19\x8c\xd1\x5a\xb5\x60\xb3\x51\xb6\xd6\x18\xb8\x75\xd6\x5d\x06\xd0\x7f\x6d\x2c\xea\x1d\x23\x7c\xab\x0a\x94\xa0\x87\x91\x0e\x74\x0c\x1e\x53\x45\x40\xd1\x17\xc1\xb5\x20\xd4\x23\xb3\x68\xfe\x2d\x72\x29\xba\x1f\x2e\x6c\x68\x5c\x0b\xa9\xb4\xe6\x63\xc8\x56\xdd\x20\xe6\xe5\x59\x8e\xbc\x00\xc8\x92\x54\x04\xab\x1e\x5a\xab\x64\xf5\x41\x94\xa3\xe0\x86\x48\x81\x8e\x3b\xb4\x3e\xa0\x5f\x28\xcf\xc9\xdb\x80\x00\x50\xa8\x2b\xcc\xcf\x24\xb6\xec\x50\x15\x14\x6c\x86\xba\x51\x5c\x52\xde\x00\xef\x64\xa1\x03\xf5\x71\x44\x81\xed\xdb\x63\x39\x84\x05\xce\x74\xb3\x8c\x6e\xfe\xf9\x54\xd8\x7b\x80\x66\xbb\x65\x24\x49\x29\xf6\xa4\x07\x9f\x5b\xe6\xb7\xe1\x75\x13\xcc\x2d\x10\xaa\x1a\xc6\x62\x49\xb7\x85\xea\xb2\xf0\x45\x98\xb4\x52\xf0\x0c\x5d\x92\xd7\x45\xe7\x2c\x74\xac\x9c\x43\x9a\x09\x16\xd7\x65\xfc\x70\x3f\xf4\x4d\x4d\x18\xc9\xcc\xd5\x03\x62\xc3\x3d\x0a\x9e\xc8\xf3\xbe\x64\x2b\xf3\x30\x9f\x7f\x50\x33\xc7\xa4\x76\x95\x39\xea\x76\xa9\xb9\x42\xa6\x2a\xed\xdd\x44\xc1\x40\x7d\x3b\x8d\x81\x87\xde\x87\x2c\x44\xa5\xa8\xe0\xae\xb3\x33\xcf\xd1\xfd\x37\xcd\x0a\x00\x8e\xc7\xfe\xd1\xe9\x94\x2c\x2c\xc0\x50\x4e\x5b\x1c\x5f\x52\x23\xe2\x64\x91\x7f\x1d\xd6\x78\xdd\x28\x65\xd9\xb5\xc6\xf4\x4a\x3c\x57\x05\xad\x6f\xcf\xd7\xb7\x8d\x9d\xac\xdb\x5a\x71\x04\x7f\x71\x4e\x36\xb8\x61\xca\xb3\xe5\x53\x9e\x27\x0b\x8b\x31\x41\xfb\xcb\xd7\x79\xd7\xce\xcc\xb1\xfd\x53\xec\x08\xa7\xef\xfa\x5f\x82\x6e\x18\xf2\x61\xef\xb1\x4f\xb4\x37\xc7\x91\xea\x0c\x3e\xe9\xc6\xc0\x85\xd9\x2d\x0c\xc5\x5f\xe8\x42\xe3\xc1\x71\xc2\xbe\xc2\x63\xff\x75\x5b\x6b\xfb\x75\x5f\x3a\xf7\x75\x4f\xc2\xe6\x1b\x5b\xef\xeb\x1d\xd8\x90\xbe\x7e\xf7\x35\x19\xfc\x67\xdb\x6f\x90\xdd\x77\xfb\xaf\x07\x7a\xdd\x06\x6c\x44\x0a\x74\xe0\xa9\x2d\xbf\xd5\x72\xdd\x0d\xaf\xdf\x73\x1d\xf4\xff\x9b\xee\x85\x4d\xd7\xa9\xd9\x67\xba\xae\xb3\xec\x7a\x1d\xd7\x01\xbd\xa8\xdb\x2a\xdf\xbe\xca\xe7\xd4\xdf\x78\x3f\xd8\x70\x5d\x4b\xfe\x58\xc7\xb5\x43\x2d\xc3\xd4\x6f\xe2\x8d\x10\xaa\xff\x9d\xdd\x27\xa3\x4d\xeb\x7b\xf6\x03\x82\x7e\x32\x7d\x19\x32\xcc\x33\xc2\xc0\x56\xe9\x8a\x89\x9a\xf8\xbc\x07\x1b\xdd\x5c\x6b\x27\x33\xfa\xcc\x56\x1f\x40\xae\x1b\xca\xf2\xb9\xfe\xad\x3a\x38\x16\x9e\x8c\x43\x9e\x95\xa4\x25\x96\x07\x4f\xb2\x3f\xf0\xde\xc9\xbd\xd3\xc1\x7e\xfe\x1d\x00\x00\xff\xff\x79\xcf\xbe\x8c\x11\x11\x00\x00")

func staticBleveMappingPartialsAnalysisAnalyzerHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisAnalyzerHtml,
		"static-bleve-mapping/partials/analysis/analyzer.html",
	)
}

func staticBleveMappingPartialsAnalysisAnalyzerHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisAnalyzerHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/analyzer.html", size: 4369, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisAnalyzersHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4d\x8f\xda\x30\x10\xbd\xf3\x2b\x5c\x9f\x16\x69\x03\x6a\xcf\x49\xa4\x4a\xed\x71\xb7\xa7\xfe\x80\x21\x1e\x12\x6b\xbd\xb6\x65\x4f\x80\x74\xb5\xff\xbd\xe3\x84\x7c\x40\x51\x51\xab\xaa\x08\xc1\xb3\xe3\x79\xf3\xfc\x66\x26\x39\xc1\xce\xa0\xa8\x0c\xc4\x58\xc8\x61\xd1\xff\x66\x91\x82\xf6\xa8\x64\xb9\x12\x22\xa7\x06\x41\x25\x94\x70\x18\x40\xbf\x5d\x3e\xc3\x2b\xe6\x5b\x06\x8b\xbd\x79\xcd\xa8\x3f\x9d\x76\xce\x0c\x39\xed\x9c\xea\x26\x2e\x61\xeb\x2c\xa0\x47\xa0\x42\x3e\x80\x65\xb6\x47\x38\x80\x59\x0b\x6d\xf9\xab\xf0\xf4\x04\xde\x6b\x5b\x6f\xf8\x99\xe9\xa2\x8e\x03\xf8\x81\x21\xca\x39\xa7\x2a\x73\x48\x4c\x95\xd1\xd5\x4b\x21\x51\x69\xfa\x7c\x3e\x76\x26\x15\x89\xf5\x51\x50\x68\x71\x2d\xcb\xb7\xb7\x7e\xf7\xfd\x3d\xdf\x42\x92\xab\x96\x54\x67\xc8\x0b\xa5\x0f\xa3\x35\x3b\xb2\x59\x1d\x5c\xeb\xc5\x84\xb2\x53\x94\x22\x38\x83\x85\xec\xd7\x72\x8e\xe4\xd8\x5d\x4b\xe4\x6c\x12\xa5\xf7\x85\xfc\x70\xd0\x78\xfc\x66\x4d\xf7\xe4\x14\x18\xb9\x38\x38\x7e\xee\xab\x5f\x4b\x41\x9d\xe7\x6c\x03\xf5\x2d\x92\x59\x6c\x2f\x53\xe1\x1e\x5a\x43\x3d\x3e\xc5\x0b\x7d\xac\x30\x7a\xb0\x63\x44\x6d\x3a\xdf\xe8\x8a\x05\x4f\x28\x4b\x3a\x6e\x25\x81\xa0\x21\x6b\xb4\x52\x68\xb9\x65\xd8\x50\xc9\x16\x26\xb2\x52\x7c\xe5\x90\xa5\x09\xdb\x41\xea\x3f\x32\x46\xa1\x41\xc2\x4b\x6b\xfe\xb7\x29\x14\x20\x36\x7f\xe8\xca\x97\x5e\xf7\x6f\x7d\xc9\xb7\xdc\x6b\x53\x13\x4e\x0d\x39\xce\xcf\x34\x2a\xb1\x71\xc7\x42\x7e\x27\x6d\xe2\xe6\x05\xbb\xf8\x70\x67\x46\xd6\x1b\x83\xb6\xa6\x46\xe4\xe2\xe3\x72\x5e\x44\xe5\x4c\x12\x57\xc8\x4f\xb2\x7c\x76\x16\x7f\xcd\xc9\xff\xe3\xa4\xe6\xb4\x77\x8e\x6e\xcc\xff\x25\xcf\xea\x2f\x6b\x3c\x57\xd8\xe2\x71\x2a\xef\xdd\xca\x5e\xd5\x35\xbe\x5e\x94\xd7\xb7\xc6\x64\x41\xd7\x0d\xf1\x05\xf1\x28\x46\xde\x6b\xef\x6f\x5e\x7c\xb8\x2e\x83\xf4\x2a\x2c\x57\x3f\x03\x00\x00\xff\xff\xd9\xa5\x25\x52\x26\x05\x00\x00")

func staticBleveMappingPartialsAnalysisAnalyzersHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisAnalyzersHtml,
		"static-bleve-mapping/partials/analysis/analyzers.html",
	)
}

func staticBleveMappingPartialsAnalysisAnalyzersHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisAnalyzersHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/analyzers.html", size: 1318, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisCharfilterHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\xc1\x6e\xdb\x30\x0c\xbd\xe7\x2b\x34\x9d\xba\x83\x67\x6c\xbd\xda\xbe\x04\xd8\xad\xdd\x61\xfb\x01\x45\x62\x62\xa1\xb4\x65\x48\x72\xba\x20\xc8\xbf\x8f\x92\x9c\xc4\x56\xdd\x01\x1d\x66\xa0\xae\x42\xd2\x8f\x8f\x8f\x14\x2b\xa5\x8f\x4c\xa2\x70\xae\xe6\x3b\x84\x23\x3c\x19\x25\x90\x37\x9b\xcd\xdc\xd3\x05\x63\xd1\x82\x50\x60\xc9\xc7\xe8\xa9\xda\xc7\xa5\xd7\x6b\x8f\xc0\x9b\xed\xe8\xbc\xe9\xd8\xb6\x15\x96\x7d\xd7\xe8\xc1\x56\x65\xfb\xd8\x6c\xaa\x92\xf0\x56\x61\x77\x46\x9d\xae\xa0\xc1\xd9\x1f\x0a\xd7\x9a\xd7\x9a\x83\xb5\xc6\x3e\x81\x73\xe2\x00\x3c\xfa\xe3\x33\x7d\x2c\x10\xac\x67\xf1\x5d\x28\xd1\x1f\xc0\x86\x2f\x25\x1a\xf1\x32\x0b\xb6\x06\x61\x8a\xe5\x0d\x3b\x9f\xe7\x98\x97\x4b\x4a\x3a\x31\x8b\xe7\xbd\xb1\xdd\x35\x43\x38\xf3\x09\x21\x9e\x9b\x1b\xee\xbc\x8a\xe0\x2a\x0e\xd6\x8c\xc3\x2c\x20\x06\xa1\xd8\x01\x32\xf2\xd7\xdc\xf7\xa2\x23\x75\x9e\xe9\x5d\x95\xd1\x9e\xc5\xea\x7e\x18\x7d\xa8\x40\x69\x27\xa8\x13\xaa\xe6\x47\x0d\xaf\x3f\x7a\x3c\xa5\x96\x2c\xc2\xa7\x87\xc2\x49\x43\xc0\x9a\x47\x78\xe6\x4f\x03\x71\xf5\xf0\xdb\xaf\x86\xcf\x09\x4b\xd3\x7b\x2a\x8d\x33\xad\xae\xec\xd8\x80\x42\x42\x6b\x90\xba\x5c\xf3\xe7\x48\xf8\x5e\xf1\x4c\xa5\x7f\x52\x40\xd2\x44\xec\xe3\x40\x04\x96\xbc\xf9\x45\xef\x75\x29\x66\xc8\xd2\x60\xe1\xba\xe2\xeb\x37\x16\xf5\x59\x4f\xe2\x00\x41\x7e\x58\xbb\x38\x2d\x6d\x18\x9c\xc4\x2d\x0d\x6b\x60\xb5\x8d\xd6\x87\xcf\xef\x7e\x36\x69\x7e\xaf\xe8\x4b\x2c\x69\x35\x7c\x4d\xf3\xd5\xc0\xd0\x87\x5c\xa3\x37\x81\x95\x19\xbc\x36\x7d\x20\x61\x61\x00\xe1\x33\xee\x24\x13\x5b\x16\xe3\x78\x73\x3e\x2f\x4c\x97\x4b\x55\x26\x98\x4c\xc7\x32\x09\x99\x5b\x63\xdf\xb3\x9f\xcb\x31\xb8\xdd\xd8\x5c\x91\xe0\xd1\xbd\xc4\x51\x01\x73\x56\x26\x19\x06\xe1\x5b\x5e\x4e\x17\xbe\x0c\x96\xbf\x6d\x87\xbd\x31\xfe\xbe\x74\x76\xa3\xf7\xa9\x7c\xbd\xcf\x9b\x7c\x5b\x63\xbe\x67\xf4\x57\x28\xd8\x8b\x11\xb3\x9b\x10\x57\x84\x96\x2f\xc4\x55\xf4\x12\x90\xba\xdc\x6c\xd1\x38\x1a\xc5\x84\xbd\x9a\xe8\xd3\xff\xca\x14\x4f\x1f\x49\xf5\x0e\xe4\x6e\xd4\xa8\x1e\xc2\xad\xcd\xa6\x34\x6d\x80\x04\xf9\x86\xe7\x60\x75\x27\xec\x89\x0d\x23\x62\x61\xf5\xa1\xa5\x9d\xf8\x53\x1c\x67\xb5\xdf\xfa\x90\xfe\xff\x09\x00\x00\xff\xff\x05\x8e\x0c\x15\x1e\x06\x00\x00")

func staticBleveMappingPartialsAnalysisCharfilterHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisCharfilterHtml,
		"static-bleve-mapping/partials/analysis/charfilter.html",
	)
}

func staticBleveMappingPartialsAnalysisCharfilterHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisCharfilterHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/charfilter.html", size: 1566, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisCharfiltersGenericHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func staticBleveMappingPartialsAnalysisCharfiltersGenericHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisCharfiltersGenericHtml,
		"static-bleve-mapping/partials/analysis/charfilters/generic.html",
	)
}

func staticBleveMappingPartialsAnalysisCharfiltersGenericHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisCharfiltersGenericHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/charfilters/generic.html", size: 0, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisCharfiltersRegexpHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x90\x41\x6e\x86\x20\x14\x84\xf7\x9e\x82\xb0\xff\xfb\x5f\x00\xdc\x75\xd9\x34\xe9\x0d\x10\x9e\x4a\xf2\xe4\x91\x07\x5a\xbd\x7d\x29\x9a\xb4\x26\xa6\x9b\xc6\xd9\x40\xc2\x30\x93\xf9\x44\x91\x72\x7e\x11\x16\x4d\x4a\x5a\xf6\xc4\xd3\x63\x60\x9a\xa3\x6c\x1b\x71\x48\xa1\xe9\x00\x45\x79\xd3\xd2\x8e\x86\x7b\x8f\x19\xf8\x03\x06\x58\x8b\xad\x9c\x33\x1a\x16\xaf\x6b\x64\x48\xc9\x53\x50\xcf\xfa\xe1\x27\xa0\x86\xf8\x10\xe7\x2c\xc2\xf0\x70\x3e\x99\x0e\xc1\x69\xb9\x78\xf8\x7c\x0f\xb8\xbd\x91\x33\x28\x4f\xf6\x43\xc5\x3e\x91\x03\xfc\x5d\xfc\xc2\x7b\xf3\x95\x3f\x6f\x11\xb4\xcc\xb0\x66\x79\x9a\x64\x29\x64\xa6\xeb\x0e\xef\x2e\x66\x89\x88\xc6\xc2\x48\xe8\xa0\xac\x3e\x60\xa8\x67\x41\xd5\x36\xcd\xbf\xa8\xd5\xe0\x6f\x6c\xf5\x32\x41\xc8\xf7\xf3\xda\x3b\xef\x02\xb6\xa7\xff\x41\xec\x2b\x00\x00\xff\xff\x9a\x37\xb9\x1d\x66\x02\x00\x00")

func staticBleveMappingPartialsAnalysisCharfiltersRegexpHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisCharfiltersRegexpHtml,
		"static-bleve-mapping/partials/analysis/charfilters/regexp.html",
	)
}

func staticBleveMappingPartialsAnalysisCharfiltersRegexpHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisCharfiltersRegexpHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/charfilters/regexp.html", size: 614, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisCharfiltersHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4d\x6f\xdb\x30\x0c\xbd\xe7\x57\x68\x3a\x35\x40\x9d\x60\xd8\xd5\xf6\x65\x1f\xb7\x76\x97\xed\x3c\x30\x16\x6d\x0b\x55\x25\x43\x62\x3e\x8c\xa2\xff\x7d\x94\x5c\x7f\xa4\x09\xd6\x6d\x18\x16\x04\xc9\x13\x4d\x3d\x3d\x3d\x92\xce\x09\x76\x06\x45\x65\x20\x84\x42\x0e\x8b\xf4\x9b\x05\xf2\xba\x43\x25\xcb\x95\x10\x39\xb5\x08\x2a\xa2\x88\xfd\x00\x52\xb8\xbc\x87\x47\xcc\xb7\x0c\x16\xb1\x6f\x7d\x77\x11\x9b\xd7\x8c\x12\x43\x8c\xbc\xb0\xe6\xb4\x73\xaa\x9f\xf8\x85\x6d\x32\x8f\x1d\x02\x15\xf2\xa6\xaa\x2d\x1f\x71\x5b\xd5\x07\x30\x6b\xa1\x2d\x7f\x15\x9e\xee\xa0\xeb\xb4\x6d\x36\x60\xc1\xf4\x41\x87\x4d\xd5\x82\xff\x51\x6b\x43\xe8\x83\x9c\x0f\x56\x65\x0e\x91\xae\x32\xba\x7a\x28\x24\x2a\x4d\x1f\x39\xf3\x4b\x4a\x1c\xb9\x45\x22\xbf\x15\xe4\xf7\xb8\x96\xe5\xd3\xd3\x10\x7f\x7e\xce\xb7\x10\x85\xab\x25\x5f\x7c\xca\xd9\x1b\xe2\x4b\xc6\x8c\xf3\xa7\x2f\x90\x17\x4a\x1f\x46\x5b\x77\x64\xb3\xc6\xbb\x7d\x27\x26\x94\x9d\x82\x14\xde\x19\x2c\x64\x5a\xcb\x79\x27\xef\xdd\xed\x89\x9c\x8d\xba\x75\x5d\xc8\x77\x07\x8d\xc7\xaf\xd6\xf4\x77\x4e\x81\x91\x8b\xc4\xf1\xf3\x7b\x17\x5c\x4b\x11\x45\xb3\x9e\x44\x7f\x8d\x68\x16\x9c\xa4\x2a\xac\x61\x6f\x28\xe1\x53\x38\xd3\xc8\x2a\x43\x07\x76\xdc\xd1\x98\xbe\x6b\x75\xc5\xa2\x27\x94\x45\x2d\xd7\x0e\x01\xaf\x21\x6b\xb5\x52\x68\xb9\xe5\xd8\x73\xc9\x26\x47\xb2\x52\x7c\xe6\x2d\x4b\x23\xb6\x83\xd4\x7f\x64\x8e\x42\x83\x84\x17\xf6\xfc\x6f\x5f\xc8\x43\x68\xff\xd0\x98\x4f\x49\xfa\x2f\xad\xc9\xb7\xdc\x72\x53\x2f\x4e\x7d\x39\x8e\xdb\x34\x59\xa1\x75\xc7\x42\x7e\x27\x6d\xc2\xe6\x01\xfb\x70\xf3\xf6\x40\xad\x37\x06\x6d\x43\xad\xc8\xc5\xfb\xe5\x70\x89\xca\x99\xa8\xaf\x90\x1f\x64\x79\xef\x2c\x5e\x1e\xcb\xff\xe3\x6c\xe7\x54\x3b\x47\x57\xde\x22\xe7\x3c\xab\xbf\xac\xf4\x5c\x67\x8b\xc7\x45\x91\xdf\x2c\xef\xab\xe2\x86\xc7\xb3\x1a\x77\x7b\x63\x32\xaf\x9b\x96\xf8\x8a\x78\x14\x91\x19\x2a\x26\x16\x03\xff\xeb\x42\x5c\xb5\x60\xb8\x38\x83\xf8\x6a\x2d\x57\x3f\x03\x00\x00\xff\xff\xcb\x3b\x71\x01\x76\x05\x00\x00")

func staticBleveMappingPartialsAnalysisCharfiltersHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisCharfiltersHtml,
		"static-bleve-mapping/partials/analysis/charfilters.html",
	)
}

func staticBleveMappingPartialsAnalysisCharfiltersHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisCharfiltersHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/charfilters.html", size: 1398, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfilterHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\xcd\x6e\xdb\x30\x0c\xbe\xe7\x29\x34\x9d\xba\x83\x67\x6c\xbd\xda\xbe\x04\xd8\xad\xdd\x61\x7d\x01\x59\xa2\x6d\x21\xb4\x64\x48\x72\xba\x20\xc8\xbb\x4f\x3f\x4e\x6a\x3b\xee\xb0\x0e\x13\x10\x45\x26\xa9\x8f\xe4\x47\x8a\x85\x90\x47\xc2\x91\x59\x5b\xd2\x1a\xe1\x08\x4f\x5a\x30\xa4\xd5\x6e\x37\xd7\xf4\x41\x98\x75\xc0\x04\x18\xaf\x23\x7e\x15\xdd\xe3\x52\xeb\xa4\x43\xa0\xd5\x7e\xb4\x4e\xf7\xe4\x45\x1f\x40\x91\xef\x12\x1d\x98\x22\xef\x1e\xab\x5d\x91\x7b\xc0\x4d\xdc\x5a\x8b\xd3\x15\x35\x28\x55\x9b\xd9\x4e\xbf\x96\x14\x8c\xd1\xe6\x09\xac\x65\x2d\xd0\xa8\x8f\x6b\xba\xcc\x10\x8c\x23\x71\xcf\x04\x53\x2d\x98\x70\x93\xa3\x66\x87\x99\xb1\xd1\x08\x93\x2d\xad\xc8\xf9\x3c\xc7\xbc\x5c\x92\xd3\x29\xb2\x78\x6e\xb4\xe9\xaf\x1e\xc2\x99\x4e\x08\xf1\x5c\xdd\x70\xe7\x59\x04\x55\xd6\x1a\x3d\x0e\x33\x83\x68\x84\xac\x06\x24\x5e\x5f\x52\xa7\x58\xef\xe9\x79\xf6\x7b\x91\x47\xf9\xca\x56\xaa\x61\x74\x21\x03\x21\x2d\xf3\xa5\x10\x25\x3d\x4a\x78\xfd\xa1\xf0\x94\x6a\xb2\x30\x9f\x96\x37\xf7\x1c\x02\x96\x34\xc2\x13\x77\x1a\x7c\xac\x0e\x7e\x39\xba\x88\x8e\x6b\xe5\x7c\x1e\x9b\x18\x52\x5c\xa3\x23\x03\x32\x0e\x9d\x46\x5f\xe6\x92\x3e\xc7\x80\xdf\x32\x9e\xb1\xf4\x6f\x0c\x84\x96\x68\x62\x47\x84\x30\x69\xf5\xe2\xf7\x6d\x2e\x66\xd0\x5c\x63\x66\xfb\xec\xeb\x37\x12\x09\xda\xf6\x62\x01\x81\x7f\x98\xbc\xd8\x2e\x5d\xe8\x9c\x29\xb8\xd4\xae\x21\xac\x7d\x14\x3f\x7c\x7e\xf7\xde\xc4\xfa\x2c\xa7\x2f\x31\xa9\x4d\xfb\xbf\xad\x44\x2a\xc5\x9a\xa6\x3b\xcb\x42\x0f\x4e\x6a\x15\xc2\x30\x30\x00\x73\xeb\xf0\x3d\x55\x64\x95\x90\xa5\xd5\xf9\xbc\x94\x5d\x2e\x45\x9e\x90\x56\x6c\xe6\x89\xce\xb5\x34\x96\x7f\xf5\xb9\xec\x86\xdb\xc3\xbd\xa3\x25\xa8\xa4\xe2\x38\x0a\x20\xd6\xf0\xc4\xc5\xc0\x5c\x47\xf3\xe9\xe1\xe7\x41\xf2\xa7\x29\xd1\x68\xed\xde\xa6\x4f\x3d\x3a\x97\x28\x90\xcd\xba\xd6\xb7\x79\xe6\x14\xf1\xbf\x4c\x40\xc3\x46\x74\x4b\xca\xe3\xa8\x90\xfc\xe0\x3b\x8c\x29\x0e\xe8\x6b\x5d\xed\x51\x5b\xdf\x91\x09\x7b\xd3\xd1\xa7\xff\xe5\x29\x9e\x3e\xe2\xea\x1d\xc8\x7a\x94\x28\x1e\xc2\xeb\x5d\xf5\x6a\x9a\x04\x09\xf2\x2e\xce\xc1\xc8\x9e\x99\x13\x19\x46\xc4\xcc\xc8\xb6\xf3\xb3\xf1\x27\x3b\xce\x72\xbf\xd5\x21\xfd\xff\x0e\x00\x00\xff\xff\x9e\x52\x1d\x9f\x27\x06\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfilterHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfilterHtml,
		"static-bleve-mapping/partials/analysis/tokenfilter.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfilterHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfilterHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilter.html", size: 1575, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfiltersDict_compoundHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\x41\x6a\x03\x31\x0c\x45\xf7\x3d\x85\xf0\x3e\x9d\x0b\x78\xe6\x06\x69\x17\x2d\x74\x19\x34\x23\x25\x88\xca\x96\xb1\x9d\x94\x12\x72\xf7\x3a\x99\x4c\x99\x50\xfa\x57\xe2\xfb\x3f\xe4\x2f\x68\xf2\x24\x27\x98\x14\x4b\xe9\xdd\xde\x72\xd8\x1c\xb2\x1d\x93\x1b\x9e\xe0\x2e\xaf\x38\xb2\x42\x7b\xeb\x5d\xb5\x4f\x8e\x7b\xd1\xca\xf9\xfd\x3a\x6e\x31\x15\x37\xbc\x1d\x47\xf8\xb0\x4c\xc5\x77\xb7\xec\x8a\x2d\xac\x3c\x55\x88\x87\x0d\x49\xc1\x51\x99\x7a\x77\x12\xfe\x7a\x8d\xfa\xbd\x35\x42\x75\xbf\xd9\x45\x2d\x1b\x8c\x58\x1f\xb6\x3d\x93\x4c\x75\x77\x33\x76\x01\xd3\x5f\x6a\xdd\x60\xb2\x58\xb3\xa9\x03\xa1\xff\xbe\xfc\xc0\x7b\x4b\x55\x2c\x5e\x37\x67\x4e\x8c\xf5\x4e\xb5\x28\x48\x84\x65\x7e\xc1\xc0\x0d\x3d\x9f\x17\xe3\x72\xf1\xdd\x8c\xae\x1a\x77\x73\xe5\xd9\xf1\x5d\xbb\xee\xf0\x13\x00\x00\xff\xff\x10\xcc\xc5\x07\x67\x01\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfiltersDict_compoundHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfiltersDict_compoundHtml,
		"static-bleve-mapping/partials/analysis/tokenfilters/dict_compound.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfiltersDict_compoundHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfiltersDict_compoundHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilters/dict_compound.html", size: 359, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfiltersEdge_ngramHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x92\x31\x6e\xc3\x30\x0c\x45\x77\x9f\x42\xe0\x9e\xe6\x02\xb6\x87\xee\x41\xcf\x40\x49\x4c\x22\x98\x16\x05\x59\x4e\x9d\xdb\x97\x36\x02\x14\x2e\xd4\x2e\x4d\xfe\xc0\x45\x9f\xfa\xfa\x0f\x32\xaa\xd6\x87\x9b\x71\x8c\xd3\xd4\xc1\x59\xf2\x78\xb8\x64\x99\x13\xf4\x8d\x79\xa8\x65\xb4\xc4\x46\xcf\x3a\x28\x32\x50\x3c\x07\x2e\x94\xdf\xd1\x0d\xd0\xaf\xb3\x3d\x6e\x8e\xef\x8d\x6d\x2b\xc4\x34\x17\x13\x2f\x07\x1f\x26\xb4\x4c\xbe\x83\x5b\xa0\xcf\x8f\xc8\xf7\x93\x78\x64\xd8\xd9\x1f\x52\xfb\x28\x9e\x78\x97\xf4\x66\xd7\xa8\x9a\xbd\xdc\x13\x75\xe0\xae\xe4\x06\x2b\x4b\xd5\x12\x7c\xe5\xd5\x9b\xb1\x3d\x6a\xf3\xbe\x69\xfe\x03\xe1\x14\x22\xf4\x3a\x5e\x8e\x60\xd4\xa0\xdf\x09\xc4\x79\xb4\x94\x61\xd7\xc0\x49\x2c\x59\xea\x19\x3f\xa0\xac\x2d\x4c\x62\x74\x74\x15\xf6\xa4\x15\x9f\x89\x08\x17\x45\x84\xcb\xeb\x11\x61\xfd\x07\x3c\x07\x91\x5e\xfe\x07\xa2\xaf\x00\x00\x00\xff\xff\xf9\x6e\x5f\x86\x49\x03\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfiltersEdge_ngramHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfiltersEdge_ngramHtml,
		"static-bleve-mapping/partials/analysis/tokenfilters/edge_ngram.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfiltersEdge_ngramHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfiltersEdge_ngramHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilters/edge_ngram.html", size: 841, mode: os.FileMode(420), modTime: time.Unix(1469218254, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfiltersElisionHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\xc1\x6a\xc3\x30\x10\x44\xef\xfd\x8a\x45\xf7\x54\x3f\x20\x1b\xfa\x01\x69\x2f\xbd\x87\x8d\xb4\x09\x4b\x57\x5a\x21\xa9\x29\x25\xe4\xdf\xab\xc4\x76\xb1\x29\x9d\xd3\x32\x9e\xc7\x78\x04\x5d\x2e\xf0\x05\xbc\x60\xad\x83\x39\x69\x89\xbb\x73\xd1\xcf\x6c\xc6\x27\x98\xe5\x04\x8f\x24\xd0\xbf\x0d\xa6\xe9\x07\xa5\x13\x4b\xa3\xf2\x7e\x3f\xf7\x98\xab\x19\x5f\x4a\x63\x2f\x54\x9d\x7d\x44\x57\x68\x25\x21\xdf\x20\x9d\x77\x81\x2b\x1e\x85\xc2\x60\x2e\x4c\x5f\x6f\x49\xbe\xf7\x1a\x50\xcc\x6f\x76\x51\xcf\x46\x0d\x24\x9b\xb2\x67\x9c\x2b\x0e\x0f\xf3\x10\x31\xff\x25\xd7\x23\xbc\xa6\x56\x54\x0c\x70\xf8\xef\xaf\x37\xbc\xd3\xdc\x58\xd3\xbd\xbd\x50\x26\x6c\x33\xd5\xa3\xc0\x09\x96\xfb\x15\x23\x75\xf4\x7a\x5d\x8c\xdb\xcd\xd9\x09\x5d\xad\xb6\xd3\xec\xc9\x71\xb6\x3f\xf0\xf8\x13\x00\x00\xff\xff\x4d\xe0\x0e\x69\x6a\x01\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfiltersElisionHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfiltersElisionHtml,
		"static-bleve-mapping/partials/analysis/tokenfilters/elision.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfiltersElisionHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfiltersElisionHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilters/elision.html", size: 362, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfiltersGenericHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfiltersGenericHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfiltersGenericHtml,
		"static-bleve-mapping/partials/analysis/tokenfilters/generic.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfiltersGenericHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfiltersGenericHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilters/generic.html", size: 0, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfiltersKeyword_markerHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\xcd\x6a\xc3\x30\x10\x84\xef\x7d\x8a\x45\xf7\x54\x2f\x20\xfb\x05\x4a\xda\x4b\xef\x61\x63\x6d\x82\xc8\x4a\x2b\x24\x35\x21\x18\xbf\x7b\xe5\xbf\x62\x53\x32\xa7\x65\x3c\x1f\xe3\x11\x54\x19\xeb\xee\xd0\x31\xe6\xdc\xa8\x8b\x24\x7f\xb8\x26\xf9\x89\xaa\x7d\x83\x45\x86\xf1\x4c\x0c\xf5\x5b\xa3\x8a\xdc\x28\x5c\x1c\x17\x4a\xdf\xe3\x79\xc4\x98\x55\xfb\x41\xcf\x87\x24\x9b\x8d\x9e\xa2\x1b\x34\x13\x53\x57\x20\x5c\x0f\xd6\x65\x3c\x33\xd9\x46\xdd\x1d\x3d\xbe\x02\x3f\x8f\x62\x91\xd5\x5f\x76\x55\xcd\x7a\xb1\xc4\xbb\xb2\xf7\xdb\x52\x71\x9a\xcc\x93\xc7\xf8\x9f\xdc\x8e\xe8\x24\x94\x24\xac\xc0\xd9\x57\x7f\xbd\xe3\x8d\xc4\xe2\x24\x8c\xed\x89\x22\x61\x59\xa8\x1a\x05\x17\x60\xbd\x3f\xd1\x53\x45\xfb\x7e\x35\x86\xc1\xe8\x19\xdd\xac\xd6\xf3\xec\xd9\x31\xba\x3e\x70\xfb\x1b\x00\x00\xff\xff\xda\x20\xf1\xdb\x6a\x01\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfiltersKeyword_markerHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfiltersKeyword_markerHtml,
		"static-bleve-mapping/partials/analysis/tokenfilters/keyword_marker.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfiltersKeyword_markerHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfiltersKeyword_markerHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilters/keyword_marker.html", size: 362, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfiltersLengthHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x90\x41\x6e\x85\x30\x0c\x44\xf7\x9c\x22\xf2\x9e\x72\x81\x84\x1b\xa0\x9e\x21\x10\x43\xa3\x3a\x71\x14\x02\x85\xdb\xd7\x42\x48\x15\x2a\xfa\x9b\x2f\x66\x91\xcd\x4c\x3c\x9a\xa7\x44\xda\xf9\x55\x0d\x64\xe7\xd9\xc0\xc8\x39\xd4\x53\xe6\x25\x41\x5b\xa9\x53\x9a\x6c\x8f\xa4\xc4\x33\x50\xf8\x1b\xe3\xe8\xa9\x60\xee\x7c\x84\x56\x1e\xdd\x1c\xfe\x5f\xfe\xf8\xe3\x63\x5a\x8a\x8a\x53\xed\xfc\x6c\x7b\x42\x67\x60\xf5\xf8\xf3\x19\x69\xef\xd8\x59\x82\x4b\xfc\x94\xc4\x03\x3b\xa4\x4b\xcf\x47\x90\xa2\xbb\x74\xd9\x13\x1a\x88\x4b\xe8\x31\xc3\x65\xc1\xc0\xb1\x64\xbe\xef\xf0\xee\xdf\x0a\x95\xc8\x0e\xf8\xc5\xe4\x50\x26\x9e\xcb\x75\x23\x5c\xda\xaa\x7a\x0b\x91\xdd\x04\x91\xdd\x9e\x47\x24\x45\xcf\x21\x92\xe3\x2f\x10\xfd\x06\x00\x00\xff\xff\x6f\xc7\x37\xc6\x44\x02\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfiltersLengthHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfiltersLengthHtml,
		"static-bleve-mapping/partials/analysis/tokenfilters/length.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfiltersLengthHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfiltersLengthHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilters/length.html", size: 580, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfiltersNgramHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x90\x41\x6e\x85\x30\x0c\x44\xf7\x9c\x22\xf2\x9e\x72\x81\x84\x1b\xa0\x9e\x21\x10\x43\xa3\x3a\x71\x14\x02\x85\xdb\xd7\x42\x48\x15\x2a\xfa\x9b\x2f\x66\x91\xcd\x4c\x3c\x9a\xa7\x44\xda\xf9\x55\x0d\x64\xe7\xd9\xc0\xc8\x39\xd4\x53\xe6\x25\x41\x5b\xa9\x53\x9a\x6c\x8f\xa4\xc4\x33\x50\xf8\x1b\xe3\xe8\xa9\x60\xee\x7c\x84\x56\x1e\xdd\x1c\xfe\x5f\xfe\xf8\xe3\x63\x5a\x8a\x8a\x53\xed\xfc\x6c\x7b\x42\x67\x60\xf5\xf8\xf3\x19\x69\xef\xd8\x59\x82\x4b\xfc\x94\xc4\x03\x3b\xa4\x4b\xcf\x47\x90\xa2\xbb\x74\xd9\x13\x1a\x88\x4b\xe8\x31\xc3\x65\xc1\xc0\xb1\x64\xbe\xef\xf0\xee\xdf\x0a\x95\xc8\x0e\xf8\xc5\xe4\x50\x26\x9e\xcb\x75\x23\x5c\xda\xaa\x7a\x0b\x91\xdd\x04\x91\xdd\x9e\x47\x24\x45\xcf\x21\x92\xe3\x2f\x10\xfd\x06\x00\x00\xff\xff\x6f\xc7\x37\xc6\x44\x02\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfiltersNgramHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfiltersNgramHtml,
		"static-bleve-mapping/partials/analysis/tokenfilters/ngram.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfiltersNgramHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfiltersNgramHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilters/ngram.html", size: 580, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfiltersNormalize_unicodeHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x91\xc1\x6e\x84\x20\x10\x86\xef\x7d\x0a\xc2\xdd\xf2\x02\xc8\xb1\xb7\xb6\xa7\x3e\x00\xc2\x68\x26\x8e\x8c\x01\x6a\xd3\x7d\xfa\x65\xd5\x64\xd7\xac\x6b\xfc\x4f\x64\xe6\xfb\x7f\xfe\x80\x28\xd2\x1e\x27\xe1\xc8\xa6\x54\xcb\x96\xe3\x50\x75\x91\x7f\x47\x69\xde\xc4\x2a\x4d\xb6\x01\x12\x65\x57\xcb\xcc\x3d\x84\x16\x29\x43\xfc\x2a\xac\x25\xbc\xc0\x4f\x40\xc7\x1e\xa4\xf9\x28\x13\xad\x66\xfa\xee\x9e\x13\x12\x10\xb8\x2c\x42\x57\x79\x4c\xb6\x21\xf0\xb5\x9c\x10\xfe\xbe\x03\xfd\x7f\xb2\xb7\x24\x37\xfc\xaa\xc7\x52\x8e\x43\x8e\xbc\xcf\xa1\x3f\x2e\xb6\xe7\x29\x55\x86\xb2\xa3\x8d\xf3\xfd\x76\x95\x34\x4f\xbc\xe6\x31\x23\x07\x13\x5a\xa7\xd5\x7a\x3e\x80\xfc\x19\xa8\x3f\x15\xd5\xbf\xc8\xd2\x6a\x79\xd2\x65\xaa\x55\xf9\x43\x73\x0d\x00\x00\xff\xff\x53\xe9\xaf\x34\xcd\x01\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfiltersNormalize_unicodeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfiltersNormalize_unicodeHtml,
		"static-bleve-mapping/partials/analysis/tokenfilters/normalize_unicode.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfiltersNormalize_unicodeHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfiltersNormalize_unicodeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilters/normalize_unicode.html", size: 461, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfiltersShingleHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x93\xc1\x6e\x83\x30\x0c\x86\xef\x3c\x45\x94\x7b\xd7\x17\x00\x8e\x93\x76\xa8\x7a\xd8\xee\x53\x48\x0c\xb5\x6a\x62\x14\x42\x47\xdf\x7e\x6e\x9b\x6d\x42\xab\x38\x74\x8b\x0f\x06\xc9\x7f\xfc\xeb\xff\x94\x28\xa9\xd2\xe1\x49\x59\x32\xe3\x58\xe9\x96\x43\xbf\xe9\x02\x4f\x83\xae\x0b\x95\xaa\x24\xd3\x00\x29\x99\x55\x3a\xf2\x11\x7c\x8b\x14\x21\xec\xd0\xeb\x5a\x5a\xb9\xbd\xce\x7f\xf4\xd7\x33\xe8\x87\x29\x2a\xdf\x6d\x1c\x8e\xa6\x21\x70\x95\x3e\x21\x7c\xec\x3d\x9d\x77\xec\x0c\xe9\x85\x3c\x95\xc8\x7b\x76\x40\x0b\x9f\xa7\x5e\x8c\xee\xa9\xe3\x79\x80\x4a\xfb\xa9\x6f\x20\xe8\x45\x02\xcb\x3e\x06\xbe\xef\x81\xee\x57\x0a\x35\x90\xb1\x70\x60\x72\x20\x11\x53\xf2\x72\x2b\x5c\xea\xa2\xf8\x13\x22\x33\x0b\x22\x33\xe7\x47\x24\x46\xf9\x10\xc9\xf2\x6c\x88\x5e\xbc\xa5\xc9\x81\xae\xd3\x8f\xda\x07\xec\xd0\x1b\x52\x6f\x17\x51\x76\x72\x3c\x45\xd9\xf5\xce\xc9\x75\x85\xa2\x3d\x80\x3d\x36\x3c\x3f\xcc\xf1\x3b\xea\xbf\xc1\x7b\x05\x11\x49\x33\xc1\x44\x0e\xd9\x59\x8d\x5f\x4e\x2b\x94\x22\xcc\xf1\x61\x42\x97\x3c\xd9\x6e\xda\x33\x12\xc9\x2b\xa8\x6f\xdf\xec\xb0\xda\x9b\x5d\x26\x52\x29\xcc\x0a\xac\xcf\x00\x00\x00\xff\xff\x5c\xa7\xb5\x63\xdb\x05\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfiltersShingleHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfiltersShingleHtml,
		"static-bleve-mapping/partials/analysis/tokenfilters/shingle.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfiltersShingleHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfiltersShingleHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilters/shingle.html", size: 1499, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfiltersStop_tokensHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\xcd\x6a\xc3\x30\x10\x84\xef\x7d\x8a\x45\xf7\x54\x2f\x20\xfb\x0d\xd2\x1e\x5a\xe8\x31\x6c\xac\x4d\x10\x5d\x69\x85\xa4\xba\x14\xe3\x77\xaf\xfc\x57\x6c\x4a\xe6\xb4\x8c\xe7\x63\x3c\x82\x2a\x63\x5d\x0f\x1d\x63\xce\x8d\xba\x49\xf2\xa7\x7b\x92\xaf\xa8\xda\x27\x58\x65\x18\xaf\xc4\x50\xbf\x35\xaa\xc8\x27\x85\x9b\xe3\x42\xe9\x7d\x3a\xcf\x18\xb3\x6a\xdf\x8a\x44\xf8\x90\x64\xb3\xd1\x73\x78\x07\x67\x62\xea\x0a\x84\xfb\xc9\xba\x8c\x57\x26\xdb\xa8\xde\xd1\xf7\x6b\xe0\x9f\xb3\x58\x64\xf5\x97\xdd\x54\xb3\x5e\x2c\xf1\xa1\xee\x39\xd7\x92\xcb\x6c\x5c\x3c\xc6\xff\xd4\x7e\x42\x27\xa1\x24\x61\x05\xce\x3e\xfa\xe7\x03\x6f\x24\x16\x27\x61\x6a\x4e\x14\x09\xcb\x4a\xd5\x28\xb8\x00\xdb\xfd\x82\x9e\x2a\x3a\x0c\x9b\x31\x8e\x46\x2f\xe8\x6e\xb1\x5e\x26\x2f\x8e\xd1\xf5\x79\xdb\xdf\x00\x00\x00\xff\xff\x7b\xb1\xcb\x2c\x68\x01\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfiltersStop_tokensHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfiltersStop_tokensHtml,
		"static-bleve-mapping/partials/analysis/tokenfilters/stop_tokens.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfiltersStop_tokensHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfiltersStop_tokensHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilters/stop_tokens.html", size: 360, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfiltersTruncate_tokenHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\x41\x0a\x83\x30\x10\x45\xf7\x3d\x45\x98\xbd\xf5\x02\x89\x27\x68\xe9\x19\xa2\x33\x6a\xe8\x38\x13\x62\xb4\x78\xfb\x06\x11\x8a\xd4\xbf\xc8\x26\xff\xf3\x78\x63\x4a\x2c\x86\xd5\x74\xec\xe7\xd9\x41\xaf\x69\xaa\x86\xa4\x4b\x84\xe6\x66\x8e\x58\xf6\x2d\xb1\x29\x7f\x0e\xb2\xbe\x49\xfa\xc0\x99\xd2\x83\x04\x9a\xf2\x0c\x79\xb4\xf5\x5e\xf9\x4d\xf6\x59\x90\xb8\x64\x23\x43\x85\x61\xf6\x2d\x13\x3a\x58\x03\x7d\x5e\xc2\xdb\x53\xd1\x33\x9c\xea\x47\x4a\x7d\x52\x24\x3e\xa1\xee\xbc\x63\x2e\x07\x79\x8b\xe4\x40\x96\xa9\xa5\x04\x27\x8f\x4e\x25\x27\xbd\xc6\x04\xfc\x73\x31\x91\x7d\x47\xa3\x32\x52\x11\x3d\xfc\x6d\x5d\xae\xd3\x7c\x03\x00\x00\xff\xff\x47\xb1\xf0\x08\x27\x01\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfiltersTruncate_tokenHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfiltersTruncate_tokenHtml,
		"static-bleve-mapping/partials/analysis/tokenfilters/truncate_token.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfiltersTruncate_tokenHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfiltersTruncate_tokenHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilters/truncate_token.html", size: 295, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfiltersWordmapHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8f\x41\x8a\xc3\x30\x0c\x45\xf7\x73\x0a\xe3\x7d\x26\x17\x70\x72\x83\xb4\x9b\xee\x8b\x1a\x2b\xc5\x54\xb6\x8c\x2d\x1a\x4a\xc8\xdd\xeb\xe0\xa6\x34\x7f\xf5\x11\xef\x49\x48\x95\x98\x8c\x84\xa3\xa8\x70\x6f\xac\xcb\x70\x23\xb4\x9d\x7e\x3a\x9c\xcf\x81\x5e\x03\x5b\x20\xfd\xa7\x7e\x52\x38\xcf\x16\xa9\xd3\xc2\x0f\x0c\x93\x23\xc1\xf4\x3f\x73\xb2\x57\x0f\xf1\xc8\x8e\x04\x39\x77\x7a\xe2\xe4\x9b\x91\x83\x24\x26\xad\x9c\x3d\xa8\x97\xad\x0e\x10\xb3\xee\xbf\xae\xe1\x28\x8e\xc3\x76\x2b\x61\x44\x90\x8f\x51\x30\xe5\x82\xda\xfb\x09\x3c\x16\x6d\x59\xf6\xc1\xba\x9a\xb6\xaa\x75\x97\x69\xeb\x73\xfd\x3b\x00\x00\xff\xff\x5c\xa2\x5c\x50\xe9\x00\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfiltersWordmapHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfiltersWordmapHtml,
		"static-bleve-mapping/partials/analysis/tokenfilters/wordmap.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfiltersWordmapHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfiltersWordmapHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilters/wordmap.html", size: 233, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfiltersHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\xcd\x6e\xdb\x3c\x10\xbc\xfb\x29\xf8\xf1\x14\x03\x9f\x64\x14\xbd\x4a\x3a\xb5\xbd\x25\xbd\xa4\xe7\x82\x16\x57\x12\x61\x86\x24\xc8\x95\x6d\x21\xc8\xbb\x77\x49\x45\x3f\x8e\x8d\x36\x2d\x8a\x06\x81\x35\x5c\x2d\x87\xb3\xb3\x5c\x15\x28\xf6\x1a\x58\xad\x45\x08\x25\x1f\x17\xe9\x37\x0b\xe8\x95\x03\xc9\xab\x0d\x63\x05\x76\x20\x64\x44\x11\xfb\x11\xa4\x70\xf5\x20\x9e\xa0\xd8\x11\x58\xc5\x1e\x07\x77\x15\x5b\xd6\x84\x12\x43\x8c\xbc\xb2\x16\xb8\xb7\x72\x98\xf9\x99\x69\x33\x0f\x0e\x04\x96\xfc\x0e\x1b\x43\x47\xfc\x8f\xcd\x51\xe8\x2d\x53\x86\xfe\x25\x9c\xef\x85\x73\xca\xb4\xb9\x30\x42\x0f\x41\x85\x1c\xed\x01\xcc\xf7\x46\x69\x04\x1f\xf8\x72\xb2\xac\x0a\x11\xf9\x6a\xad\xea\x43\xc9\x41\x2a\x7c\x8c\xa9\x5f\x52\xe6\xc4\xce\x12\x3d\x3d\x7c\x0f\x5b\x5e\x3d\x3f\x8f\xf1\x97\x97\x62\x27\xa2\x74\xb9\x26\x8c\x6f\x29\x3b\x47\x2a\x33\x66\x5c\xbe\x7d\x85\xb4\x90\xea\x38\x19\xbb\x47\x93\xb5\xde\xf6\x8e\xcd\x28\x3b\x07\xce\xbc\xd5\x50\xf2\xb4\xe6\xcb\x4e\xda\xbb\xef\x11\xad\x89\xc2\x55\x53\xf2\xff\x8e\x0a\x4e\x5f\x8d\x1e\xee\xad\x14\x9a\xaf\x12\xa7\xbf\x77\x56\xb8\xe5\x2c\xaa\x26\x41\x89\xff\x16\xd3\xa2\x38\x69\x95\xd0\x88\x5e\x63\xc2\xe7\x70\x21\x92\x64\x06\x27\xcc\xb4\xa3\xd5\x83\xeb\x54\x4d\xaa\x67\x94\x45\x31\xb7\x0e\x11\x5e\x89\xac\x53\x52\x82\xa1\x5b\x47\xa6\x73\x72\x39\x92\x55\xec\x33\x6d\x59\x3b\xb1\x1b\xa5\xfe\x25\x77\x24\x68\x40\xb8\xf6\xe7\x5f\x1b\x83\x5e\x84\xee\x37\x9d\xf9\x94\xb4\xff\xd4\x9b\x62\x47\x97\x6e\xbe\x8d\xf3\xcd\x9c\x46\x6e\x9e\xae\xd0\xd9\x53\xc9\xbf\xa1\xd2\x21\x3f\xc0\x10\xee\xde\x31\x54\xdb\x5c\x83\x69\xb1\x63\x05\xfb\xb0\x1e\x30\x56\x5b\x1d\x05\x96\xfc\x23\xaf\x1e\xac\x81\xeb\x73\xe9\x39\x0d\x78\x81\x8d\xb5\x78\xe3\x53\x72\xc9\xb3\xf9\xc3\x5e\x2f\x9d\x36\x70\x5a\xb7\xf9\x97\x0d\x7e\xd3\xde\xf0\x74\xd1\x65\xd7\x6b\x9d\x79\xd5\x76\x48\x35\xc2\x89\x25\x6a\x36\x72\xbf\x6d\xc3\xcd\xfa\xc7\xaa\x09\xc4\x8f\x6b\xb5\xd9\xfc\x08\x00\x00\xff\xff\xb7\x3c\x3b\xe3\x79\x05\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfiltersHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfiltersHtml,
		"static-bleve-mapping/partials/analysis/tokenfilters.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfiltersHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfiltersHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilters.html", size: 1401, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenizerHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\xcd\x72\xdb\x20\x10\xbe\xe7\x29\x28\xa7\xf4\xa0\x6a\xda\x5c\x25\x5d\x7c\x4e\x7a\x68\x5e\x00\xc3\x5a\x62\xbc\x02\x0d\x20\xa7\xae\xc7\xef\x5e\x7e\x64\x05\x29\x4a\xa7\xe9\x54\x33\x21\x78\x77\xf9\x76\xf7\xfb\x16\x2a\x21\x4f\x84\x23\xb3\xb6\xa6\x7b\x84\x13\x3c\x6a\xc1\x90\x36\x77\x77\xb9\xa7\x0f\xc6\xa2\x03\x26\xc0\x78\x1f\xf1\x5f\xd5\x3d\x2c\xbd\x4e\x3a\x04\xda\xec\x46\xeb\x74\x4f\x9e\xf5\x11\x94\xfc\x05\xa6\x2a\xbb\x87\xe6\xae\x2a\x3d\xda\x26\xe8\x5e\x8b\xf3\x0d\x32\x38\x55\x5b\xd8\x4e\xbf\xd4\x14\x8c\xd1\xe6\x11\xac\x65\x2d\xd0\xe8\x8f\xdf\x74\x98\x21\x18\x47\xe2\x5a\x08\xa6\x5a\x30\xe1\x24\x47\xcd\x8e\x59\xb0\xd1\x08\x53\x2c\x6d\xc8\xe5\x92\x63\x5e\xaf\x29\xe9\x54\x59\xdc\x1f\xb4\xe9\x6f\x19\xc2\x9e\x4e\x08\x71\xdf\xcc\xb8\x79\x17\xc1\x55\xb4\x46\x8f\x43\x16\x10\x83\x90\xed\x01\x89\xf7\xd7\xd4\x29\xd6\x7b\x6e\x9e\xfc\x5a\x95\xd1\xbe\x8a\x95\x6a\x18\x5d\xe8\x40\x48\xcb\xbc\x0e\xa2\xa6\x27\x09\x2f\xdf\x15\x9e\x93\x20\x8b\xf0\xe9\xf3\xe1\x9e\x43\xc0\x9a\x46\xf8\xad\x10\x77\x1e\x7c\xf9\x0e\x7e\x3a\xba\x28\x98\x6b\xe5\x7c\x6b\x9b\x67\xa4\xb8\x15\x4c\x06\x64\x1c\x3a\x8d\x5e\xf6\x9a\x3e\xc5\x1e\x5e\x49\xc8\x88\xfb\x37\x52\x6e\x23\x12\x8a\xa4\xcd\xb3\x5f\xb7\xc9\xc9\x80\xb9\xc6\xc2\xf6\xc5\xd7\x6f\x24\x32\xb6\x9d\xc3\x02\x02\xff\x30\x9b\x71\x7e\xba\x30\x4a\x59\x69\xa1\xa8\x5d\x34\xde\x7f\x7e\xf7\xd4\x24\xc2\x7c\xe8\x4b\x6c\x68\x33\xfa\x6f\x35\x48\x22\x2c\x09\x7a\x13\x57\xe9\xc1\x49\xad\x42\x09\x06\x06\x60\x6e\x59\xb8\xa7\x88\x2c\x1a\xb1\xb4\xb9\x5c\x72\xcb\xf5\x5a\x95\x09\x63\xc5\x60\x99\x28\x5c\x5b\xa3\xe0\xab\x9f\x4b\xfd\xe7\xdb\xbb\x22\x23\x38\xa4\xe2\x38\x0a\x20\xd6\xf0\xc4\xc0\xc0\x5c\x47\xcb\xe9\xee\x97\xc1\xf2\xa7\x87\xe2\xa0\xb5\x7b\x7d\x7d\xf6\xa3\x73\xa9\x75\x79\x58\xab\x3b\xbf\x67\x4e\x11\xff\x57\x08\x38\xb0\x11\xdd\x92\xe8\xf8\x5a\x48\x7e\xf4\x33\xc5\x14\x07\xf4\xfa\x36\x3b\xd4\xd6\xcf\x60\xc2\xde\x4c\xf4\xe9\x7f\x65\x8a\xbb\x8f\xa4\x7a\x07\x72\x3f\x4a\x14\xf7\xe1\xb6\xae\xe6\x33\xdd\xfc\x04\xf9\xa6\xce\xc1\xc8\x9e\x99\x33\x19\x46\xc4\xc2\xc8\xb6\xf3\xcf\xe3\x0f\x76\xca\x7a\x9f\x75\x48\xff\x7f\x07\x00\x00\xff\xff\xcd\xe6\x76\xec\x27\x06\x00\x00")

func staticBleveMappingPartialsAnalysisTokenizerHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenizerHtml,
		"static-bleve-mapping/partials/analysis/tokenizer.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenizerHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenizerHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenizer.html", size: 1575, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenizersExceptionHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\xcd\x8e\xdb\x3c\x0c\xbc\xe7\x29\xf8\x19\xdf\x61\x73\xf0\x7a\xb7\x67\xc7\x40\x51\xf4\xd0\x43\xb7\xc5\xa2\x2f\xa0\x58\x8c\x4d\x44\x96\x0c\x89\xce\x4f\x83\xbc\x7b\x65\x2b\xfe\xcb\x26\x69\x0f\x06\x04\x99\x1c\x0e\x39\x43\xa5\x92\x76\x90\x2b\xe1\xdc\x2a\xda\x18\x5b\xc5\x85\x35\x4d\x1d\x65\x0b\x80\x54\x89\x35\xaa\xec\xeb\x21\xc7\x9a\xc9\x68\xf8\x29\x98\xd1\x6a\x97\x26\xe1\x4f\x1b\xd3\xa8\x3e\x5b\x91\xe3\x4b\x36\xe8\x22\x76\xa5\xd9\xaf\x22\x36\x5b\xd4\xf4\x1b\xed\x33\xf6\x30\xee\x59\xa1\x2e\xb8\x84\x14\x5e\xbb\x3a\x6d\x25\xfa\x88\x12\x13\x63\x15\x65\x6f\x46\xa3\x2f\x48\x5d\xb5\xa4\x79\x50\xb5\x83\x82\x7f\xab\x9d\xc1\x4b\x1f\xdf\x50\xec\x8c\x65\xb1\x56\x38\x22\x54\x46\xa2\xba\x0d\xf1\x77\xce\x17\x98\x0e\xc8\x62\x8d\x82\x57\x11\x02\x69\xb8\x05\x07\x6c\x45\xbe\x85\xf5\x11\xfe\x27\x2d\xf1\x70\x81\xf7\x05\x5c\x2d\x74\x5f\xa2\x50\xc7\xba\xa4\xdc\x8b\x30\x9c\xe2\x8a\x74\xe3\xd9\xa4\x49\x1b\x98\xc1\xe9\x04\x08\xe7\xf3\x2c\xdb\x13\xa0\xcd\x2a\xfa\x6f\x47\xb8\xff\xa1\xd5\xf1\xbb\x91\x42\x8d\xfc\x2e\x1c\x73\x45\xf9\x76\x15\x59\xac\xcc\x0e\x07\xb9\x9f\x02\x9f\xe5\x3c\xfc\x01\x9f\x90\x0f\x75\xa3\x54\x6c\xa9\x28\x79\xe0\x16\x06\x36\x13\x31\x4d\xbc\xf1\xb2\xc5\xa2\xf3\xdf\x7d\x9a\xb7\x9d\x39\x78\x73\xe2\x44\x7f\x37\xb1\x72\x6e\x54\xec\xaa\xf8\xf5\x65\x1c\x27\xe9\xba\xe1\x89\xb6\x1a\xf7\x16\x0b\x3c\x78\xbb\xf2\xb1\x46\x2f\x36\x1e\x78\xde\xec\xac\xbc\x6f\x91\xad\xb9\x9a\x1e\x90\xf4\xda\xf6\x23\x7b\x0f\x78\x49\xdf\x70\xd7\xe2\x1d\x6a\x9f\x46\x66\xeb\x86\xd9\xe8\x89\x12\x42\xca\x51\x06\x2e\xc9\x2d\x7b\x8e\x21\xf4\x8a\x43\x8f\xbc\x66\x0d\xfe\x8b\x25\x6e\x44\xa3\x78\xa6\xc4\x67\x29\xd3\x24\x64\xcf\xd8\xcd\x74\x78\xf4\x0e\x80\xbf\xf5\xcc\xb4\x50\x47\x6f\xe0\x5f\xbd\x93\xa3\x6c\x38\xb6\x11\xf0\x8e\x95\x20\x4d\xba\x80\x6f\xed\xbc\xa7\x4f\x85\x43\x85\x79\xa7\x80\x24\xd7\xae\x9b\x1f\xdd\x5d\x63\xb6\xc3\x28\x85\x2e\x70\xb2\x84\x5f\xba\x0b\xf9\xb4\xbc\x0a\xfc\xb0\xac\xc3\x29\xba\xa9\x60\x27\xda\x18\x73\x99\x87\x09\x8f\xdc\x64\x67\x87\x90\xd9\xee\xbe\x89\x0a\xfd\xda\x9d\x4e\xc3\xcd\xf9\x9c\x26\x21\x3b\xf8\x3b\x34\x3a\xcc\xf6\x4f\x00\x00\x00\xff\xff\xda\x98\xef\xe8\x63\x05\x00\x00")

func staticBleveMappingPartialsAnalysisTokenizersExceptionHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenizersExceptionHtml,
		"static-bleve-mapping/partials/analysis/tokenizers/exception.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenizersExceptionHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenizersExceptionHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenizers/exception.html", size: 1379, mode: os.FileMode(420), modTime: time.Unix(1457964637, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenizersGenericHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func staticBleveMappingPartialsAnalysisTokenizersGenericHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenizersGenericHtml,
		"static-bleve-mapping/partials/analysis/tokenizers/generic.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenizersGenericHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenizersGenericHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenizers/generic.html", size: 0, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenizersRegexpHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\xc1\x0e\x82\x30\x0c\x86\xef\x3e\xc5\xb2\x3b\xf2\x02\x83\x9b\x47\x63\xe2\x1b\x0c\x56\x71\xb1\xac\x4b\x37\x10\x7c\x7a\x1b\x24\x51\x22\xff\xa5\x87\x7e\xed\x9f\xff\x57\x22\xe3\xfc\xa8\x5a\xb4\x29\x55\xfa\x46\xdc\x17\x1d\xd3\x10\x75\x7d\x50\xab\x0c\xda\x06\x50\xc9\xae\xd2\x99\x1e\x10\xfc\x0b\xf8\x0a\x1d\x4c\x42\xc9\x1c\xd0\xb2\x3a\x4d\x91\x21\x25\x4f\xc1\x94\x0b\xff\xbd\x5f\x7e\xf8\x10\x87\xac\x42\x57\x38\x9f\x6c\x83\xe0\x2a\x3d\x7a\x78\x5e\x02\xce\x67\x72\x16\xf5\x06\x5f\x25\x78\x4f\x0e\xf0\xc7\xf7\xc8\x1f\xe3\x3d\x3c\xcf\x11\x04\x85\x29\xeb\x4d\xa0\x96\x42\x66\xda\xb7\xf0\xee\x3f\x94\x8a\x68\x5b\xb8\x13\x3a\x90\xc8\x6b\x13\xa6\x94\x9e\xea\x77\x00\x00\x00\xff\xff\xcd\x92\xc8\xf0\x31\x01\x00\x00")

func staticBleveMappingPartialsAnalysisTokenizersRegexpHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenizersRegexpHtml,
		"static-bleve-mapping/partials/analysis/tokenizers/regexp.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenizersRegexpHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenizersRegexpHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenizers/regexp.html", size: 305, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenizersHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\x4d\x8f\xdb\x20\x10\xbd\xe7\x57\x50\x4e\x1b\xa9\x76\x54\xf5\x8a\x7d\x6a\x8f\xbb\xbd\x6c\x7f\x00\x31\xb3\x36\x0a\x0b\x08\xc6\x49\xdc\xd5\xfe\xf7\x0e\x24\xfe\x48\x36\xea\xb6\x55\xd5\x28\xb2\x1f\x63\x78\xbc\x79\xc3\x20\x50\x6e\x0d\xb0\xc6\xc8\x18\x2b\x7e\x1a\xe4\x67\x11\x31\x68\x0f\x8a\xd7\x2b\xc6\x04\x76\x20\x55\x42\x09\x87\x13\xc8\xe1\xfa\x41\x3e\x83\xd8\x10\x58\xc4\x1e\x07\xff\x26\x36\x8f\x09\x65\x86\x14\x39\xb3\x0a\xdc\x3a\x35\x4c\xfc\xcc\xb6\x45\x00\x0f\x12\x2b\x7e\x87\x96\x76\xf8\x88\x7b\x69\xd6\x4c\x5b\xfa\x2b\x38\xde\x4b\xef\xb5\x6d\x4b\x69\xa5\x19\xa2\x8e\x25\xba\x1d\x58\xfd\x03\x42\xe4\xf3\xa6\xaa\x16\x32\x51\x35\x46\x37\xbb\x8a\x83\xd2\xf8\x38\xce\x3b\xd3\xb2\xc4\x4b\xcf\xd0\xc3\x9a\xd7\x2f\x2f\x39\xfa\xfa\x2a\x36\x32\x09\x56\x4b\x2e\xfa\x48\x73\x4b\xa4\xdc\xd2\x84\xcb\x8f\x67\x48\x03\xa5\xf7\xa3\x9b\x5b\xb4\x45\x1b\x5c\xef\xd9\x84\x8a\x63\xe4\x2c\x38\x03\x15\xcf\x63\x3e\xaf\xa4\xb5\xdb\x1e\xd1\xd9\x24\x59\x3f\x55\xfc\xc3\x5e\xc3\xe1\x9b\x35\xc3\xbd\x53\xd2\xf0\xc5\xc4\xf1\xf7\x1b\xb9\xad\x39\x4b\x8a\x49\x4c\xe6\xbe\xc5\x32\xab\xcd\x3a\x15\x3c\xc9\xde\x60\xc6\xc7\x78\x21\x90\x24\x46\x2f\xed\xb8\xa2\x35\x83\xef\x74\x43\x8a\x27\x54\x24\x21\xb7\x36\x91\x41\xcb\xa2\xd3\x4a\x81\xa5\x63\x46\x76\x73\x32\x38\x91\xd5\xec\x2b\x2d\x59\xba\xb0\x39\x49\xfd\x47\xce\x28\x30\x80\x70\xe5\xcd\xff\x76\x05\x83\x8c\xdd\x1f\xda\xf2\x25\x0b\xff\xa5\x31\x62\x43\xa7\x6d\x3a\x86\xd3\x91\x1c\x1b\x6c\xea\xa5\xd8\xb9\x43\xc5\xbf\xa3\x36\xb1\xdc\xc1\x10\xef\xde\x6b\xa2\x75\x69\xc0\xb6\xd8\x31\xc1\x3e\x2d\x1b\x8a\x35\xce\x24\x75\x15\xff\xcc\xeb\x07\x67\xe1\xed\xa6\xf4\x1e\x7b\x59\xe0\x93\x73\x78\xe3\xd6\xb8\xe4\x59\xfd\x65\x95\xe7\x1a\x5b\x38\xcc\x05\x7e\xb7\xb6\x57\x95\x8d\xcf\x17\x05\xf6\xbd\x31\x45\xd0\x6d\x87\x94\x21\x1c\xd8\x44\x7c\x6d\xff\xcd\xd4\x4f\x09\x13\x48\x57\x68\xbd\x5a\xfd\x0c\x00\x00\xff\xff\x3a\x2b\x4b\xb4\x5f\x05\x00\x00")

func staticBleveMappingPartialsAnalysisTokenizersHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenizersHtml,
		"static-bleve-mapping/partials/analysis/tokenizers.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenizersHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenizersHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenizers.html", size: 1375, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisWordlistHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\x5f\x6f\x9b\x30\x10\x7f\xcf\xa7\x70\xfd\x94\x4a\xa3\x68\xaa\xf6\x30\x09\x90\xa6\xbe\xae\x9d\xb4\x3d\xec\xd9\xe0\x0b\x58\x35\x36\xb2\x4d\xd2\xac\xea\x77\xdf\xd9\x90\xc6\x50\x92\xac\xd5\x2c\x25\x71\xb8\xe3\xee\xf7\xe7\x0c\x19\x17\x5b\x52\x49\x66\x6d\x4e\x4b\x09\x5b\xb8\xd7\x9c\x49\x5a\xac\x56\x71\xa4\xf5\x17\x93\x06\x18\x07\x83\x31\x82\x2b\x6b\x6e\xa7\x51\x27\x9c\x04\x5a\xdc\xf5\xd6\xe9\x96\xfc\xd6\x86\x93\xef\xc2\xba\x2c\x6d\x6e\x8b\x55\x96\x62\xb5\xc5\xa2\xa5\xe6\xfb\x43\x49\x1f\x54\x75\x62\x1b\xbd\xcb\x29\x18\xa3\xcd\x3d\x58\xcb\x6a\xa0\x21\x1e\xd6\x78\x33\x93\x60\x1c\x09\xdf\x09\x67\xaa\x06\xe3\xef\xac\xa4\x66\x8f\x51\xb2\xd1\x12\xc6\x5c\x5a\x90\xe7\xe7\xb8\xe6\xcb\xcb\xd0\x74\x44\x16\xf6\x1b\x6d\xda\x43\x07\xbf\xa7\x63\x85\xb0\x2f\x5e\xeb\xc6\x2c\x7c\x28\xa9\x8d\xee\xbb\x28\x21\x24\x49\x56\x82\x24\x18\xcf\xa9\x53\xac\x45\x6d\x1e\xf0\x3b\x4b\xc3\xf5\x59\xae\x50\x5d\xef\x3c\x03\x2e\x2c\x43\x1f\x78\x4e\xb7\x02\x76\x3f\x94\xdc\x0f\x86\x4c\xd2\xc7\x85\xe9\xa8\x21\xc8\x9c\x86\xf2\xc4\xed\x3b\xc4\xea\xe0\xc9\x2d\xa6\xc7\x80\x2b\xad\x1c\x52\xa3\x44\xf0\x03\x3a\xd2\x49\x56\x41\xa3\x25\x7a\x9c\xd3\x87\x00\xf8\xc8\x38\x52\xe9\x43\x0a\xec\x70\x1e\x2c\x2d\xfc\x58\xd8\x65\x09\x2c\x48\xa8\xde\xad\x41\x24\xc2\x50\x00\x78\xe8\x41\x49\xdb\x4b\x27\x3a\x09\x21\x63\xdc\x23\x57\xd3\xc3\x72\x21\xaf\xc4\x80\x92\x58\xf1\x07\x53\xbf\xd0\x45\xc9\x4e\xa1\xd0\x9d\x13\x5a\x61\xb6\xe0\x4f\x84\x59\xe2\x6b\x79\xee\x64\x8d\x17\x3e\x85\xbf\xd7\x44\x28\x32\x2a\x31\x25\x9f\x0e\xe0\x2f\x08\x8e\x5d\xc4\x26\xa7\x57\xe7\x64\x79\x97\x29\x0d\xc3\x73\xb1\x6c\x47\x64\x70\xa5\x65\x62\xdb\xe4\xeb\xac\x52\x3c\xb6\xa3\x05\xbe\x2b\x67\x8e\xdd\x28\xd8\x79\x1b\x2e\xce\xe4\x99\xa9\x7c\x2d\x31\x99\x4b\xaf\xde\x1b\xf1\x82\x54\x17\xd0\xdf\xbe\x41\x8f\x69\x65\xef\x9c\x56\xc3\x93\x43\x54\x8f\xf8\xa8\xe0\x61\x7c\xd6\xd7\x27\xd0\xe2\x1a\x18\xd9\xbe\x6c\xc5\x29\x4e\x47\x5a\xa5\x53\x04\x3f\x08\x20\xfc\x70\xd8\x30\x1c\x45\x5a\x7c\xe3\x3c\x4b\x87\xee\xff\x02\xcb\x40\xab\xb7\x10\x06\x7b\x3d\x19\xf3\x33\x38\x27\x07\x69\x72\xd3\x8d\x04\x55\xbb\x86\x64\xe4\xf3\x25\x9a\x03\x92\x0f\xd2\x24\x5d\x2f\x65\x62\x44\xdd\x20\xe3\x9f\x81\xc2\x32\xe9\x99\x83\xd1\xdf\x2c\xf5\x83\x71\xee\xfd\xb1\xd1\xda\x1d\x5f\x4a\x47\xe5\xfc\x41\x99\x9e\x93\x39\xd8\x83\x19\xab\x99\x6a\xa3\xe6\x15\x53\x15\x48\x9c\x84\xe2\x4e\x6a\x3b\x43\x3e\x6b\x74\xf5\xbf\x3a\x85\xdd\x7b\x5a\x9d\x28\x59\xf6\x42\xf2\xb5\x7f\xae\xcf\x26\x64\x62\xeb\x1c\x67\x67\x44\xcb\xcc\x7e\xe2\xdb\x2f\x16\xbb\xf6\xea\xc3\xf0\xfb\x37\x00\x00\xff\xff\xee\x38\xbb\x9d\x3e\x08\x00\x00")

func staticBleveMappingPartialsAnalysisWordlistHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisWordlistHtml,
		"static-bleve-mapping/partials/analysis/wordlist.html",
	)
}

func staticBleveMappingPartialsAnalysisWordlistHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisWordlistHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/wordlist.html", size: 2110, mode: os.FileMode(420), modTime: time.Unix(1457642388, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisWordlistsHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\xc1\x8e\xd3\x30\x10\xbd\xef\x57\x18\x9f\xb6\x12\x69\x85\xb8\x26\x39\xc1\x8d\x5d\x4e\x88\x23\x9a\xc6\xd3\xc4\xaa\x63\x5b\xf6\xa4\x6d\xb4\xda\x7f\x67\x9c\x6c\xd2\xb4\x14\x16\x10\xa2\xaa\x9a\x67\xa7\xf3\xfc\xe6\xcd\x8c\x73\x82\xad\x41\x51\x19\x88\xb1\x90\xe3\x62\xf8\xcd\x22\x05\xed\x51\xc9\xf2\x4e\x88\x9c\x1a\x04\x95\x50\xc2\x61\x04\xc3\x76\xf9\x08\x2d\xe6\x1b\x06\x8b\xbd\x9f\xaf\x19\x0d\xd1\x69\xe7\x85\x31\xa7\xad\x53\xfd\xcc\x2d\x6c\x9d\x05\xf4\x08\x54\xc8\x7b\x6a\x2d\xd3\xbf\xa5\xf6\x00\x66\x25\xb4\xe5\xaf\xc2\xd3\x03\x78\xaf\x6d\xbd\x06\x0b\xa6\x8f\x3a\xae\xc9\xed\xd1\x7e\x6b\xc1\x47\x79\x3e\x56\x95\x39\x24\xb2\xca\xe8\x6a\x5f\x48\x54\x9a\xbe\xba\xa0\x3e\xe9\x48\x13\xaf\x18\x88\xf9\x11\x3a\x5c\xc9\xf2\xe9\x69\xdc\x7f\x7e\xce\x37\x90\x44\xab\x25\xdb\xf2\xed\xe5\x9b\x17\xc8\x0b\xa5\x0f\x93\x95\x5b\xb2\x59\x1d\x5c\xe7\xc5\x8c\xb2\x53\x94\x22\x38\x83\x85\x1c\xd6\xf2\x1c\xc9\xb1\xdb\x8e\xc8\xd9\xa4\x58\xef\x0a\xf9\xe6\xa0\xf1\xf8\xd9\x9a\xfe\xc1\x29\x30\x72\xf1\xc7\xe9\xf3\x3b\xa9\xad\xa4\xa0\xde\xf3\x79\x23\xf9\x2d\x9a\xb3\xdc\x41\xa8\xc2\x1d\x74\x86\x06\x7c\x8a\x17\x0a\x59\x63\xf4\x60\xa7\x88\xda\xf4\xbe\xd1\x15\x4b\x9e\x51\x96\x94\xdc\x3a\x04\x82\x86\xac\xd1\x4a\xa1\xe5\x26\x63\xb7\x25\xdb\x9b\xc8\x4a\xf1\x91\x43\x96\x36\x6c\x46\xa9\xff\xc8\x1a\x85\x06\x09\xaf\xcc\xf9\xdf\xae\x50\x80\xd8\xfc\xa1\x2d\x1f\x06\xe1\xbf\x34\x26\xdf\x70\xbb\xcd\x7d\x38\xf7\xe4\x34\x62\xf3\x34\xc5\xc6\x1d\x0b\xf9\x85\xb4\x89\xeb\x3d\xf6\xf1\xfe\xb5\x21\x5a\xad\x0d\xda\x9a\x1a\x91\x8b\x77\xcb\x81\x12\x95\x33\x49\x5d\x21\xdf\xcb\xf2\xd1\x59\xfc\xf1\x50\x7e\x4e\xd3\x9c\xd3\xce\x39\xba\x71\x67\x5c\xf2\xdc\xfd\x65\x95\xcf\x35\xb6\x78\x9c\x0b\xfc\x6a\x69\xaf\x0a\x1b\xdb\x8b\xfa\xfa\xce\x98\x2c\xe8\xba\x21\x4e\x10\x8f\x22\xf1\x8a\x44\x7c\xed\xfe\xcd\xcc\xc7\x7c\x19\xa4\xfb\xb3\xbc\xfb\x1e\x00\x00\xff\xff\xf6\x28\xd5\xa9\x5b\x05\x00\x00")

func staticBleveMappingPartialsAnalysisWordlistsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisWordlistsHtml,
		"static-bleve-mapping/partials/analysis/wordlists.html",
	)
}

func staticBleveMappingPartialsAnalysisWordlistsHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisWordlistsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/wordlists.html", size: 1371, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsMappingIndexMappingHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x58\xdd\x6f\x9b\x30\x10\x7f\xef\x5f\xe1\xf2\x92\x4d\x13\x45\xdb\xe3\x94\x44\xea\x5a\x55\x9b\xb4\x8f\x4a\xad\xb4\xc7\xc8\xc1\x97\x60\xd5\x60\x64\x9b\x7c\x74\xda\xff\xbe\x33\x18\x4a\x12\xf2\x4d\xd2\xae\x0f\x05\xcc\xf9\xee\xf7\xfb\xf9\xee\xb0\xd3\x65\x7c\x42\x42\x41\xb5\xee\x79\x3c\x61\x30\xfb\x41\xd3\x94\x27\x63\xaf\x7f\x91\xbf\x4a\xc6\xbe\x7b\xfb\xa7\x33\xe1\x30\xfd\x95\x88\x79\xe7\x33\x29\x6f\xff\xa2\xdd\x45\xf7\xd2\xf7\x49\xef\xb0\x3f\xe2\xfb\xd6\x43\x0d\x85\x86\xd0\x70\x99\x78\xcd\xc3\x5f\x81\x32\x50\x44\x47\x72\xfa\x38\x4f\xc1\xa1\xd5\x0f\xd5\x24\x42\xea\xb3\x94\x9c\xe6\x63\x8b\xa3\xa1\x14\xbe\x8e\xfd\x8f\x9f\xdc\x3b\x7c\x4b\x2d\x53\xeb\xb5\xe7\x5d\xae\x73\xee\x6c\xf1\x2f\x57\x85\x87\x4f\x08\xab\xd9\x96\xf4\x88\x51\x19\x54\xfe\x31\x02\x2f\xa3\x8f\xc5\x3c\x8d\x78\x88\x46\xd5\x9d\x1f\x46\x30\x51\x78\x55\x7c\x1c\x19\xaf\xdf\x0d\x78\x6d\xa6\xa0\x43\x10\x7d\x1b\x85\x94\x61\xba\x41\x31\x58\xc2\x0f\x68\x13\x93\x76\x88\x8c\xa8\xd0\xfb\x33\x61\x72\x9a\x1c\x41\xa4\x1b\xe0\x7a\xe5\xab\x59\xdc\xb8\x4b\x53\x4a\x7c\x91\x6c\x4e\xcc\x1a\x9a\x5b\xb5\x68\xc8\x18\x02\x8c\x1b\x3a\x14\xb0\x5b\xea\x0c\x33\x63\x50\x02\x67\x90\x66\x42\x14\xcb\x48\x28\x63\xb5\x88\x35\xd5\x97\xa4\x47\xbb\x9b\x88\x0b\xe6\x0c\xdf\x25\xe8\xe2\xbd\xd7\xbf\x66\x8c\xd4\xb5\xea\x06\x45\xa4\x66\x81\x0e\x4d\x7c\x57\xe4\x3c\x09\x45\xc6\x00\x75\x32\xd4\xf0\x70\x90\x2a\x18\xf1\x19\xf9\x40\x3a\x41\x4a\x95\xe1\x98\x03\x41\x5c\xe0\x08\xac\xd6\xbe\x7b\xb8\x8a\x4c\x2c\x3a\x76\xa1\x1d\x9c\x0d\x4b\x57\x5e\x5f\xa7\x5d\x5c\x27\x54\xcc\x9f\x41\xb5\xdf\x2b\x56\x3c\xaf\xab\xaf\x65\xc3\x13\x74\x89\x2a\xc4\xee\x1d\xe2\x18\xf8\x6d\xf7\x86\xad\xf0\xf7\xed\x0b\xb4\x89\xdc\x66\xfa\x07\xe7\xc5\x62\x29\x11\xad\xc2\x8d\xe5\x94\x43\xd3\xdc\xdd\x58\x04\xff\x4f\x31\xdd\x71\x61\x4e\x51\x4a\x4b\x7e\xd7\x65\xe2\xa2\xd9\x09\xca\xe8\x26\xd3\x46\xc6\xc4\xc5\xd9\xbd\x96\x0e\xc5\xdf\x76\x1d\xed\x86\x7f\xdf\x62\x1a\xad\xb2\xdb\xc4\xfe\xe0\xac\xc8\xf8\xd0\xc7\x0f\xb0\x06\x53\x23\xe6\x06\x49\x84\x59\x88\x1f\x9e\x9e\x77\x13\x51\x45\x43\x0c\x58\xd2\xac\xe9\x77\x44\x35\x86\xe8\xd6\x11\x6d\xa8\xc7\x42\x36\x87\x65\x13\xba\x47\xf9\x04\x09\x7f\x6e\x0d\x96\xa9\xfc\x1d\x8d\xaa\x5d\xbd\x72\x60\x2d\x08\xf6\x5b\x2a\x46\xbe\x73\x6d\x5a\xc2\x35\x45\x7f\xc2\xba\xdb\x15\x54\x35\x50\xe5\xdd\x1b\x6d\xbe\xf7\x4a\xa6\x80\x74\xa1\xfd\xfe\xbb\xea\x7a\x5d\x0b\x5b\xb1\x3c\xc5\x66\x86\x4d\x68\x12\x02\xdb\xbd\xff\x1e\x87\xbf\xf5\xdd\xcc\x16\xfc\xfb\xf6\xdf\xb4\x91\xdd\x16\x01\x8e\xda\xce\x70\xd6\xf3\xf0\x20\x34\xa9\xf6\xfb\x7e\xc6\xfd\x7c\xff\x3f\xe2\x20\x98\x6f\x9d\x95\x2e\x46\x52\xc5\xfe\x58\xc9\x2c\xf5\x9a\xcf\x7c\x77\x76\xca\x92\x16\x56\xe4\x24\xcd\x4c\x7e\x80\xeb\x79\x06\x66\x66\xd1\x21\x2a\x6d\x94\x14\xcb\xa7\x27\xcb\x9a\x71\x6d\x4f\x69\x08\xb1\xfc\x39\xa2\xc9\x2a\x96\x0c\xc4\xe2\x8f\x1b\x57\x36\xd8\x20\x67\xb0\x32\x23\x15\x34\x84\x48\x0a\x2c\x36\x3c\xcc\xbd\x3c\x78\xc1\xcb\xf2\xd5\xfa\x48\x5d\xc3\x4d\x02\xdc\xc2\x88\x66\xc2\xe4\x07\xba\x37\x21\x01\x2b\x00\x0d\x6c\xd0\x73\x8b\x50\x6e\xb9\x57\x85\xd0\x20\x30\x6d\x77\x64\xb6\x8d\x5a\xb9\xaf\x6e\x9c\x28\x53\x5b\x1d\x08\x18\xcf\xe9\x9a\x18\x82\xb8\xf1\x3f\x4f\xaa\x13\xc3\x4f\x1a\x83\x5e\x9d\xda\xb4\x30\xf5\x8f\x4a\xc1\xa0\x15\x99\x6e\xa9\x81\xe0\x91\xc7\x40\xee\xa9\xd2\x27\x97\x8b\x61\x38\x83\xd1\x06\x69\x1e\x6d\x3f\xd5\xec\x64\x0b\xb5\x40\xfa\xfa\xda\xbd\x9d\x5e\x53\xca\x7b\xd6\x76\xf3\x60\xa4\x02\x72\x3b\x4f\x68\xcc\xc3\x42\x8c\xe5\x53\xc0\x92\x1a\xf8\x35\x0b\x9f\x86\x72\xe6\xad\x61\xbb\x8e\x9e\xb6\x91\x06\xac\x88\x74\x24\xea\x6f\xd6\xf1\x59\x50\xe7\x0f\x1b\x51\x9f\x61\xef\xb7\xe0\xf8\x5f\x00\x00\x00\xff\xff\x79\xbe\x2a\xdb\x89\x17\x00\x00")

func staticBleveMappingPartialsMappingIndexMappingHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsMappingIndexMappingHtml,
		"static-bleve-mapping/partials/mapping/index-mapping.html",
	)
}

func staticBleveMappingPartialsMappingIndexMappingHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsMappingIndexMappingHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/mapping/index-mapping.html", size: 6025, mode: os.FileMode(420), modTime: time.Unix(1469218356, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsMappingTypeMappingTreeHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x58\x49\x6f\x1b\xb7\x17\xbf\xe7\x53\x30\x3a\x44\x09\xfe\x7f\x45\xf7\x22\x12\x50\xb8\x08\x7a\x49\xe1\x83\xef\x02\x3d\x43\x49\x84\x29\xce\x60\x48\xb9\x56\x1d\x7d\xf7\xf2\x71\x19\x71\x9d\x25\xf6\xa1\x03\xd8\x9a\x85\x6f\xfb\xf1\xf1\x6d\xdf\x6a\xfa\xbc\xfd\x80\x10\xfc\xa2\x33\x5d\xc9\x8e\x90\xd5\x11\xf3\x9a\x11\xf5\x56\x5f\x15\xc3\x42\x6c\x16\x27\xdc\xb6\x94\x1f\xfe\xd4\xdf\x16\x5b\xfd\xf5\x9b\x68\x31\x47\xfc\xb0\xa2\xfb\x7e\xc1\xd7\xdd\x13\xe5\x35\xda\x6c\xd0\xd2\xbe\x79\xb8\xb4\x64\x69\x29\x14\x0d\x75\x1c\x0f\xec\xd2\x1e\x69\xd5\x70\xd4\xdf\xad\xf6\x14\x98\x7f\x5b\x53\xf5\x07\xcc\x47\xe5\x7c\x2c\xc9\x79\xbd\x1a\x52\xcb\xa6\xcc\x87\xe3\x13\x01\x75\xf9\x99\x31\x4f\xcb\x6d\x4d\xf6\xf8\xcc\x24\xe8\x32\xc2\xe9\x63\xaf\x12\xa9\xa9\x54\x37\x37\x36\x25\x81\xfd\x0a\xa5\xe8\xab\xff\xe1\x7a\x75\xa4\xbe\x38\xc7\xc9\x22\x87\xa5\xec\x84\xc7\x22\xaf\x0d\xe1\xf8\x91\x91\x7a\xb1\xfd\x89\x6a\x2a\xf4\xbd\x0f\x6a\x51\x3f\x4b\x87\x3e\x7d\x42\xee\x95\xc5\x62\x87\x39\x66\x97\x7f\x48\xe7\xc9\x46\xe8\xa7\x67\x42\xbc\xf0\x7a\x9d\x2b\xb2\x57\xbf\xbe\x28\x3c\x68\x15\x89\x6a\x38\xbb\x20\xb5\xf1\xe4\x05\x89\x96\x54\x74\x4f\x15\x99\xfa\xc7\x6a\x11\x4a\x0a\xfc\x67\xd4\x97\xec\xc6\xf9\x36\x6b\xbf\xf8\x68\xfd\xc2\xd3\xa1\xc6\x12\xaf\x78\x53\x77\xf8\x70\xf3\x16\xde\x9e\xe5\xc4\x83\xe0\xb1\x52\x97\x54\xef\x36\x0b\x49\x5e\xe4\x02\xb5\x0c\x57\xe4\xd8\xb0\x9a\x74\x9b\x45\xcb\x08\x16\x04\x11\x2e\x49\x87\xb0\x5e\x87\xb4\xe7\x84\xf4\x4a\xe6\xa9\xa9\x09\x8b\xdc\x6b\x3d\x53\xb5\x5f\x55\xab\xed\x9a\x96\x74\xf2\x32\x5f\xb5\xd1\x3d\xc9\xb8\x61\xe6\x7c\x11\x46\x2a\x99\x11\x95\x78\x6c\xa8\x1b\x50\x34\xad\xa4\x0d\x57\xc7\x49\x22\x2c\x90\x44\xfb\xa6\x53\xff\x29\x47\x8e\xe6\x2f\xa5\x6e\x70\xcc\x0c\x05\x7a\xc6\xec\xac\xd0\x59\x6c\x29\x3f\x92\x8e\xaa\x10\x61\x3e\x78\xae\xa7\xd5\x1a\x8d\x1b\xce\x1c\x4f\x37\xef\x84\xdf\x35\x5c\x76\x0d\x13\x08\x96\x01\x16\x37\xb3\xb1\x5b\xd7\x2a\xe7\x5c\x75\xf4\x70\x94\xe8\x51\x72\xf8\x5b\xbd\x08\x8f\x9f\xe7\xac\x1f\x7c\xdb\x33\x40\x2f\x82\x05\x15\xa3\xd5\x93\xe2\xdf\xb4\xe7\xf6\xa1\x39\x1c\x18\xf9\x6c\xd7\x7f\xf1\x4f\xe4\x70\x34\x6f\xd9\x59\xb8\x68\x8e\x7b\xe5\x21\xd5\xa4\xea\x6b\x49\x60\x32\xa6\x3c\xda\xae\xac\x11\x45\x33\xbc\xfd\x02\x49\x6a\x95\x38\x36\x7f\x5b\x53\xc0\xe7\x2d\x41\xe4\x11\x4e\x23\x58\x15\xc4\x1c\x97\x22\xbd\x37\xd8\x43\x08\xd7\xf5\xdd\x91\xb2\xfa\x87\xe1\x9a\x45\xc9\x5c\x94\x0b\x75\x54\x50\x05\xab\x9d\x12\x1e\x2e\xc6\x57\x22\x61\x13\x85\x7f\x87\x00\x38\x55\xb4\x8e\x96\xc3\x82\x83\xc7\xf0\x61\xd8\xf5\xf4\x0f\xf8\xeb\x04\x1f\xb4\x36\xc0\xea\xdf\x21\xa1\xfd\x8a\x83\x11\x5e\x51\x16\xb9\x58\x31\xb2\xb8\x20\x9f\xf7\x81\xcc\xc9\x1b\x0b\xfb\x6f\x3e\x86\x31\x04\x7f\x34\xbc\x3f\x67\xff\x47\x7b\xcc\x04\x99\x81\x46\x47\x4e\xcd\x33\x49\x0f\xdc\x84\x2d\x13\xe7\xaa\x22\xe2\xed\x2a\xcb\xee\x3c\x47\xe3\xe6\x29\xa7\x6d\x29\x39\x6f\xd4\xc6\x81\x80\x09\x59\x7a\xd4\x60\xd9\x61\x71\x9c\x6e\xae\x81\xf6\x7b\xd7\x9c\xee\x71\xa7\x92\x9f\x67\xf1\x91\x8a\x19\x16\x1b\xb9\x79\x87\x35\x0f\x36\x68\xe5\x10\x48\x0d\xd4\xdb\xd0\x11\x8c\xdc\xcd\x8f\xc4\xb1\x73\x8e\xcb\xf0\x23\x61\x5b\x5b\x1b\x98\x5c\x5f\x1d\x49\xf5\xf4\xd8\xbc\xc4\x89\xb2\x47\x22\x4a\xb0\x2e\xdc\xae\xa3\x60\x63\xdf\xf7\xb1\xc3\x88\x0a\x04\x8f\x47\x6e\x0b\xe4\x1c\xf5\x28\xa7\xd2\x43\xac\x2f\x0e\xef\x80\x50\x95\x11\x9b\xb4\xb2\x9c\x68\x69\xc2\xab\x48\x58\xa9\xce\xe9\x40\xbc\x22\xc4\x08\xf2\x65\xa7\xcc\x62\x00\x07\x2a\xdc\x1c\xa8\x7d\x74\xb6\x37\x70\xd7\xb0\xbe\x97\x53\x1b\x4f\x1c\xdd\x70\xde\x4f\x0d\x37\x42\xdd\x77\xed\x47\x66\x33\xf4\x87\x5b\xae\xb6\x8a\x30\x0a\x3c\x3a\xd2\x12\x2c\xed\x1a\xa8\xa6\xf2\xdc\x50\xa0\x61\xff\xd2\xba\xb5\x5e\x7b\x5b\xaa\xcf\xa1\xfe\xf0\xba\xb4\x47\x61\xf9\x9b\xc1\xa4\x3f\x1b\xd7\x45\x50\x60\xe4\x7b\xd9\x58\x44\xd0\xcd\x6a\xda\xa0\x3e\x0b\x25\x04\xfe\xf9\xfa\x6a\x3e\xba\x02\xb8\xef\xdb\x6e\x5c\x0a\xcd\x5a\x22\xc6\x30\x02\x64\xa1\x55\x73\x8c\xe1\x39\xed\x9e\x06\x88\x75\x2b\xec\x1a\xbd\x65\x52\x03\x64\xa8\x5c\xec\x0c\x2d\x49\xab\x07\xd5\x76\x09\x82\x3b\xe5\xdd\x8a\x35\xd4\xca\xaa\x3b\x76\x6a\x9a\x9e\xb5\x6f\x92\x3d\x79\x19\xcd\xb3\x5a\xb8\x6a\x1b\xa2\xba\x67\x0d\x34\x27\xd0\x7f\xa4\x96\x98\x8e\x33\x24\x0e\xe0\x9f\x25\x5e\x9f\x34\x00\x5e\xdf\x4c\x26\x13\xb2\xe9\xf4\x7e\xe9\x9b\x19\xd2\x2a\x76\xae\xc9\x8e\xf2\x1d\x86\x71\x03\x88\xd5\x6f\xe0\xa4\x28\x58\xe1\x2d\x80\xe9\x8a\xb4\x99\x6c\x55\x53\x76\xda\x3d\xab\xd6\xa3\xe9\xc4\x2c\x3c\x9d\x16\xc0\x00\x59\x06\x13\x10\x4d\xdf\x25\xed\xfe\x50\xfb\x1f\x9d\xaf\x48\x60\x26\x71\x69\x0e\x41\x46\xf1\xb8\x6e\x8b\x98\x05\x99\x44\x37\xb5\xb9\x08\x3e\xd4\xe7\x9a\x68\x96\x69\x72\xcd\x75\x8b\x9d\xd1\x59\x2a\x2c\x76\x89\xc2\xfc\xd6\xf7\x76\xf9\x67\x4d\xfd\x25\x4c\x09\x51\x0a\x4d\x26\x43\x13\x9a\x4a\xb8\x26\x35\x96\x9a\xdb\xfc\x0a\x1f\xae\x42\x93\x96\xaf\xf4\xad\x9d\x49\xc2\x9f\x5d\xeb\xfb\x78\x64\xe1\xf0\x6a\xfe\x28\xa9\x14\x61\x99\xea\x87\x93\xab\xff\xb9\xf0\xe8\x92\x5a\x6b\x9b\xeb\x01\xc6\x91\x2a\xf4\x01\x53\x37\x37\xed\x05\xde\x62\x40\xd2\x11\x8c\xeb\x9f\xe9\x0a\xac\xee\xd9\xb8\xd1\xf7\x05\x85\x8e\x7e\x72\x0f\x30\xd1\xcc\xa4\x17\x70\x96\xc6\x9d\xc0\xb8\xa5\xb9\x6e\x40\x53\x25\x47\xdc\xeb\x0a\x06\xa3\x66\xa9\x2f\xf8\x9e\x71\xfe\x92\x63\xa7\x33\x87\x4c\xc8\x75\x41\x17\x82\x6a\x29\x4f\xc5\xc3\x39\xaf\xd2\xc9\x96\xd0\xc3\x63\x39\x4d\x0d\x33\xd4\xb8\x9a\x8a\x27\x6e\xb7\xb7\x89\xde\xd9\x01\xcb\xcc\x5a\x6a\x08\x8d\xa0\x4e\x2a\xc0\x32\x29\x19\x0d\xa7\xa3\x62\x22\x4a\x53\x51\x38\x0e\x7e\x33\x30\xa5\x32\x62\x08\x14\x57\xa4\xcd\x73\x93\xd2\xe4\xd6\x33\x74\xf6\x04\xb7\x97\x39\x71\x92\x7b\x43\xe7\x9d\xfd\x0b\x60\x54\xc7\x8f\x48\x7a\x22\x73\xa0\x74\x34\xa8\xc5\x9d\x98\x8b\x28\x10\xef\x14\x46\x27\x5c\xf2\xb9\x41\x50\x81\xfc\x41\xc9\xbe\xd7\xa2\xff\xb3\xd0\x86\x47\x37\xd6\x2f\x8a\x8f\x3a\x2c\xde\xd9\xd9\x42\x62\xcf\xe0\x9c\x24\x81\xd7\x74\x12\x71\x3b\x6f\x2e\xfd\x6d\xcc\xc2\xb9\x02\x4d\x0f\x92\x17\xa8\xbf\xbd\xb7\xc0\xa8\x7b\x29\x99\x5a\x6e\x68\xa6\x2a\x34\x23\xf0\x38\xba\x79\x16\xf8\x8d\xd2\x88\x1d\xc5\x96\x68\xdc\x47\x4b\x63\x74\x45\x49\xcd\xc8\xa6\x61\xef\x3a\xb1\xb1\xbf\xb9\x99\x8d\xfd\x34\x32\xb5\xb1\xab\xfc\xb9\x4d\xcc\x73\x78\x72\x93\x0c\xd6\xf3\xb3\x9b\x78\xb2\x79\x0d\x08\x2c\xf4\x9b\x85\x90\x58\xd2\x6a\xd7\x76\x64\x4f\x5f\xd0\xff\xd0\x72\xad\xe2\x9e\xa4\xaa\x26\x5e\x5b\x0e\x6b\xb0\x6e\x65\x1f\xb4\x5a\x5f\x8f\xf2\xc4\x96\x50\x54\xf9\x20\x5b\xf4\xff\x0d\x00\x00\xff\xff\xd4\x96\x1a\x3b\xf0\x20\x00\x00")

func staticBleveMappingPartialsMappingTypeMappingTreeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsMappingTypeMappingTreeHtml,
		"static-bleve-mapping/partials/mapping/type-mapping-tree.html",
	)
}

func staticBleveMappingPartialsMappingTypeMappingTreeHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsMappingTypeMappingTreeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/mapping/type-mapping-tree.html", size: 8432, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsMappingTypeMappingHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x90\xb1\x4e\xc4\x30\x0c\x86\xf7\x3e\x45\x94\xa5\x03\xca\x65\x47\xbd\x2e\xbc\x02\xfb\xc9\x6a\xcc\x61\xc9\x75\xa2\xc4\x87\x40\x88\x77\xc7\xad\x72\x45\x47\xb6\xff\xff\xed\x2f\xb6\xa7\x44\x1f\xee\x46\x41\x2b\xe2\xd9\xe7\xa2\x94\xa5\xf9\x79\x70\x6e\xca\x7c\x0f\x82\xe4\x84\xcd\xbc\xed\xc9\x35\xac\x26\xf9\xec\x57\x28\x85\xe4\xda\x7c\x4f\x12\x28\x04\xfd\x2a\x78\x44\xaf\x26\x5e\xb2\x28\x90\x60\xdd\xa9\xc6\x65\xda\x18\x15\x0b\x82\x1e\x95\x8e\xc4\xfd\xe7\xb9\x87\xff\x0f\x73\x61\x68\xed\x68\xfc\x2b\x36\x68\x8f\xbe\x47\x4c\xa4\x16\x8e\xcf\x77\xe8\xe9\xd2\xad\x9f\x87\x06\x92\x85\x6f\xc9\x06\x6e\x0a\x4a\xcb\xa5\x54\x7c\xa3\x4f\xf7\xe4\xc6\x58\xa0\x2a\x01\xb7\xd8\x09\x71\xdb\x2c\x74\xb1\x8f\x75\x7a\xd7\x95\x47\x3f\x4f\x91\x69\xbf\x58\xcc\x3c\x0f\x53\xb4\x93\xce\xc3\x6f\x00\x00\x00\xff\xff\x6f\x9d\x14\xad\x59\x01\x00\x00")

func staticBleveMappingPartialsMappingTypeMappingHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsMappingTypeMappingHtml,
		"static-bleve-mapping/partials/mapping/type-mapping.html",
	)
}

func staticBleveMappingPartialsMappingTypeMappingHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsMappingTypeMappingHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/mapping/type-mapping.html", size: 345, mode: os.FileMode(420), modTime: time.Unix(1457444800, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static-bleve-mapping/js/mapping/analysis-analyzer.js":                       staticBleveMappingJsMappingAnalysisAnalyzerJs,
	"static-bleve-mapping/js/mapping/analysis-charfilter.js":                     staticBleveMappingJsMappingAnalysisCharfilterJs,
	"static-bleve-mapping/js/mapping/analysis-tokenfilter.js":                    staticBleveMappingJsMappingAnalysisTokenfilterJs,
	"static-bleve-mapping/js/mapping/analysis-tokenizer.js":                      staticBleveMappingJsMappingAnalysisTokenizerJs,
	"static-bleve-mapping/js/mapping/analysis-wordlist.js":                       staticBleveMappingJsMappingAnalysisWordlistJs,
	"static-bleve-mapping/js/mapping/analysis.js":                                staticBleveMappingJsMappingAnalysisJs,
	"static-bleve-mapping/js/mapping/index-mapping.js":                           staticBleveMappingJsMappingIndexMappingJs,
	"static-bleve-mapping/js/mapping/type-mapping.js":                            staticBleveMappingJsMappingTypeMappingJs,
	"static-bleve-mapping/partials/analysis/analyzer.html":                       staticBleveMappingPartialsAnalysisAnalyzerHtml,
	"static-bleve-mapping/partials/analysis/analyzers.html":                      staticBleveMappingPartialsAnalysisAnalyzersHtml,
	"static-bleve-mapping/partials/analysis/charfilter.html":                     staticBleveMappingPartialsAnalysisCharfilterHtml,
	"static-bleve-mapping/partials/analysis/charfilters/generic.html":            staticBleveMappingPartialsAnalysisCharfiltersGenericHtml,
	"static-bleve-mapping/partials/analysis/charfilters/regexp.html":             staticBleveMappingPartialsAnalysisCharfiltersRegexpHtml,
	"static-bleve-mapping/partials/analysis/charfilters.html":                    staticBleveMappingPartialsAnalysisCharfiltersHtml,
	"static-bleve-mapping/partials/analysis/tokenfilter.html":                    staticBleveMappingPartialsAnalysisTokenfilterHtml,
	"static-bleve-mapping/partials/analysis/tokenfilters/dict_compound.html":     staticBleveMappingPartialsAnalysisTokenfiltersDict_compoundHtml,
	"static-bleve-mapping/partials/analysis/tokenfilters/edge_ngram.html":        staticBleveMappingPartialsAnalysisTokenfiltersEdge_ngramHtml,
	"static-bleve-mapping/partials/analysis/tokenfilters/elision.html":           staticBleveMappingPartialsAnalysisTokenfiltersElisionHtml,
	"static-bleve-mapping/partials/analysis/tokenfilters/generic.html":           staticBleveMappingPartialsAnalysisTokenfiltersGenericHtml,
	"static-bleve-mapping/partials/analysis/tokenfilters/keyword_marker.html":    staticBleveMappingPartialsAnalysisTokenfiltersKeyword_markerHtml,
	"static-bleve-mapping/partials/analysis/tokenfilters/length.html":            staticBleveMappingPartialsAnalysisTokenfiltersLengthHtml,
	"static-bleve-mapping/partials/analysis/tokenfilters/ngram.html":             staticBleveMappingPartialsAnalysisTokenfiltersNgramHtml,
	"static-bleve-mapping/partials/analysis/tokenfilters/normalize_unicode.html": staticBleveMappingPartialsAnalysisTokenfiltersNormalize_unicodeHtml,
	"static-bleve-mapping/partials/analysis/tokenfilters/shingle.html":           staticBleveMappingPartialsAnalysisTokenfiltersShingleHtml,
	"static-bleve-mapping/partials/analysis/tokenfilters/stop_tokens.html":       staticBleveMappingPartialsAnalysisTokenfiltersStop_tokensHtml,
	"static-bleve-mapping/partials/analysis/tokenfilters/truncate_token.html":    staticBleveMappingPartialsAnalysisTokenfiltersTruncate_tokenHtml,
	"static-bleve-mapping/partials/analysis/tokenfilters/wordmap.html":           staticBleveMappingPartialsAnalysisTokenfiltersWordmapHtml,
	"static-bleve-mapping/partials/analysis/tokenfilters.html":                   staticBleveMappingPartialsAnalysisTokenfiltersHtml,
	"static-bleve-mapping/partials/analysis/tokenizer.html":                      staticBleveMappingPartialsAnalysisTokenizerHtml,
	"static-bleve-mapping/partials/analysis/tokenizers/exception.html":           staticBleveMappingPartialsAnalysisTokenizersExceptionHtml,
	"static-bleve-mapping/partials/analysis/tokenizers/generic.html":             staticBleveMappingPartialsAnalysisTokenizersGenericHtml,
	"static-bleve-mapping/partials/analysis/tokenizers/regexp.html":              staticBleveMappingPartialsAnalysisTokenizersRegexpHtml,
	"static-bleve-mapping/partials/analysis/tokenizers.html":                     staticBleveMappingPartialsAnalysisTokenizersHtml,
	"static-bleve-mapping/partials/analysis/wordlist.html":                       staticBleveMappingPartialsAnalysisWordlistHtml,
	"static-bleve-mapping/partials/analysis/wordlists.html":                      staticBleveMappingPartialsAnalysisWordlistsHtml,
	"static-bleve-mapping/partials/mapping/index-mapping.html":                   staticBleveMappingPartialsMappingIndexMappingHtml,
	"static-bleve-mapping/partials/mapping/type-mapping-tree.html":               staticBleveMappingPartialsMappingTypeMappingTreeHtml,
	"static-bleve-mapping/partials/mapping/type-mapping.html":                    staticBleveMappingPartialsMappingTypeMappingHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For imps if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"static-bleve-mapping": &bintree{nil, map[string]*bintree{
		"js": &bintree{nil, map[string]*bintree{
			"mapping": &bintree{nil, map[string]*bintree{
				"analysis-analyzer.js":    &bintree{staticBleveMappingJsMappingAnalysisAnalyzerJs, map[string]*bintree{}},
				"analysis-charfilter.js":  &bintree{staticBleveMappingJsMappingAnalysisCharfilterJs, map[string]*bintree{}},
				"analysis-tokenfilter.js": &bintree{staticBleveMappingJsMappingAnalysisTokenfilterJs, map[string]*bintree{}},
				"analysis-tokenizer.js":   &bintree{staticBleveMappingJsMappingAnalysisTokenizerJs, map[string]*bintree{}},
				"analysis-wordlist.js":    &bintree{staticBleveMappingJsMappingAnalysisWordlistJs, map[string]*bintree{}},
				"analysis.js":             &bintree{staticBleveMappingJsMappingAnalysisJs, map[string]*bintree{}},
				"index-mapping.js":        &bintree{staticBleveMappingJsMappingIndexMappingJs, map[string]*bintree{}},
				"type-mapping.js":         &bintree{staticBleveMappingJsMappingTypeMappingJs, map[string]*bintree{}},
			}},
		}},
		"partials": &bintree{nil, map[string]*bintree{
			"analysis": &bintree{nil, map[string]*bintree{
				"analyzer.html":   &bintree{staticBleveMappingPartialsAnalysisAnalyzerHtml, map[string]*bintree{}},
				"analyzers.html":  &bintree{staticBleveMappingPartialsAnalysisAnalyzersHtml, map[string]*bintree{}},
				"charfilter.html": &bintree{staticBleveMappingPartialsAnalysisCharfilterHtml, map[string]*bintree{}},
				"charfilters": &bintree{nil, map[string]*bintree{
					"generic.html": &bintree{staticBleveMappingPartialsAnalysisCharfiltersGenericHtml, map[string]*bintree{}},
					"regexp.html":  &bintree{staticBleveMappingPartialsAnalysisCharfiltersRegexpHtml, map[string]*bintree{}},
				}},
				"charfilters.html": &bintree{staticBleveMappingPartialsAnalysisCharfiltersHtml, map[string]*bintree{}},
				"tokenfilter.html": &bintree{staticBleveMappingPartialsAnalysisTokenfilterHtml, map[string]*bintree{}},
				"tokenfilters": &bintree{nil, map[string]*bintree{
					"dict_compound.html":     &bintree{staticBleveMappingPartialsAnalysisTokenfiltersDict_compoundHtml, map[string]*bintree{}},
					"edge_ngram.html":        &bintree{staticBleveMappingPartialsAnalysisTokenfiltersEdge_ngramHtml, map[string]*bintree{}},
					"elision.html":           &bintree{staticBleveMappingPartialsAnalysisTokenfiltersElisionHtml, map[string]*bintree{}},
					"generic.html":           &bintree{staticBleveMappingPartialsAnalysisTokenfiltersGenericHtml, map[string]*bintree{}},
					"keyword_marker.html":    &bintree{staticBleveMappingPartialsAnalysisTokenfiltersKeyword_markerHtml, map[string]*bintree{}},
					"length.html":            &bintree{staticBleveMappingPartialsAnalysisTokenfiltersLengthHtml, map[string]*bintree{}},
					"ngram.html":             &bintree{staticBleveMappingPartialsAnalysisTokenfiltersNgramHtml, map[string]*bintree{}},
					"normalize_unicode.html": &bintree{staticBleveMappingPartialsAnalysisTokenfiltersNormalize_unicodeHtml, map[string]*bintree{}},
					"shingle.html":           &bintree{staticBleveMappingPartialsAnalysisTokenfiltersShingleHtml, map[string]*bintree{}},
					"stop_tokens.html":       &bintree{staticBleveMappingPartialsAnalysisTokenfiltersStop_tokensHtml, map[string]*bintree{}},
					"truncate_token.html":    &bintree{staticBleveMappingPartialsAnalysisTokenfiltersTruncate_tokenHtml, map[string]*bintree{}},
					"wordmap.html":           &bintree{staticBleveMappingPartialsAnalysisTokenfiltersWordmapHtml, map[string]*bintree{}},
				}},
				"tokenfilters.html": &bintree{staticBleveMappingPartialsAnalysisTokenfiltersHtml, map[string]*bintree{}},
				"tokenizer.html":    &bintree{staticBleveMappingPartialsAnalysisTokenizerHtml, map[string]*bintree{}},
				"tokenizers": &bintree{nil, map[string]*bintree{
					"exception.html": &bintree{staticBleveMappingPartialsAnalysisTokenizersExceptionHtml, map[string]*bintree{}},
					"generic.html":   &bintree{staticBleveMappingPartialsAnalysisTokenizersGenericHtml, map[string]*bintree{}},
					"regexp.html":    &bintree{staticBleveMappingPartialsAnalysisTokenizersRegexpHtml, map[string]*bintree{}},
				}},
				"tokenizers.html": &bintree{staticBleveMappingPartialsAnalysisTokenizersHtml, map[string]*bintree{}},
				"wordlist.html":   &bintree{staticBleveMappingPartialsAnalysisWordlistHtml, map[string]*bintree{}},
				"wordlists.html":  &bintree{staticBleveMappingPartialsAnalysisWordlistsHtml, map[string]*bintree{}},
			}},
			"mapping": &bintree{nil, map[string]*bintree{
				"index-mapping.html":     &bintree{staticBleveMappingPartialsMappingIndexMappingHtml, map[string]*bintree{}},
				"type-mapping-tree.html": &bintree{staticBleveMappingPartialsMappingTypeMappingTreeHtml, map[string]*bintree{}},
				"type-mapping.html":      &bintree{staticBleveMappingPartialsMappingTypeMappingHtml, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: AssetInfo, Prefix: k}
	}
	panic("unreachable")
}
